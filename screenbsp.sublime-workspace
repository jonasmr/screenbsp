{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"nNum",
				"nNumVertexOut"
			],
			[
				"g_nBsp",
				"g_nBspOccluderDrawOccluders"
			],
			[
				"SBs",
				"SOccluderBspViewDesc"
			],
			[
				"g_W",
				"g_Width"
			],
			[
				"vMou",
				"vMouseWorld"
			],
			[
				"g_nOccluder",
				"g_nOccluderClipLevels"
			],
			[
				"BspT",
				"BspOccluderTest"
			],
			[
				"nNumVer",
				"nNumVertexIn"
			],
			[
				"pVerte",
				"pVertexNew"
			],
			[
				"vRig",
				"vRight2"
			],
			[
				"vRi",
				"vRight"
			],
			[
				"g_",
				"g_Height"
			],
			[
				"vrig",
				"vrightzx"
			],
			[
				"vright",
				"vrightx"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 4465,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/jonasm/slasher/sdl/src/video/quartz/SDL_QuartzVideo.m",
			"settings":
			{
				"buffer_size": 57158,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 823 files for \"ptr is\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/math.cpp:\n  581  {\n  582  	m r;\n  583: 	uprintf(\"ptr is %p\\n\", &r);\n  584  	r.x.x = m0.x.x * m1.x.x + m0.y.x * m1.x.y + m0.z.x * m1.x.z + m0.w.x * m1.x.w;\n  585  	r.x.y = m0.x.y * m1.x.x + m0.y.y * m1.x.y + m0.z.y * m1.x.z + m0.w.y * m1.x.w;\n\n2 matches across 2 files\n\n\nSearching 826 files for \"void uprintf\"\n\n/Users/jonasm/screenbsp/base.h:\n   23  typedef ptrdiff_t ptrdiff;\n   24  \n   25: void uprintf(const char* fmt, ...);\n   26  \n   27  #ifdef _WIN32\n\n/Users/jonasm/screenbsp/main.cpp:\n  184  \n  185  #ifdef _WIN32\n  186: void uprintf(const char* fmt, ...)\n  187  {\n  188  	char buffer[32*1024];\n  ...\n  194  }\n  195  #else\n  196: void uprintf(const char* fmt, ...)\n  197  {\n  198  	char buffer[32*1024];\n\n3 matches across 2 files\n\n\nSearching 833 files for \"glViewport\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/glew.c:\n 1275  PFNGLSCISSORINDEXEDPROC __glewScissorIndexed = NULL;\n 1276  PFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv = NULL;\n 1277: PFNGLVIEWPORTARRAYVPROC __glewViewportArrayv = NULL;\n 1278: PFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf = NULL;\n 1279: PFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv = NULL;\n 1280  \n 1281  PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB = NULL;\n ....\n 5447    r = ((glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glScissorIndexed\")) == NULL) || r;\n 5448    r = ((glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)glewGetProcAddress((const GLubyte*)\"glScissorIndexedv\")) == NULL) || r;\n 5449:   r = ((glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)glewGetProcAddress((const GLubyte*)\"glViewportArrayv\")) == NULL) || r;\n 5450:   r = ((glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)glewGetProcAddress((const GLubyte*)\"glViewportIndexedf\")) == NULL) || r;\n 5451:   r = ((glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)glewGetProcAddress((const GLubyte*)\"glViewportIndexedfv\")) == NULL) || r;\n 5452  \n 5453    return r;\n\n/Users/jonasm/screenbsp/program.cpp:\n  308  	glLineWidth(1.f);\n  309  	glClearColor(0.3,0.4,0.6,0);\n  310: 	glViewport(0, 0, g_Width, g_Height);\n  311  	glMatrixMode(GL_PROJECTION);\n  312  	glLoadMatrixf(&g_WorldState.Camera.mprj.x.x);\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_viewport_array:\n   22  	void glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)\n   23  	void glScissorIndexedv (GLuint index, const GLint * v)\n   24: 	void glViewportArrayv (GLuint first, GLsizei count, const GLfloat * v)\n   25: 	void glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)\n   26: 	void glViewportIndexedfv (GLuint index, const GLfloat * v)\n   27  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_head.h:\n 1087  GLAPI void GLAPIENTRY glVertex4sv (const GLshort *v);\n 1088  GLAPI void GLAPIENTRY glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\n 1089: GLAPI void GLAPIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);\n 1090  \n 1091  #define GLEW_VERSION_1_1 GLEW_GET_VAR(__GLEW_VERSION_1_1)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/include/GL/glew.h:\n 1165  GLAPI void GLAPIENTRY glVertex4sv (const GLshort *v);\n 1166  GLAPI void GLAPIENTRY glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\n 1167: GLAPI void GLAPIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);\n 1168  \n 1169  #define GLEW_VERSION_1_1 GLEW_GET_VAR(__GLEW_VERSION_1_1)\n ....\n 6788  typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);\n 6789  typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint * v);\n 6790: typedef void (GLAPIENTRY * PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat * v);\n 6791: typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);\n 6792: typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat * v);\n 6793  \n 6794  #define glDepthRangeArrayv GLEW_GET_FUN(__glewDepthRangeArrayv)\n ....\n 6799  #define glScissorIndexed GLEW_GET_FUN(__glewScissorIndexed)\n 6800  #define glScissorIndexedv GLEW_GET_FUN(__glewScissorIndexedv)\n 6801: #define glViewportArrayv GLEW_GET_FUN(__glewViewportArrayv)\n 6802: #define glViewportIndexedf GLEW_GET_FUN(__glewViewportIndexedf)\n 6803: #define glViewportIndexedfv GLEW_GET_FUN(__glewViewportIndexedfv)\n 6804  \n 6805  #define GLEW_ARB_viewport_array GLEW_GET_VAR(__GLEW_ARB_viewport_array)\n ....\n 15262  GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDPROC __glewScissorIndexed;\n 15263  GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv;\n 15264: GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVPROC __glewViewportArrayv;\n 15265: GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf;\n 15266: GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv;\n 15267  \n 15268  GLEW_FUN_EXPORT PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/glew.c:\n 1275  PFNGLSCISSORINDEXEDPROC __glewScissorIndexed = NULL;\n 1276  PFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv = NULL;\n 1277: PFNGLVIEWPORTARRAYVPROC __glewViewportArrayv = NULL;\n 1278: PFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf = NULL;\n 1279: PFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv = NULL;\n 1280  \n 1281  PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB = NULL;\n ....\n 5447    r = ((glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glScissorIndexed\")) == NULL) || r;\n 5448    r = ((glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)glewGetProcAddress((const GLubyte*)\"glScissorIndexedv\")) == NULL) || r;\n 5449:   r = ((glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)glewGetProcAddress((const GLubyte*)\"glViewportArrayv\")) == NULL) || r;\n 5450:   r = ((glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)glewGetProcAddress((const GLubyte*)\"glViewportIndexedf\")) == NULL) || r;\n 5451:   r = ((glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)glewGetProcAddress((const GLubyte*)\"glViewportIndexedfv\")) == NULL) || r;\n 5452  \n 5453    return r;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/glewinfo.c:\n 2733    glewInfoFunc(\"glScissorIndexed\", glScissorIndexed == NULL);\n 2734    glewInfoFunc(\"glScissorIndexedv\", glScissorIndexedv == NULL);\n 2735:   glewInfoFunc(\"glViewportArrayv\", glViewportArrayv == NULL);\n 2736:   glewInfoFunc(\"glViewportIndexedf\", glViewportIndexedf == NULL);\n 2737:   glewInfoFunc(\"glViewportIndexedfv\", glViewportIndexedfv == NULL);\n 2738  }\n 2739  \n\n51 matches across 8 files\n\n\nSearching 833 files for \"Min\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/debug.cpp:\n   72  }\n   73  \n   74: void DebugDrawBounds(v3 vmin, v3 vmax, uint32_t nColor)\n   75  {\n   76  	ZBREAK();\n   77: 	v3 p0 = vmin;\n   78: 	v3 p1 = vmin;\n   79: 	v3 p2 = vmin;\n   80  	v3 p3 = vmax;\n   81: 	p1.x += vmax.x - vmin.x;\n   82: 	p2.y += vmax.y - vmin.y;\n   83  	DebugDrawLine(p0, p1, nColor);\n   84  	DebugDrawLine(p1, p3, nColor);\n\n/Users/jonasm/screenbsp/debug.h:\n   10  void DebugDrawLine(v4 start, v4 end, uint32_t nColor);\n   11  void DebugDrawLine(v3 start, v3 end, uint32_t nColor);\n   12: void DebugDrawBounds(v3 vmin, v3 vmax, uint32_t nColor);\n   13  void DebugDrawPoly(v4* pVertex, uint32 nNumVertex, uint32_t nColor);\n   14  void DebugDrawBounds(m mObjectToWorld, v3 vSize, uint32 nColor);\n\n/Users/jonasm/screenbsp/glew.c:\n  416  PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders = NULL;\n  417  PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation = NULL;\n  418: PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog = NULL;\n  419  PFNGLGETPROGRAMIVPROC __glewGetProgramiv = NULL;\n  420  PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog = NULL;\n  ...\n  572  PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei = NULL;\n  573  PFNGLBLENDFUNCIPROC __glewBlendFunci = NULL;\n  574: PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading = NULL;\n  575  \n  576  PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX = NULL;\n  ...\n  780  PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv = NULL;\n  781  PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv = NULL;\n  782: PFNGLGETMINMAXPROC __glewGetMinmax = NULL;\n  783: PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv = NULL;\n  784: PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv = NULL;\n  785  PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter = NULL;\n  786  PFNGLHISTOGRAMPROC __glewHistogram = NULL;\n  787: PFNGLMINMAXPROC __glewMinmax = NULL;\n  788  PFNGLRESETHISTOGRAMPROC __glewResetHistogram = NULL;\n  789: PFNGLRESETMINMAXPROC __glewResetMinmax = NULL;\n  790  PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D = NULL;\n  791  \n  ...\n  866  PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB = NULL;\n  867  \n  868: PFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv = NULL;\n  869  PFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex = NULL;\n  870  PFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation = NULL;\n  ...\n  883  PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB = NULL;\n  884  PFNGLGETNMAPIVARBPROC __glewGetnMapivARB = NULL;\n  885: PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB = NULL;\n  886  PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB = NULL;\n  887  PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB = NULL;\n  ...\n  896  PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB = NULL;\n  897  \n  898: PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB = NULL;\n  899  \n  900  PFNGLBINDSAMPLERPROC __glewBindSampler = NULL;\n  ...\n 1098  \n 1099  PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced = NULL;\n 1100: PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamInstanced = NULL;\n 1101  \n 1102  PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB = NULL;\n ....\n 1113  PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v = NULL;\n 1114  PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex = NULL;\n 1115: PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices = NULL;\n 1116  PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding = NULL;\n 1117  \n ....\n 1779  PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT = NULL;\n 1780  PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT = NULL;\n 1781: PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT = NULL;\n 1782: PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT = NULL;\n 1783: PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT = NULL;\n 1784  PFNGLHISTOGRAMEXTPROC __glewHistogramEXT = NULL;\n 1785: PFNGLMINMAXEXTPROC __glewMinmaxEXT = NULL;\n 1786  PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT = NULL;\n 1787: PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT = NULL;\n 1788  \n 1789  PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT = NULL;\n ....\n 1957  PFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT = NULL;\n 1958  \n 1959: PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY = NULL;\n 1960  \n 1961  PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY = NULL;\n ....\n 2613  GLboolean __GLEW_3DFX_tbuffer = GL_FALSE;\n 2614  GLboolean __GLEW_3DFX_texture_compression_FXT1 = GL_FALSE;\n 2615: GLboolean __GLEW_AMD_blend_minmax_factor = GL_FALSE;\n 2616  GLboolean __GLEW_AMD_conservative_depth = GL_FALSE;\n 2617  GLboolean __GLEW_AMD_debug_output = GL_FALSE;\n ....\n 2786  GLboolean __GLEW_ATI_fragment_shader = GL_FALSE;\n 2787  GLboolean __GLEW_ATI_map_object_buffer = GL_FALSE;\n 2788: GLboolean __GLEW_ATI_meminfo = GL_FALSE;\n 2789  GLboolean __GLEW_ATI_pn_triangles = GL_FALSE;\n 2790  GLboolean __GLEW_ATI_separate_stencil = GL_FALSE;\n ....\n 2807  GLboolean __GLEW_EXT_blend_func_separate = GL_FALSE;\n 2808  GLboolean __GLEW_EXT_blend_logic_op = GL_FALSE;\n 2809: GLboolean __GLEW_EXT_blend_minmax = GL_FALSE;\n 2810  GLboolean __GLEW_EXT_blend_subtract = GL_FALSE;\n 2811  GLboolean __GLEW_EXT_clip_volume_hint = GL_FALSE;\n ....\n 2898  GLboolean __GLEW_EXT_vertex_weighting = GL_FALSE;\n 2899  GLboolean __GLEW_EXT_x11_sync_object = GL_FALSE;\n 2900: GLboolean __GLEW_GREMEDY_frame_terminator = GL_FALSE;\n 2901  GLboolean __GLEW_GREMEDY_string_marker = GL_FALSE;\n 2902  GLboolean __GLEW_HP_convolution_border_modes = GL_FALSE;\n ....\n 3021  GLboolean __GLEW_SGIX_async_histogram = GL_FALSE;\n 3022  GLboolean __GLEW_SGIX_async_pixel = GL_FALSE;\n 3023: GLboolean __GLEW_SGIX_blend_alpha_minmax = GL_FALSE;\n 3024  GLboolean __GLEW_SGIX_clipmap = GL_FALSE;\n 3025  GLboolean __GLEW_SGIX_convolution_accuracy = GL_FALSE;\n ....\n 3257    r = ((glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)glewGetProcAddress((const GLubyte*)\"glGetAttachedShaders\")) == NULL) || r;\n 3258    r = ((glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetAttribLocation\")) == NULL) || r;\n 3259:   r = ((glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramInfoLog\")) == NULL) || r;\n 3260    r = ((glGetProgramiv = (PFNGLGETPROGRAMIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramiv\")) == NULL) || r;\n 3261    r = ((glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderInfoLog\")) == NULL) || r;\n ....\n 3479    r = ((glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparatei\")) == NULL) || r;\n 3480    r = ((glBlendFunci = (PFNGLBLENDFUNCIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFunci\")) == NULL) || r;\n 3481:   r = ((glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShading\")) == NULL) || r;\n 3482  \n 3483    return r;\n ....\n 3519  #endif /* GL_3DFX_texture_compression_FXT1 */\n 3520  \n 3521: #ifdef GL_AMD_blend_minmax_factor\n 3522  \n 3523: #endif /* GL_AMD_blend_minmax_factor */\n 3524  \n 3525  #ifdef GL_AMD_conservative_depth\n ....\n 4275    r = ((glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfv\")) == NULL) || r;\n 4276    r = ((glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameteriv\")) == NULL) || r;\n 4277:   r = ((glGetMinmax = (PFNGLGETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmax\")) == NULL) || r;\n 4278:   r = ((glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfv\")) == NULL) || r;\n 4279:   r = ((glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameteriv\")) == NULL) || r;\n 4280    r = ((glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)glewGetProcAddress((const GLubyte*)\"glGetSeparableFilter\")) == NULL) || r;\n 4281    r = ((glHistogram = (PFNGLHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glHistogram\")) == NULL) || r;\n 4282:   r = ((glMinmax = (PFNGLMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glMinmax\")) == NULL) || r;\n 4283    r = ((glResetHistogram = (PFNGLRESETHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogram\")) == NULL) || r;\n 4284:   r = ((glResetMinmax = (PFNGLRESETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmax\")) == NULL) || r;\n 4285    r = ((glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glSeparableFilter2D\")) == NULL) || r;\n 4286  \n ....\n 4509    GLboolean r = GL_FALSE;\n 4510  \n 4511:   r = ((glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramInterfaceiv\")) == NULL) || r;\n 4512    r = ((glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceIndex\")) == NULL) || r;\n 4513    r = ((glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceLocation\")) == NULL) || r;\n ....\n 4552    r = ((glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapfvARB\")) == NULL) || r;\n 4553    r = ((glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapivARB\")) == NULL) || r;\n 4554:   r = ((glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMinmaxARB\")) == NULL) || r;\n 4555    r = ((glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapfvARB\")) == NULL) || r;\n 4556    r = ((glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapuivARB\")) == NULL) || r;\n ....\n 4584    GLboolean r = GL_FALSE;\n 4585  \n 4586:   r = ((glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShadingARB\")) == NULL) || r;\n 4587  \n 4588    return r;\n ....\n 5145  \n 5146    r = ((glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackInstanced\")) == NULL) || r;\n 5147:   r = ((glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackStreamInstanced\")) == NULL) || r;\n 5148  \n 5149    return r;\n ....\n 5182    r = ((glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetIntegeri_v\")) == NULL) || r;\n 5183    r = ((glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformBlockIndex\")) == NULL) || r;\n 5184:   r = ((glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformIndices\")) == NULL) || r;\n 5185    r = ((glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)glewGetProcAddress((const GLubyte*)\"glUniformBlockBinding\")) == NULL) || r;\n 5186  \n ....\n 5584  #endif /* GL_ATI_map_object_buffer */\n 5585  \n 5586: #ifdef GL_ATI_meminfo\n 5587  \n 5588: #endif /* GL_ATI_meminfo */\n 5589  \n 5590  #ifdef GL_ATI_pn_triangles\n ....\n 5810  #endif /* GL_EXT_blend_logic_op */\n 5811  \n 5812: #ifdef GL_EXT_blend_minmax\n 5813  \n 5814: static GLboolean _glewInit_GL_EXT_blend_minmax (GLEW_CONTEXT_ARG_DEF_INIT)\n 5815  {\n 5816    GLboolean r = GL_FALSE;\n ....\n 5821  }\n 5822  \n 5823: #endif /* GL_EXT_blend_minmax */\n 5824  \n 5825  #ifdef GL_EXT_blend_subtract\n ....\n 6442    r = ((glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfvEXT\")) == NULL) || r;\n 6443    r = ((glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterivEXT\")) == NULL) || r;\n 6444:   r = ((glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxEXT\")) == NULL) || r;\n 6445:   r = ((glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfvEXT\")) == NULL) || r;\n 6446:   r = ((glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterivEXT\")) == NULL) || r;\n 6447    r = ((glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glHistogramEXT\")) == NULL) || r;\n 6448:   r = ((glMinmaxEXT = (PFNGLMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glMinmaxEXT\")) == NULL) || r;\n 6449    r = ((glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogramEXT\")) == NULL) || r;\n 6450:   r = ((glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmaxEXT\")) == NULL) || r;\n 6451  \n 6452    return r;\n ....\n 7084  #endif /* GL_EXT_x11_sync_object */\n 7085  \n 7086: #ifdef GL_GREMEDY_frame_terminator\n 7087  \n 7088: static GLboolean _glewInit_GL_GREMEDY_frame_terminator (GLEW_CONTEXT_ARG_DEF_INIT)\n 7089  {\n 7090    GLboolean r = GL_FALSE;\n 7091  \n 7092:   r = ((glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC)glewGetProcAddress((const GLubyte*)\"glFrameTerminatorGREMEDY\")) == NULL) || r;\n 7093  \n 7094    return r;\n 7095  }\n 7096  \n 7097: #endif /* GL_GREMEDY_frame_terminator */\n 7098  \n 7099  #ifdef GL_GREMEDY_string_marker\n ....\n 8480  #endif /* GL_SGIX_async_pixel */\n 8481  \n 8482: #ifdef GL_SGIX_blend_alpha_minmax\n 8483  \n 8484: #endif /* GL_SGIX_blend_alpha_minmax */\n 8485  \n 8486  #ifdef GL_SGIX_clipmap\n ....\n 8886    const GLubyte* s;\n 8887    GLuint dot;\n 8888:   GLint major, minor;\n 8889    const GLubyte* extStart;\n 8890    const GLubyte* extEnd;\n ....\n 8896    \n 8897    major = s[dot-1]-'0';\n 8898:   minor = s[dot+1]-'0';\n 8899  \n 8900:   if (minor < 0 || minor > 9)\n 8901:     minor = 0;\n 8902    if (major<0 || major>9)\n 8903      return GLEW_ERROR_NO_GL_VERSION;\n 8904    \n 8905  \n 8906:   if (major == 1 && minor == 0)\n 8907    {\n 8908      return GLEW_ERROR_GL_VERSION_10_ONLY;\n ....\n 8910    else\n 8911    {\n 8912:     CONST_CAST(GLEW_VERSION_4_3)   = ( major > 4 )                 || ( major == 4 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n 8913:     CONST_CAST(GLEW_VERSION_4_2)   = GLEW_VERSION_4_3   == GL_TRUE || ( major == 4 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n 8914:     CONST_CAST(GLEW_VERSION_4_1)   = GLEW_VERSION_4_2   == GL_TRUE || ( major == 4 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n 8915      CONST_CAST(GLEW_VERSION_4_0)   = GLEW_VERSION_4_1   == GL_TRUE || ( major == 4               ) ? GL_TRUE : GL_FALSE;\n 8916:     CONST_CAST(GLEW_VERSION_3_3)   = GLEW_VERSION_4_0   == GL_TRUE || ( major == 3 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n 8917:     CONST_CAST(GLEW_VERSION_3_2)   = GLEW_VERSION_3_3   == GL_TRUE || ( major == 3 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n 8918:     CONST_CAST(GLEW_VERSION_3_1)   = GLEW_VERSION_3_2   == GL_TRUE || ( major == 3 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n 8919      CONST_CAST(GLEW_VERSION_3_0)   = GLEW_VERSION_3_1   == GL_TRUE || ( major == 3               ) ? GL_TRUE : GL_FALSE;\n 8920:     CONST_CAST(GLEW_VERSION_2_1)   = GLEW_VERSION_3_0   == GL_TRUE || ( major == 2 && minor >= 1 ) ? GL_TRUE : GL_FALSE;    \n 8921      CONST_CAST(GLEW_VERSION_2_0)   = GLEW_VERSION_2_1   == GL_TRUE || ( major == 2               ) ? GL_TRUE : GL_FALSE;\n 8922:     CONST_CAST(GLEW_VERSION_1_5)   = GLEW_VERSION_2_0   == GL_TRUE || ( major == 1 && minor >= 5 ) ? GL_TRUE : GL_FALSE;\n 8923:     CONST_CAST(GLEW_VERSION_1_4)   = GLEW_VERSION_1_5   == GL_TRUE || ( major == 1 && minor >= 4 ) ? GL_TRUE : GL_FALSE;\n 8924:     CONST_CAST(GLEW_VERSION_1_3)   = GLEW_VERSION_1_4   == GL_TRUE || ( major == 1 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n 8925      CONST_CAST(GLEW_VERSION_1_2_1) = GLEW_VERSION_1_3   == GL_TRUE                                 ? GL_TRUE : GL_FALSE; \n 8926:     CONST_CAST(GLEW_VERSION_1_2)   = GLEW_VERSION_1_2_1 == GL_TRUE || ( major == 1 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n 8927:     CONST_CAST(GLEW_VERSION_1_1)   = GLEW_VERSION_1_2   == GL_TRUE || ( major == 1 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n 8928    }\n 8929  \n ....\n 8986    CONST_CAST(GLEW_3DFX_texture_compression_FXT1) = _glewSearchExtension(\"GL_3DFX_texture_compression_FXT1\", extStart, extEnd);\n 8987  #endif /* GL_3DFX_texture_compression_FXT1 */\n 8988: #ifdef GL_AMD_blend_minmax_factor\n 8989:   CONST_CAST(GLEW_AMD_blend_minmax_factor) = _glewSearchExtension(\"GL_AMD_blend_minmax_factor\", extStart, extEnd);\n 8990: #endif /* GL_AMD_blend_minmax_factor */\n 8991  #ifdef GL_AMD_conservative_depth\n 8992    CONST_CAST(GLEW_AMD_conservative_depth) = _glewSearchExtension(\"GL_AMD_conservative_depth\", extStart, extEnd);\n ....\n 9594    if (glewExperimental || GLEW_ATI_map_object_buffer) CONST_CAST(GLEW_ATI_map_object_buffer) = !_glewInit_GL_ATI_map_object_buffer(GLEW_CONTEXT_ARG_VAR_INIT);\n 9595  #endif /* GL_ATI_map_object_buffer */\n 9596: #ifdef GL_ATI_meminfo\n 9597:   CONST_CAST(GLEW_ATI_meminfo) = _glewSearchExtension(\"GL_ATI_meminfo\", extStart, extEnd);\n 9598: #endif /* GL_ATI_meminfo */\n 9599  #ifdef GL_ATI_pn_triangles\n 9600    CONST_CAST(GLEW_ATI_pn_triangles) = _glewSearchExtension(\"GL_ATI_pn_triangles\", extStart, extEnd);\n ....\n 9666    CONST_CAST(GLEW_EXT_blend_logic_op) = _glewSearchExtension(\"GL_EXT_blend_logic_op\", extStart, extEnd);\n 9667  #endif /* GL_EXT_blend_logic_op */\n 9668: #ifdef GL_EXT_blend_minmax\n 9669:   CONST_CAST(GLEW_EXT_blend_minmax) = _glewSearchExtension(\"GL_EXT_blend_minmax\", extStart, extEnd);\n 9670:   if (glewExperimental || GLEW_EXT_blend_minmax) CONST_CAST(GLEW_EXT_blend_minmax) = !_glewInit_GL_EXT_blend_minmax(GLEW_CONTEXT_ARG_VAR_INIT);\n 9671: #endif /* GL_EXT_blend_minmax */\n 9672  #ifdef GL_EXT_blend_subtract\n 9673    CONST_CAST(GLEW_EXT_blend_subtract) = _glewSearchExtension(\"GL_EXT_blend_subtract\", extStart, extEnd);\n ....\n 9990    if (glewExperimental || GLEW_EXT_x11_sync_object) CONST_CAST(GLEW_EXT_x11_sync_object) = !_glewInit_GL_EXT_x11_sync_object(GLEW_CONTEXT_ARG_VAR_INIT);\n 9991  #endif /* GL_EXT_x11_sync_object */\n 9992: #ifdef GL_GREMEDY_frame_terminator\n 9993:   CONST_CAST(GLEW_GREMEDY_frame_terminator) = _glewSearchExtension(\"GL_GREMEDY_frame_terminator\", extStart, extEnd);\n 9994:   if (glewExperimental || GLEW_GREMEDY_frame_terminator) CONST_CAST(GLEW_GREMEDY_frame_terminator) = !_glewInit_GL_GREMEDY_frame_terminator(GLEW_CONTEXT_ARG_VAR_INIT);\n 9995: #endif /* GL_GREMEDY_frame_terminator */\n 9996  #ifdef GL_GREMEDY_string_marker\n 9997    CONST_CAST(GLEW_GREMEDY_string_marker) = _glewSearchExtension(\"GL_GREMEDY_string_marker\", extStart, extEnd);\n ....\n 10413    CONST_CAST(GLEW_SGIX_async_pixel) = _glewSearchExtension(\"GL_SGIX_async_pixel\", extStart, extEnd);\n 10414  #endif /* GL_SGIX_async_pixel */\n 10415: #ifdef GL_SGIX_blend_alpha_minmax\n 10416:   CONST_CAST(GLEW_SGIX_blend_alpha_minmax) = _glewSearchExtension(\"GL_SGIX_blend_alpha_minmax\", extStart, extEnd);\n 10417: #endif /* GL_SGIX_blend_alpha_minmax */\n 10418  #ifdef GL_SGIX_clipmap\n 10419    CONST_CAST(GLEW_SGIX_clipmap) = _glewSearchExtension(\"GL_SGIX_clipmap\", extStart, extEnd);\n .....\n 12370  GLenum glxewContextInit (GLXEW_CONTEXT_ARG_DEF_LIST)\n 12371  {\n 12372:   int major, minor;\n 12373    const GLubyte* extStart;\n 12374    const GLubyte* extEnd;\n .....\n 12382    CONST_CAST(GLXEW_VERSION_1_4) = GL_TRUE;\n 12383    /* query GLX version */\n 12384:   glXQueryVersion(glXGetCurrentDisplay(), &major, &minor);\n 12385:   if (major == 1 && minor <= 3)\n 12386    {\n 12387:     switch (minor)\n 12388      {\n 12389        case 3:\n .....\n 12827        if (_glewStrSame2(&pos, &len, (const GLubyte*)\"AMD_\", 4))\n 12828        {\n 12829: #ifdef GL_AMD_blend_minmax_factor\n 12830:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_minmax_factor\", 19))\n 12831          {\n 12832:           ret = GLEW_AMD_blend_minmax_factor;\n 12833            continue;\n 12834          }\n .....\n 14050          }\n 14051  #endif\n 14052: #ifdef GL_ATI_meminfo\n 14053:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"meminfo\", 7))\n 14054          {\n 14055:           ret = GLEW_ATI_meminfo;\n 14056            continue;\n 14057          }\n .....\n 14200          }\n 14201  #endif\n 14202: #ifdef GL_EXT_blend_minmax\n 14203:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_minmax\", 12))\n 14204          {\n 14205:           ret = GLEW_EXT_blend_minmax;\n 14206            continue;\n 14207          }\n .....\n 14840        if (_glewStrSame2(&pos, &len, (const GLubyte*)\"GREMEDY_\", 8))\n 14841        {\n 14842: #ifdef GL_GREMEDY_frame_terminator\n 14843:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"frame_terminator\", 16))\n 14844          {\n 14845:           ret = GLEW_GREMEDY_frame_terminator;\n 14846            continue;\n 14847          }\n .....\n 15755          }\n 15756  #endif\n 15757: #ifdef GL_SGIX_blend_alpha_minmax\n 15758:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_alpha_minmax\", 18))\n 15759          {\n 15760:           ret = GLEW_SGIX_blend_alpha_minmax;\n 15761            continue;\n 15762          }\n\n/Users/jonasm/screenbsp/main.cpp:\n  120  \n  121  int ProgramMain();\n  122: void ProgramInit();\n  123  \n  124  #ifdef _WIN32\n  ...\n  158  \n  159  \n  160: 	ProgramInit();\n  161  	\n  162  	while(!g_nQuit)\n\n/Users/jonasm/screenbsp/Makefile:\n    1  \n    2  LDFLAGS=-framework OpenGL -framework CoreAudio `/usr/local/bin/sdl-config --static-libs`\n    3: CFLAGS=`/usr/local/bin/sdl-config --cflags` -mmacosx-version-min=\"10.7\" -Iglew/glew-1.9.0/include -DGLEW_STATIC -Wno-c++11-extensions\n    4  CFLAGS+=-g -O0 -Wno-invalid-offsetof\n    5  \n\n/Users/jonasm/screenbsp/math.cpp:\n  243   		float fDist = size.x-d0;\n  244   		float fDistHat = size.y-d0hat;\n  245:  		float fMinDist = Min(fDist, fDistHat);\n  246:  		if(fMinDist > fPenetration)\n  247   		{\n  248   			pointout_ = p0;\n  ...\n  258   		float fDist = size.x-d1;\n  259   		float fDistHat = size.y-d1hat;\n  260:  		float fMinDist = Min(fDist, fDistHat);\n  261:  		if(fMinDist > fPenetration)\n  262   		{\n  263   			pointout_ = p1;\n  ...\n  273   		float fDist = size.x-d2;\n  274   		float fDistHat = size.y-d2hat;\n  275:   		float fMinDist = Min(fDist, fDistHat);\n  276:  		if(fMinDist > fPenetration)\n  277   		{\n  278   			pointout_ = p2;\n  ...\n  288   		float fDist = size.x-d3;\n  289   		float fDistHat = size.y-d3hat;\n  290:   		float fMinDist = Min(fDist, fDistHat);\n  291:  		if(fMinDist > fPenetration)\n  292   		{\n  293   			pointout_ = p3;\n  ...\n  315  }\n  316  \n  317: void v2createbounds(v2 vPosition, v2 vDirection, v2 vSize, v2& min_, v2& max_)\n  318  {\n  319  	v2 p0,p1,p2,p3;\n  320  	v2createcorners(vPosition, vDirection, vSize, p0, p1, p2, p3);\n  321: 	min_ = v2min(v2min(p2,p3), v2min(p0,p1));\n  322  	max_ = v2max(v2max(p2,p3), v2max(p0,p1));\n  323  }\n  ...\n  561  \n  562  }\n  563: v3 v3min(v3 a, v3 b)\n  564  {\n  565  	v3 r;\n  ...\n  569  	return r;\n  570  }\n  571: v3 v3min(v3 a, float f)\n  572  {\n  573  	v3 r;\n  ...\n  847  \n  848  \n  849: m minit(v3 vx, v3 vy, v3 vz, v3 vtrans)\n  850  {\n  851  	m r;\n  ...\n  856  	return r;\n  857  }\n  858: m minit(v4 vx, v4 vy, v4 vz, v4 vtrans)\n  859  {\n  860  	m r;\n  ...\n 1064  \n 1065  \n 1066: m minverse(m mat)\n 1067  {\n 1068  	m inv = mid();\n ....\n 1101  \n 1102  	float ymax = fNear * tan(fFovY * PI / 360.f);\n 1103: 	float ymin = -ymax;\n 1104  	float xmax = ymax * fAspect;\n 1105: 	float xmin = ymin * fAspect;\n 1106  \n 1107: 	float width = ymax - xmin;\n 1108: 	float height = xmax - ymin;\n 1109  	float w = 2 * fNear / width;\n 1110  	w = w / fAspect;\n ....\n 1169  	mat.z.z = axis.z;\n 1170  }\n 1171: m minverserotation(m mat)\n 1172  {\n 1173  	m r = mat;\n ....\n 1191  	// rot^ * p + rot^ * (-trans) = x\n 1192  \n 1193: 	m mrot = minverserotation(mat);\n 1194  	v3 trans = -mat.trans.tov3();\n 1195  	mrot.trans = v4init(mrotate(mrot, trans), 1.f);\n ....\n 1240  }\n 1241  \n 1242: int32_t randrange(int32_t nmin, int32_t nmax)\n 1243  {\n 1244: 	if(nmin == nmax) return nmin;\n 1245  	int r = rand();\n 1246: 	return nmin + (r % (nmax-nmin));\n 1247  }\n 1248  \n ....\n 1252  }\n 1253  \n 1254: float frandrange(float fmin, float fmax)\n 1255  {\n 1256: 	return frand() * (fmax-fmin) + fmin;	\n 1257  }\n 1258  \n\n/Users/jonasm/screenbsp/math.h:\n  166  }\n  167  inline\n  168: v2 v2min(v2 v0, v2 v1)\n  169  {\n  170  	v2 r; \n  ...\n  181  v2 v2floor(v2 v){v2 r = v; r.x = floor(r.x); r.y = floor(r.y); return r;}\n  182  inline\n  183: v2 v2clamp(v2 value, v2 min_, v2 max_){ return v2min(max_, v2max(min_, value)); }\n  184  inline\n  185  v2 v2lerp(v2 from_, v2 to_, float fLerp) { return from_ + (to_-from_) * fLerp; }\n  ...\n  187  float v2ManhattanDistance(v2 from_, v2 to_) { return (fabs(from_.x-to_.x) + fabs(from_.y-to_.y)); }\n  188  inline\n  189: float fclamp(float value, float min_, float max_){ if(value<min_) return min_; if(value>max_) return max_; return value; }\n  190  \n  191  float v2findpenetration(v2 pos, v2 dir, v2 size, v2 p0, v2 p1, v2 p2, v2 p3, v2& dirout, v2& pointout);\n  192: void v2createbounds(v2 vPosition, v2 vDirection, v2 vSize, v2& min_, v2& max_);\n  193  void v2createcorners(v2 vPosition, v2 vDirection, v2 vSize, v2& p0, v2& p1, v2& p2, v2& p3);\n  194  bool v2fucked(v2 v);\n  ...\n  231  float v3lengthsq(v3 v);\n  232  v3 v3normalize(v3 v);\n  233: v3 v3min(v3 a, v3 b);\n  234: v3 v3min(v3 a, float f);\n  235  v3 v3max(v3 a, v3 b);\n  236  v3 v3max(v3 a, float f);\n  ...\n  273  \n  274  \n  275: m minit(v3 vx, v3 vy, v3 vz, v3 vtrans);\n  276  m mid();\n  277  m mcreate(v3 vDir, v3 vRight, v3 vPoint);\n  ...\n  287  v4 mtransform(m mat, v4 vector);\n  288  v3 mrotate(m mat, v3 vector);\n  289: m minverse(m);\n  290  void msetxaxis(m& mat, v3 axis);\n  291  void msetyaxis(m& mat, v3 axis);\n  ...\n  294  inline v3 mgetyaxis(const m& mat){v3 r; r.x = mat.y.x; r.y = mat.y.y; r.z = mat.y.z; return r;}\n  295  inline v3 mgetzaxis(const m& mat){v3 r; r.x = mat.z.x; r.y = mat.z.y; r.z = mat.z.z; return r;}\n  296: m minverserotation(m mat);\n  297  m maffineinverse(m mat);\n  298  void ZASSERTAFFINE(m mat);\n  ...\n  302  \n  303  float frand();\n  304: int32_t randrange(int32_t nmin, int32_t nmax);\n  305: float frandrange(float fmin, float fmax);\n  306  v2 v2randir();\n  307  v2 v2randdisc();\n  ...\n  324  \n  325  template<typename T>\n  326: T Min(T a, T b)\n  327  { return a < b ? a : b; }\n  328  \n  ...\n  333  template<typename T>\n  334  T Clamp(T v, T a, T b)\n  335: { return Max(Min(v,b), a); }\n  336  \n\n/Users/jonasm/screenbsp/program.cpp:\n  215  \n  216  		m mview = mcreate(g_WorldState.Camera.vDir, g_WorldState.Camera.vRight, v3init(0,0,0));\n  217: 		m mviewinv = minverserotation(mview);\n  218  		v3 vNewDir = mtransform(mrotx, v3init(0,0,-1));\n  219  		g_WorldState.Camera.vDir = mtransform(mviewinv, vNewDir);\n  ...\n  249  \n  250  \n  251: 	g_WorldState.Camera.mprjinv = minverse(g_WorldState.Camera.mprj);\n  252  	g_WorldState.Camera.mviewinv = maffineinverse(g_WorldState.Camera.mview);\n  253  \n  254  	m identity = mmult(g_WorldState.Camera.mprj, g_WorldState.Camera.mprjinv);\n  255: 	m mprj2 = minverse(g_WorldState.Camera.mprjinv);\n  256  \n  257  //	ZBREAK();\n  ...\n  285  }\n  286  \n  287: void ProgramInit()\n  288  {\n  289  	m mroty = mrotatey(45.f * TORAD);\n\n/Users/jonasm/screenbsp/stb_image.c:\n   23  \n   24     Latest revisions:\n   25:       1.33 (2011-07-14) minor fixes suggested by Dave Moore\n   26        1.32 (2011-07-13) info support for all filetypes (SpartanJ)\n   27        1.31 (2011-06-19) a few more leak fixes, bug in PNG handling (SpartanJ)\n   ..\n  125  // iPhone PNG support:\n  126  //\n  127: // By default we convert iphone-formatted PNGs back to RGB; nominally they\n  128  // would silently load as BGR, except the existing code should have just\n  129  // failed on such iPhone PNGs. But you can disable this conversion by\n  ...\n  144  // generically. You can still load any file through the existing interface;\n  145  // if you attempt to load an HDR file, it will be automatically remapped to\n  146: // LDR, assuming gamma 2.2 and an arbitrary scale factor defaulting to 1;\n  147  // both of these constants can be reconfigured through this interface:\n  148  //\n  ...\n 1070     if (j->code_bits < 16) grow_buffer_unsafe(j);\n 1071  \n 1072:    // look at the top FAST_BITS and determine what symbol ID it is,\n 1073     // if the code is <= FAST_BITS\n 1074     c = (j->code_buffer >> (32 - FAST_BITS)) & ((1 << FAST_BITS)-1);\n ....\n 1395              for (k=0; k < z->scan_n; ++k) {\n 1396                 int n = z->order[k];\n 1397:                // scan out an mcu's worth of this component; that's just determined\n 1398                 // by the basic H and V specified for the component\n 1399                 for (y=0; y < z->img_comp[n].v; ++y) {\n ....\n 1816     if (!decode_jpeg_image(z)) { cleanup_jpeg(z); return NULL; }\n 1817  \n 1818:    // determine actual number of components to generate\n 1819     n = req_comp ? req_comp : z->s->img_n;\n 1820  \n ....\n 2259  }\n 2260  \n 2261: int stbi_png_partial; // a quick hack to only allow decoding some of a PNG... I should implement real streaming support instead\n 2262  static int parse_zlib(zbuf *a, int parse_header)\n 2263  {\n ....\n 2381  //      - no CRC checking\n 2382  //      - allocates lots of intermediate memory\n 2383: //        - avoids problem of streaming data between subsystems\n 2384  //        - avoids explicit window management\n 2385  //    performance\n ....\n 2565     uint8 *p = z->out;\n 2566  \n 2567:    // compute color-based transparency, assuming we've\n 2568     // already got 255 as the alpha value in the output\n 2569     assert(out_n == 2 || out_n == 4);\n ....\n 3358           {\n 3359           case 8:\n 3360:             //   Luminous => RGBA\n 3361              trans_data[0] = raw_data[0];\n 3362              trans_data[1] = raw_data[0];\n ....\n 3365              break;\n 3366           case 16:\n 3367:             //   Luminous,Alpha => RGBA\n 3368              trans_data[0] = raw_data[0];\n 3369              trans_data[1] = raw_data[0];\n ....\n 3393        {\n 3394        case 1:\n 3395:          //   RGBA => Luminance\n 3396           tga_data[i*req_comp+0] = compute_y(trans_data[0],trans_data[1],trans_data[2]);\n 3397           break;\n 3398        case 2:\n 3399:          //   RGBA => Luminance,Alpha\n 3400           tga_data[i*req_comp+0] = compute_y(trans_data[0],trans_data[1],trans_data[2]);\n 3401           tga_data[i*req_comp+1] = trans_data[3];\n ....\n 4162           }\n 4163  \n 4164:          case 0x3B: // gif stream termination code\n 4165              return (uint8 *) 1;\n 4166  \n ....\n 4589     revision history:\n 4590        1.33 (2011-07-14)\n 4591:              make stbi_is_hdr work in STBI_NO_HDR (as specified), minor compiler-friendly improvements\n 4592        1.32 (2011-07-13)\n 4593               support for \"info\" function for all supported filetypes (SpartanJ)\n ....\n 4612        1.24 (2010-07-12)\n 4613               perf improvements reading from files on platforms with lock-heavy fgetc()\n 4614:              minor perf improvements for jpeg\n 4615               deprecated type-specific functions so we'll get feedback if they're needed\n 4616               attempt to fix trans_data warning (Won Chun)\n ....\n 4641        1.07   attempt to fix C++ warning/errors again\n 4642        1.06   attempt to fix C++ warning/errors again\n 4643:       1.05   fix TGA loading to return correct *comp and use good luminance calc\n 4644        1.04   default float alpha is 1, not 255; use 'void *' for stbi_image_free\n 4645        1.03   bugfixes to STBI_NO_STDIO, STBI_NO_HDR\n ....\n 4667        0.54   allow NULL for 'int *comp'\n 4668        0.53   fix bug in png 3->4; speedup png decoding\n 4669:       0.52   png handles req_comp=3,4 directly; minor cleanup; jpeg comments\n 4670        0.51   obey req_comp requests, 1-component jpegs return as 1-component,\n 4671               on 'test' only check type, not whether we support this variant\n\n/Users/jonasm/screenbsp/text.cpp:\n   96  	glBindTexture(GL_TEXTURE_2D, g_FontDescription.nTextureId);\n   97  	{\n   98:         glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n   99          glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);     \n  100          glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);\n  ...\n  223  		pPlot->nCount = nLen;\n  224  		char* pDest = &g_TextRenderState.Lines[nY].c[0];\n  225: 		uint32_t nEnd = Min<uint32_t>(nLen + nX, TEXT_SCREEN_WIDTH);\n  226  		for(uint32_t i = nX; i < nEnd; ++i)\n  227  			pDest[i] = *s++;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/Makefile:\n  221  	$(INSTALL) -d -m 0755 $(LIBDIR)\n  222  # runtime\n  223: ifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n  224  	$(INSTALL) -d -m 0755 $(BINDIR)\n  225  	$(INSTALL) -m 0755 lib/$(LIB.SHARED) $(BINDIR)/\n  ...\n  232  \n  233  # development files\n  234: ifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n  235  	$(INSTALL) -m 0644 lib/$(LIB.DEVLNK) $(LIBDIR)/\n  236  endif\n  ...\n  243  	$(INSTALL) -d -m 0755 $(LIBDIR)\n  244  # runtime\n  245: ifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n  246  	$(INSTALL) -d -m 0755 $(BINDIR)\n  247  	$(INSTALL) -m 0755 lib/$(LIB.SHARED.MX) $(BINDIR)/\n  ...\n  253  endif\n  254  # development files\n  255: ifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n  256  	$(INSTALL) -m 0644 lib/$(LIB.DEVLNK.MX) $(LIBDIR)/\n  257  endif\n  ...\n  286  	$(RM) $(INCDIR)/glxew.h\n  287  	$(RM) $(LIBDIR)/$(LIB.DEVLNK) $(LIBDIR)/$(LIB.DEVLNK.MX)\n  288: ifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n  289  	$(RM) $(BINDIR)/$(LIB.SHARED) $(BINDIR)/$(LIB.SHARED.MX)\n  290  else\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/TODO.txt:\n    1  Major:\n    2:  - add support for windows mini-client drivers\n    3   - add windows installer (msi)\n    4:  - separate build of static and shared object files (for mingw and\n    5   cygwin)\n    6   - start designing GLEW 2.0\n    7  \n    8: Minor:\n    9   - make auto scripts work with text mode cygwin mounts\n   10   - add support for all SUN, MTX, and OML extensions\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/Makefile:\n  215  	perl -e \"s/GLEW_VERSION_STRING/$(GLEW_VERSION)/g\" -pi $@\n  216  	perl -e \"s/GLEW_VERSION_MAJOR_STRING/$(GLEW_MAJOR)/g\" -pi $@\n  217: 	perl -e \"s/GLEW_VERSION_MINOR_STRING/$(GLEW_MINOR)/g\" -pi $@\n  218  	perl -e \"s/GLEW_VERSION_MICRO_STRING/$(GLEW_MICRO)/g\" -pi $@\n  219  	perl -e \"s/GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader\\(GLEW_CONTEXT_ARG_VAR_INIT\\);/{ GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader(GLEW_CONTEXT_ARG_VAR_INIT); _glewInit_GL_ARB_vertex_program(GLEW_CONTEXT_ARG_VAR_INIT); }/g\" -pi $@\n  ...\n  270  	perl -e \"s/GLEW_VERSION_STRING/$(GLEW_VERSION)/g\" -pi $@\n  271  	perl -e \"s/GLEW_VERSION_MAJOR_STRING/$(GLEW_MAJOR)/g\" -pi $@\n  272: 	perl -e \"s/GLEW_VERSION_MINOR_STRING/$(GLEW_MINOR)/g\" -pi $@\n  273  	perl -e \"s/GLEW_VERSION_MICRO_STRING/$(GLEW_MICRO)/g\" -pi $@\n  274  	perl -e \"s/GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader\\(GLEW_CONTEXT_ARG_VAR_INIT\\);/{ GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader(GLEW_CONTEXT_ARG_VAR_INIT); _glewInit_GL_ARB_vertex_program(GLEW_CONTEXT_ARG_VAR_INIT); }/g\" -pi $@\n  ...\n  357  \n  358  $(B.DEST)/%.rc: src/%.rc $(EXT)/.dummy\n  359: 	perl -e \"s/GLEW_MAJOR/$(GLEW_MAJOR)/g;s/GLEW_MINOR/$(GLEW_MINOR)/g;s/GLEW_MICRO/$(GLEW_MICRO)/g;\" -p $< > $@\n  360  \n  361  clean:\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_APPLE_float_pixels:\n    8  	GL_ALPHA_FLOAT32_APPLE 0x8816\n    9  	GL_INTENSITY_FLOAT32_APPLE 0x8817\n   10: 	GL_LUMINANCE_FLOAT32_APPLE 0x8818\n   11: 	GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819\n   12  	GL_RGBA_FLOAT16_APPLE 0x881A\n   13  	GL_RGB_FLOAT16_APPLE 0x881B\n   14  	GL_ALPHA_FLOAT16_APPLE 0x881C\n   15  	GL_INTENSITY_FLOAT16_APPLE 0x881D\n   16: 	GL_LUMINANCE_FLOAT16_APPLE 0x881E\n   17: 	GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F\n   18  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_APPLE_pixel_buffer:\n    2  \n    3  GL_APPLE_pixel_buffer\n    4: 	GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE 0x8A10\n    5  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_ARB_imaging:\n    3  GL_ARB_imaging\n    4  	GL_CONSTANT_COLOR 0x8001\n    5: 	GL_ONE_MINUS_CONSTANT_COLOR 0x8002\n    6  	GL_CONSTANT_ALPHA 0x8003\n    7: 	GL_ONE_MINUS_CONSTANT_ALPHA 0x8004\n    8  	GL_BLEND_COLOR 0x8005\n    9  	GL_FUNC_ADD 0x8006\n   10: 	GL_MIN 0x8007\n   11  	GL_MAX 0x8008\n   12  	GL_BLEND_EQUATION 0x8009\n   ..\n   41  	GL_HISTOGRAM_BLUE_SIZE 0x802A\n   42  	GL_HISTOGRAM_ALPHA_SIZE 0x802B\n   43: 	GL_HISTOGRAM_LUMINANCE_SIZE 0x802C\n   44  	GL_HISTOGRAM_SINK 0x802D\n   45: 	GL_MINMAX 0x802E\n   46: 	GL_MINMAX_FORMAT 0x802F\n   47: 	GL_MINMAX_SINK 0x8030\n   48  	GL_TABLE_TOO_LARGE 0x8031\n   49  	GL_COLOR_MATRIX 0x80B1\n   ..\n   72  	GL_COLOR_TABLE_BLUE_SIZE 0x80DC\n   73  	GL_COLOR_TABLE_ALPHA_SIZE 0x80DD\n   74: 	GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE\n   75  	GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF\n   76  	GL_IGNORE_BORDER 0x8150\n   ..\n   93  	void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   94  	void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)\n   95: 	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink)\n   96: 	void glResetMinmax (GLenum target)\n   97: 	void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   98: 	void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)\n   99  	void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)\n  100  	void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)\n  ...\n  110  	void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)\n  111  	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)\n  112: 	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)\n  113  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_ARB_robustness:\n   17  	void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v)\n   18  	void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v)\n   19: 	void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values)\n   20  	void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values)\n   21  	void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_ATI_texture_compression_3dc:\n    2  \n    3  GL_ATI_texture_compression_3dc\n    4: 	GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI 0x8837\n    5  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_EXT_depth_bounds_test:\n    4  	GL_DEPTH_BOUNDS_TEST_EXT 0x8890\n    5  	GL_DEPTH_BOUNDS_EXT 0x8891\n    6: 	void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax)\n    7  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_EXT_texture_compression_latc:\n    2  http://developer.download.nvidia.com/opengl/specs/GL_EXT_texture_compression_latc.txt\n    3  GL_EXT_texture_compression_latc\n    4: 	GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70\n    5: 	GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71\n    6: 	GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72\n    7: 	GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73\n    8  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_EXT_texture_integer:\n    6  	GL_ALPHA32UI_EXT 0x8D72\n    7  	GL_INTENSITY32UI_EXT 0x8D73\n    8: 	GL_LUMINANCE32UI_EXT 0x8D74\n    9: 	GL_LUMINANCE_ALPHA32UI_EXT 0x8D75\n   10  	GL_RGBA16UI_EXT 0x8D76\n   11  	GL_RGB16UI_EXT 0x8D77\n   12  	GL_ALPHA16UI_EXT 0x8D78\n   13  	GL_INTENSITY16UI_EXT 0x8D79\n   14: 	GL_LUMINANCE16UI_EXT 0x8D7A\n   15: 	GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B\n   16  	GL_RGBA8UI_EXT 0x8D7C\n   17  	GL_RGB8UI_EXT 0x8D7D\n   18  	GL_ALPHA8UI_EXT 0x8D7E\n   19  	GL_INTENSITY8UI_EXT 0x8D7F\n   20: 	GL_LUMINANCE8UI_EXT 0x8D80\n   21: 	GL_LUMINANCE_ALPHA8UI_EXT 0x8D81\n   22  	GL_RGBA32I_EXT 0x8D82\n   23  	GL_RGB32I_EXT 0x8D83\n   24  	GL_ALPHA32I_EXT 0x8D84\n   25  	GL_INTENSITY32I_EXT 0x8D85\n   26: 	GL_LUMINANCE32I_EXT 0x8D86\n   27: 	GL_LUMINANCE_ALPHA32I_EXT 0x8D87\n   28  	GL_RGBA16I_EXT 0x8D88\n   29  	GL_RGB16I_EXT 0x8D89\n   30  	GL_ALPHA16I_EXT 0x8D8A\n   31  	GL_INTENSITY16I_EXT 0x8D8B\n   32: 	GL_LUMINANCE16I_EXT 0x8D8C\n   33: 	GL_LUMINANCE_ALPHA16I_EXT 0x8D8D\n   34  	GL_RGBA8I_EXT 0x8D8E\n   35  	GL_RGB8I_EXT 0x8D8F\n   36  	GL_ALPHA8I_EXT 0x8D90\n   37  	GL_INTENSITY8I_EXT 0x8D91\n   38: 	GL_LUMINANCE8I_EXT 0x8D92\n   39: 	GL_LUMINANCE_ALPHA8I_EXT 0x8D93\n   40  	GL_RED_INTEGER_EXT 0x8D94\n   41  	GL_GREEN_INTEGER_EXT 0x8D95\n   ..\n   46  	GL_BGR_INTEGER_EXT 0x8D9A\n   47  	GL_BGRA_INTEGER_EXT 0x8D9B\n   48: 	GL_LUMINANCE_INTEGER_EXT 0x8D9C\n   49: 	GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D\n   50  	GL_RGBA_INTEGER_MODE_EXT 0x8D9E\n   51  	void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_EXT_vertex_shader:\n   13  	GL_OP_FRAC_EXT 0x8789\n   14  	GL_OP_MAX_EXT 0x878A\n   15: 	GL_OP_MIN_EXT 0x878B\n   16  	GL_OP_SET_GE_EXT 0x878C\n   17  	GL_OP_SET_LT_EXT 0x878D\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_NV_depth_buffer_float:\n    8  	void glDepthRangedNV (GLdouble zNear, GLdouble zFar)\n    9  	void glClearDepthdNV (GLdouble depth)\n   10: 	void glDepthBoundsdNV (GLdouble zmin, GLdouble zmax)\n   11  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_NV_gpu_program4:\n    2  http://developer.download.nvidia.com/opengl/specs/GL_NV_gpu_program4.txt\n    3  GL_NV_gpu_program4\n    4: 	GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904\n    5  	GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905\n    6  	GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_NV_gpu_program5:\n    3  GL_NV_gpu_program5\n    4  	GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A\n    5: 	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B\n    6  	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C\n    7  	GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D\n    8: 	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E\n    9  	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F\n   10  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_NV_path_rendering:\n   58  	GL_PATH_END_CAPS_NV 0x9076\n   59  	GL_PATH_INITIAL_END_CAP_NV 0x9077\n   60: 	GL_PATH_TERMINAL_END_CAP_NV 0x9078\n   61  	GL_PATH_JOIN_STYLE_NV 0x9079\n   62  	GL_PATH_MITER_LIMIT_NV 0x907A\n   63  	GL_PATH_DASH_CAPS_NV 0x907B\n   64  	GL_PATH_INITIAL_DASH_CAP_NV 0x907C\n   65: 	GL_PATH_TERMINAL_DASH_CAP_NV 0x907D\n   66  	GL_PATH_DASH_OFFSET_NV 0x907E\n   67  	GL_PATH_CLIENT_LENGTH_NV 0x907F\n   ..\n  119  	GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE\n  120  	GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF\n  121: 	GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000\n  122: 	GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000\n  123  	GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000\n  124  	GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_NV_present_video:\n   12  	void glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT* params)\n   13  	void glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint* params)\n   14: 	void glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)\n   15: 	void glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)\n   16  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_1_2:\n   20  	GL_MAX_ELEMENTS_INDICES 0x80E9\n   21  	GL_CLAMP_TO_EDGE 0x812F\n   22: 	GL_TEXTURE_MIN_LOD 0x813A\n   23  	GL_TEXTURE_MAX_LOD 0x813B\n   24  	GL_TEXTURE_BASE_LEVEL 0x813C\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_1_3:\n   50  	GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C\n   51  	GL_COMPRESSED_ALPHA 0x84E9\n   52: 	GL_COMPRESSED_LUMINANCE 0x84EA\n   53: 	GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB\n   54  	GL_COMPRESSED_INTENSITY 0x84EC\n   55  	GL_COMPRESSED_RGB 0x84ED\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_1_4:\n   20  	GL_FOG_COORDINATE_ARRAY_POINTER 0x8456\n   21  	GL_FOG_COORDINATE_ARRAY 0x8457\n   22: 	GL_POINT_SIZE_MIN 0x8126\n   23  	GL_POINT_SIZE_MAX 0x8127\n   24  	GL_POINT_FADE_THRESHOLD_SIZE 0x8128\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_2_0:\n  106  	GLint glGetAttribLocation (GLuint program, const GLchar* name)\n  107  	void glGetProgramiv (GLuint program, GLenum pname, GLint* param)\n  108: 	void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog)\n  109  	void glGetShaderiv (GLuint shader, GLenum pname, GLint* param)\n  110  	void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_2_1:\n   17  	GL_SRGB_ALPHA 0x8C42\n   18  	GL_SRGB8_ALPHA8 0x8C43\n   19: 	GL_SLUMINANCE_ALPHA 0x8C44\n   20: 	GL_SLUMINANCE8_ALPHA8 0x8C45\n   21: 	GL_SLUMINANCE 0x8C46\n   22: 	GL_SLUMINANCE8 0x8C47\n   23  	GL_COMPRESSED_SRGB 0x8C48\n   24  	GL_COMPRESSED_SRGB_ALPHA 0x8C49\n   25: 	GL_COMPRESSED_SLUMINANCE 0x8C4A\n   26: 	GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B\n   27  	void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)\n   28  	void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_3_0:\n   11  	GL_MAX_CLIP_DISTANCES GL_MAX_CLIP_PLANES\n   12  	GL_MAJOR_VERSION 0x821B\n   13: 	GL_MINOR_VERSION 0x821C\n   14  	GL_NUM_EXTENSIONS 0x821D\n   15  	GL_CONTEXT_FLAGS 0x821E\n   ..\n   25  	GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD\n   26  	GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF\n   27: 	GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904\n   28  	GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905\n   29  	GL_CLAMP_VERTEX_COLOR 0x891A\n   ..\n   36  	GL_TEXTURE_BLUE_TYPE 0x8C12\n   37  	GL_TEXTURE_ALPHA_TYPE 0x8C13\n   38: 	GL_TEXTURE_LUMINANCE_TYPE 0x8C14\n   39  	GL_TEXTURE_INTENSITY_TYPE 0x8C15\n   40  	GL_TEXTURE_DEPTH_TYPE 0x8C16\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_4_0:\n    3  \n    4  	GL_SAMPLE_SHADING 0x8C36\n    5: 	GL_MIN_SAMPLE_SHADING_VALUE 0x8C37\n    6  	GL_GEOMETRY_SHADER_INVOCATIONS 0x887F\n    7  	GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A\n    8: 	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B\n    9  	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C\n   10  	GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D\n   11: 	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E\n   12  	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F\n   13  	GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS 0x8F9F\n   ..\n   19  	GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E\n   20  	GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F\n   21: 	void glMinSampleShading (GLclampf value)\n   22  	void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha)\n   23  	void glBlendEquationi (GLuint buf, GLenum mode)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GLX_ATI_render_texture:\n   35  	GLX_AUX8_ATI                        0x981F\n   36  	GLX_AUX9_ATI                        0x9820\n   37: 	GLX_BIND_TO_TEXTURE_LUMINANCE_ATI   0x9821\n   38  	GLX_BIND_TO_TEXTURE_INTENSITY_ATI   0x9822\n   39  	void glXBindTexImageATI (Display *dpy, GLXPbuffer pbuf, int buffer)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/WGL_ARB_create_context:\n    5  	WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x0002\n    6  	WGL_CONTEXT_MAJOR_VERSION_ARB 0x2091\n    7: 	WGL_CONTEXT_MINOR_VERSION_ARB 0x2092\n    8  	WGL_CONTEXT_LAYER_PLANE_ARB 0x2093\n    9  	WGL_CONTEXT_FLAGS_ARB 0x2094\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/advanced.html:\n   74  <p>\n   75  Note that <tt>Function Definitions</tt> are copied to the header files\n   76: without changes and have to be terminated with a semicolon. In\n   77  contrast, <tt>Tokens</tt>, <tt>Function signatures</tt>, and\n   78: <tt>Typedefs</tt> should not be terminated with a semicolon.\n   79  </p>\n   80  -->\n   ..\n   83  Take a look at one of the files in <tt>auto/core</tt> for an\n   84  example. Note that typedefs and function signatures should not be\n   85: terminated with a semicolon.\n   86  </p>\n   87  \n   ..\n  143  default ignores this requirement, and does not define per-context\n  144  entry points (you can however do this using the steps described\n  145: above).</b> Assuming a global namespace for the entry points works in\n  146  most situations, because typically all hardware accelerated pixel\n  147  formats provide the same entry points and capabilities. This means\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/basic.html:\n  109  Platform specific extensions are separated into two header files:\n  110  <tt>wglew.h</tt> and <tt>glxew.h</tt>, which define the available\n  111: <tt>WGL</tt> and <tt>GLX</tt> extensions.  To determine if a certain\n  112  extension is supported, query <tt>WGLEW_{extension name}</tt> or\n  113  <tt>GLXEW_{extension_name}</tt>.  For example:\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/credits.html:\n    6  href=\"http://wwwvis.informatik.uni-stuttgart.de/~magallon/\">Marcelo\n    7  Magallon</a>.  They also perform occasional maintainance to make sure\n    8: that GLEW stays in mint condition.  Aaron Lefohn, Joe Kniss, and Chris\n    9  Wyman were the first users and also assisted with the design and\n   10  debugging process.  The acronym GLEW originates from Aaron Lefohn.\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/index.html:\n    2  The OpenGL Extension Wrangler Library (GLEW) is a cross-platform\n    3  open-source C/C++ extension loading library.  GLEW provides efficient\n    4: run-time mechanisms for determining which OpenGL extensions are\n    5  supported on the target platform.  OpenGL core and extension\n    6  functionality is exposed in a single header file.  GLEW has been\n    .\n   66  <ul>\n   67  <li>[08-06-12] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.9.0/\">GLEW 1.9.0</a> adds support for OpenGL 4.3, new extensions</li>\n   68: <li>[07-17-12] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.8.0/\">GLEW 1.8.0</a> fixes minor bugs and adds new extensions</li>\n   69  <li>[08-26-11] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.7.0/\">GLEW 1.7.0</a> adds support for OpenGL 4.2, new extensions, fixes bugs</li>\n   70: <li>[04-27-11] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.6.0/\">GLEW 1.6.0</a> fixes minor bugs and adds eight new extensions</li>\n   71: <li>[01-31-11] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.8/\">GLEW 1.5.8</a> fixes minor bugs and adds two new extensions</li>\n   72: <li>[11-03-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.7/\">GLEW 1.5.7</a> fixes minor bugs and adds one new extension</li>\n   73  <li>[09-07-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.6/\">GLEW 1.5.6</a> adds support for OpenGL 4.1, fixes bugs</li>\n   74: <li>[07-13-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.5/\">GLEW 1.5.5</a> fixes minor bugs and adds new extensions</li>\n   75  <li>[04-21-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.4/\">GLEW 1.5.4</a> adds support for OpenGL 3.3, OpenGL 4.0 and new extensions, fixes bugs</li>\n   76: <li>[02-28-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.3/\">GLEW 1.5.3</a> fixes minor bugs and adds three new extensions</li>\n   77  <li>[12-31-09] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.2/\">GLEW 1.5.2</a> adds support for OpenGL 3.1, OpenGL 3.2 and new extensions</li>\n   78  <li>[11-03-08] <a href=\"https://sourceforge.net/project/showfiles.php?group_id=67586&amp;package_id=67942&amp;release_id=637800\">GLEW 1.5.1</a> adds support for OpenGL 3.0 and 31 new extensions</li>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/install.html:\n   88  where the OpenGL equivalents <tt>gl.h</tt>, <tt>opengl32.lib</tt>, and\n   89  <tt>opengl32.dll</tt> / <tt>libGL.so</tt> are located.  Note that you\n   90: need administrative privileges to do this.  If you do not have\n   91: administrator access and your system administrator will not do it for\n   92  you, you can install GLEW into your own lib and include subdirectories\n   93  and tell the compiler where to find it. Then you can just replace\n   ..\n  119  \n  120  <p>\n  121: It is important to keep in mind that <tt>glew.h</tt> includes neither\n  122  <tt>windows.h</tt> nor <tt>gl.h</tt>.  Also, GLEW will warn you by\n  123  issuing a preprocessor error in case you have included <tt>gl.h</tt>,\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/log.html:\n  132  <li> New extensions:\n  133  <ul>\n  134: <li> GL_AMD_blend_minmax_factor\n  135  <li> GL_AMD_sample_positions\n  136  <li> GL_EXT_x11_sync_object\n  ...\n  187  <li> Bug fixes:\n  188  <ul>\n  189: <li> Improved mingw32 build support\n  190  <li> Improved cygwin build support\n  191  <li> glGetPointervEXT fix\n  ...\n  352  <li> GL_ARB_uniform_buffer_object\n  353  <li> GL_ARB_vertex_array_bgra\n  354: <li> GL_ATI_meminfo\n  355  <li> GL_EXT_provoking_vertex\n  356  <li> GL_EXT_separate_shader_objects\n  ...\n  431  <ul>\n  432  <li> Licensing issues with documentation\n  433: <li> Problems with long long and _MSC_VER on MINGW \n  434  <li> Incorrect parameter for glGetUniformLocation\n  435  <li> glewGetExtension fails on last entry \n  ...\n  449  <li> Licensing change (BSD, Mesa 3-D, Khronos)\n  450  <li> Switch to using registry on <a href=\"http://www.opengl.org/registry/\">www.opengl.org</a>\n  451: <li> Support for major and minor version strings\n  452  </ul>\n  453  <li> New extensions:\n  454  <ul>\n  455  <li> GL_APPLE_flush_buffer_range\n  456: <li> GL_GREMEDY_frame_terminator\n  457  <li> GLX_EXT_texture_from_pixmap\n  458  </ul>\n  ...\n  615  <li> Missing OpenGL 2.0 entry points\n  616  <li> Missing tokens in GL_SGIX_shadow\n  617: <li> MinGW makefile problem\n  618  <li> Check for incorrect OpenGL version string on SiS hardware\n  619  <li> Documentation update to meet the HTML 4.01 Transitional specification\n  ...\n  677  <ul>\n  678  <li> OpenGL version detection bug\n  679: <li> Problems with wxWindows and MinGW compilation\n  680  <li> <tt>visualinfo</tt> compilation problem with GLEW_MX specified\n  681  <li> Wrong token name in OpenGL 1.5 core\n  ...\n  727  <li> Added command line flags to <tt>glewinfo</tt> for selecting displays and visuals\n  728  <li> Added GLX_SGIS_multisample, GLX_SUN_video_resize, and GL_SUN_read_video_pixels\n  729: <li> Added MinGW/MSYS support\n  730  <li> Bug fixes in GL_ARB_shader_objects and the OS X build\n  731  </ul>\n  ...\n  765  <li> Added GLX_NV_float_buffer, GL_ARB_shading_language_100, and GL_ARB_texture_non_power_of_two\n  766  <li> Fixed bug in GL_ARB_vertex_buffer_object\n  767: <li> Minor updates in documentation\n  768  </ul>\n  769  </ul>\n  ...\n  810  <ul>\n  811  <li> Added NV_texture_expand_normal\n  812: <li> Added mingw support\n  813  <li> Updated documentation\n  814  </ul>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_AMD_blend_minmax_factor:\n    1: GL_AMD_blend_minmax_factor\n    2: http://www.opengl.org/registry/specs/AMD/blend_minmax_factor.txt\n    3: GL_AMD_blend_minmax_factor\n    4: 	GL_FACTOR_MIN_AMD 0x901C\n    5  	GL_FACTOR_MAX_AMD 0x901D\n    6  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_APPLE_float_pixels:\n    8  	GL_ALPHA_FLOAT32_APPLE 0x8816\n    9  	GL_INTENSITY_FLOAT32_APPLE 0x8817\n   10: 	GL_LUMINANCE_FLOAT32_APPLE 0x8818\n   11: 	GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819\n   12  	GL_RGBA_FLOAT16_APPLE 0x881A\n   13  	GL_RGB_FLOAT16_APPLE 0x881B\n   14  	GL_ALPHA_FLOAT16_APPLE 0x881C\n   15  	GL_INTENSITY_FLOAT16_APPLE 0x881D\n   16: 	GL_LUMINANCE_FLOAT16_APPLE 0x881E\n   17: 	GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F\n   18  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_APPLE_pixel_buffer:\n    2  \n    3  GL_APPLE_pixel_buffer\n    4: 	GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE 0x8A10\n    5  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_blend_func_extended:\n    3  GL_ARB_blend_func_extended\n    4  	GL_SRC1_COLOR 0x88F9\n    5: 	GL_ONE_MINUS_SRC1_COLOR 0x88FA\n    6: 	GL_ONE_MINUS_SRC1_ALPHA 0x88FB\n    7  	GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC\n    8  	void glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_gpu_shader5:\n    4  	GL_GEOMETRY_SHADER_INVOCATIONS 0x887F\n    5  	GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A\n    6: 	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B\n    7  	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C\n    8  	GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_imaging:\n    3  GL_ARB_imaging\n    4  	GL_CONSTANT_COLOR 0x8001\n    5: 	GL_ONE_MINUS_CONSTANT_COLOR 0x8002\n    6  	GL_CONSTANT_ALPHA 0x8003\n    7: 	GL_ONE_MINUS_CONSTANT_ALPHA 0x8004\n    8  	GL_BLEND_COLOR 0x8005\n    9  	GL_FUNC_ADD 0x8006\n   10: 	GL_MIN 0x8007\n   11  	GL_MAX 0x8008\n   12  	GL_BLEND_EQUATION 0x8009\n   ..\n   41  	GL_HISTOGRAM_BLUE_SIZE 0x802A\n   42  	GL_HISTOGRAM_ALPHA_SIZE 0x802B\n   43: 	GL_HISTOGRAM_LUMINANCE_SIZE 0x802C\n   44  	GL_HISTOGRAM_SINK 0x802D\n   45: 	GL_MINMAX 0x802E\n   46: 	GL_MINMAX_FORMAT 0x802F\n   47: 	GL_MINMAX_SINK 0x8030\n   48  	GL_TABLE_TOO_LARGE 0x8031\n   49  	GL_COLOR_MATRIX 0x80B1\n   ..\n   72  	GL_COLOR_TABLE_BLUE_SIZE 0x80DC\n   73  	GL_COLOR_TABLE_ALPHA_SIZE 0x80DD\n   74: 	GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE\n   75  	GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF\n   76  	GL_IGNORE_BORDER 0x8150\n   ..\n   93  	void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   94  	void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)\n   95: 	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink)\n   96: 	void glResetMinmax (GLenum target)\n   97: 	void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   98: 	void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)\n   99  	void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)\n  100  	void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)\n  ...\n  110  	void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)\n  111  	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)\n  112: 	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)\n  113  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_map_buffer_alignment:\n    2  http://www.opengl.org/registry/specs/ARB/map_buffer_alignment.txt\n    3  GL_ARB_map_buffer_alignment\n    4: 	GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC\n    5  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_point_parameters:\n    2  http://www.opengl.org/registry/specs/ARB/point_parameters.txt\n    3  GL_ARB_point_parameters\n    4: 	GL_POINT_SIZE_MIN_ARB 0x8126\n    5  	GL_POINT_SIZE_MAX_ARB 0x8127\n    6  	GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_program_interface_query:\n   49  	GL_LOCATION 0x930E\n   50  	GL_LOCATION_INDEX 0x930F\n   51: 	void glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint* params)\n   52: 	GLuint glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar* name)\n   53: 	GLint glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar* name)\n   54: 	GLint glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar* name)\n   55: 	void glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar *name)\n   56: 	void glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum* props, GLsizei bufSize, GLsizei *length, GLint *params)\n   57  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_robustness:\n   17  	void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v)\n   18  	void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v)\n   19: 	void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values)\n   20  	void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values)\n   21  	void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_sample_shading:\n    3  GL_ARB_sample_shading\n    4  	GL_SAMPLE_SHADING_ARB 0x8C36\n    5: 	GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37\n    6: 	void glMinSampleShadingARB (GLclampf value)\n    7  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_texture_compression:\n    3  GL_ARB_texture_compression\n    4  	GL_COMPRESSED_ALPHA_ARB 0x84E9\n    5: 	GL_COMPRESSED_LUMINANCE_ARB 0x84EA\n    6: 	GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB\n    7  	GL_COMPRESSED_INTENSITY_ARB 0x84EC\n    8  	GL_COMPRESSED_RGB_ARB 0x84ED\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_texture_float:\n    6  	GL_ALPHA32F_ARB 0x8816\n    7  	GL_INTENSITY32F_ARB 0x8817\n    8: 	GL_LUMINANCE32F_ARB 0x8818\n    9: 	GL_LUMINANCE_ALPHA32F_ARB 0x8819\n   10  	GL_RGBA16F_ARB 0x881A\n   11  	GL_RGB16F_ARB 0x881B\n   12  	GL_ALPHA16F_ARB 0x881C\n   13  	GL_INTENSITY16F_ARB 0x881D\n   14: 	GL_LUMINANCE16F_ARB 0x881E\n   15: 	GL_LUMINANCE_ALPHA16F_ARB 0x881F\n   16  	GL_TEXTURE_RED_TYPE_ARB 0x8C10\n   17  	GL_TEXTURE_GREEN_TYPE_ARB 0x8C11\n   18  	GL_TEXTURE_BLUE_TYPE_ARB 0x8C12\n   19  	GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13\n   20: 	GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14\n   21  	GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15\n   22  	GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_texture_gather:\n    2  http://www.opengl.org/registry/specs/ARB/texture_gather.txt\n    3  GL_ARB_texture_gather\n    4: 	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E\n    5  	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F\n    6  	GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_texture_view:\n    2  http://www.opengl.org/registry/specs/ARB/texture_view.txt\n    3  GL_ARB_texture_view\n    4: 	GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB\n    5  	GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC\n    6: 	GL_TEXTURE_VIEW_MIN_LAYER 0x82DD\n    7  	GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE\n    8  	GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF\n    9: 	void glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)\n   10  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_transform_feedback_instanced:\n    3  GL_ARB_transform_feedback_instanced\n    4  	void glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei primcount)\n    5: 	void glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei primcount)\n    6  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_uniform_buffer_object:\n   39  	void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName)\n   40  	void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params)\n   41: 	void glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName)\n   42: 	void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params)\n   43  	void glGetIntegeri_v (GLenum target, GLuint index, GLint* data)\n   44  	GLuint glGetUniformBlockIndex (GLuint program, const GLchar* uniformBlockName)\n   45: 	void glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices)\n   46  	void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)\n   47  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ATI_meminfo:\n    1: GL_ATI_meminfo\n    2: http://www.opengl.org/registry/specs/ATI/meminfo.txt\n    3: GL_ATI_meminfo\n    4  	GL_VBO_FREE_MEMORY_ATI 0x87FB\n    5  	GL_TEXTURE_FREE_MEMORY_ATI 0x87FC\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ATI_texture_compression_3dc:\n    2  \n    3  GL_ATI_texture_compression_3dc\n    4: 	GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI 0x8837\n    5  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ATI_texture_float:\n    6  	GL_ALPHA_FLOAT32_ATI 0x8816\n    7  	GL_INTENSITY_FLOAT32_ATI 0x8817\n    8: 	GL_LUMINANCE_FLOAT32_ATI 0x8818\n    9: 	GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819\n   10  	GL_RGBA_FLOAT16_ATI 0x881A\n   11  	GL_RGB_FLOAT16_ATI 0x881B\n   12  	GL_ALPHA_FLOAT16_ATI 0x881C\n   13  	GL_INTENSITY_FLOAT16_ATI 0x881D\n   14: 	GL_LUMINANCE_FLOAT16_ATI 0x881E\n   15: 	GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F\n   16  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_blend_color:\n    3  GL_EXT_blend_color\n    4  	GL_CONSTANT_COLOR_EXT 0x8001\n    5: 	GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002\n    6  	GL_CONSTANT_ALPHA_EXT 0x8003\n    7: 	GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004\n    8  	GL_BLEND_COLOR_EXT 0x8005\n    9  	void glBlendColorEXT (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_blend_minmax:\n    1: GL_EXT_blend_minmax\n    2: http://www.opengl.org/registry/specs/EXT/blend_minmax.txt\n    3: GL_EXT_blend_minmax\n    4  	GL_FUNC_ADD_EXT 0x8006\n    5: 	GL_MIN_EXT 0x8007\n    6  	GL_MAX_EXT 0x8008\n    7  	GL_BLEND_EQUATION_EXT 0x8009\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_depth_bounds_test:\n    4  	GL_DEPTH_BOUNDS_TEST_EXT 0x8890\n    5  	GL_DEPTH_BOUNDS_EXT 0x8891\n    6: 	void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax)\n    7  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_histogram:\n   10  	GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A\n   11  	GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B\n   12: 	GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C\n   13  	GL_HISTOGRAM_SINK_EXT 0x802D\n   14: 	GL_MINMAX_EXT 0x802E\n   15: 	GL_MINMAX_FORMAT_EXT 0x802F\n   16: 	GL_MINMAX_SINK_EXT 0x8030\n   17  	void glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values)\n   18  	void glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat* params)\n   19  	void glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint* params)\n   20: 	void glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values)\n   21: 	void glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat* params)\n   22: 	void glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint* params)\n   23  	void glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)\n   24: 	void glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink)\n   25  	void glResetHistogramEXT (GLenum target)\n   26: 	void glResetMinmaxEXT (GLenum target)\n   27  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_paletted_texture:\n   12  	GL_COLOR_TABLE_BLUE_SIZE_EXT 0x80DC\n   13  	GL_COLOR_TABLE_ALPHA_SIZE_EXT 0x80DD\n   14: 	GL_COLOR_TABLE_LUMINANCE_SIZE_EXT 0x80DE\n   15  	GL_COLOR_TABLE_INTENSITY_SIZE_EXT 0x80DF\n   16  	GL_COLOR_INDEX1_EXT 0x80E2\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_pixel_transform:\n    4  	GL_PIXEL_TRANSFORM_2D_EXT 0x8330\n    5  	GL_PIXEL_MAG_FILTER_EXT 0x8331\n    6: 	GL_PIXEL_MIN_FILTER_EXT 0x8332\n    7  	GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333\n    8  	GL_CUBIC_EXT 0x8334\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_point_parameters:\n    2  http://www.opengl.org/registry/specs/EXT/point_parameters.txt\n    3  GL_EXT_point_parameters\n    4: 	GL_POINT_SIZE_MIN_EXT 0x8126\n    5  	GL_POINT_SIZE_MAX_EXT 0x8127\n    6  	GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_texture:\n    6  	GL_ALPHA12_EXT 0x803D\n    7  	GL_ALPHA16_EXT 0x803E\n    8: 	GL_LUMINANCE4_EXT 0x803F\n    9: 	GL_LUMINANCE8_EXT 0x8040\n   10: 	GL_LUMINANCE12_EXT 0x8041\n   11: 	GL_LUMINANCE16_EXT 0x8042\n   12: 	GL_LUMINANCE4_ALPHA4_EXT 0x8043\n   13: 	GL_LUMINANCE6_ALPHA2_EXT 0x8044\n   14: 	GL_LUMINANCE8_ALPHA8_EXT 0x8045\n   15: 	GL_LUMINANCE12_ALPHA4_EXT 0x8046\n   16: 	GL_LUMINANCE12_ALPHA12_EXT 0x8047\n   17: 	GL_LUMINANCE16_ALPHA16_EXT 0x8048\n   18  	GL_INTENSITY_EXT 0x8049\n   19  	GL_INTENSITY4_EXT 0x804A\n   ..\n   39  	GL_TEXTURE_BLUE_SIZE_EXT 0x805E\n   40  	GL_TEXTURE_ALPHA_SIZE_EXT 0x805F\n   41: 	GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060\n   42  	GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061\n   43  	GL_REPLACE_EXT 0x8062\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_texture_compression_latc:\n    2  http://developer.download.nvidia.com/opengl/specs/GL_EXT_texture_compression_latc.txt\n    3  GL_EXT_texture_compression_latc\n    4: 	GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70\n    5: 	GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71\n    6: 	GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72\n    7: 	GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73\n    8  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_texture_integer:\n    6  	GL_ALPHA32UI_EXT 0x8D72\n    7  	GL_INTENSITY32UI_EXT 0x8D73\n    8: 	GL_LUMINANCE32UI_EXT 0x8D74\n    9: 	GL_LUMINANCE_ALPHA32UI_EXT 0x8D75\n   10  	GL_RGBA16UI_EXT 0x8D76\n   11  	GL_RGB16UI_EXT 0x8D77\n   12  	GL_ALPHA16UI_EXT 0x8D78\n   13  	GL_INTENSITY16UI_EXT 0x8D79\n   14: 	GL_LUMINANCE16UI_EXT 0x8D7A\n   15: 	GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B\n   16  	GL_RGBA8UI_EXT 0x8D7C\n   17  	GL_RGB8UI_EXT 0x8D7D\n   18  	GL_ALPHA8UI_EXT 0x8D7E\n   19  	GL_INTENSITY8UI_EXT 0x8D7F\n   20: 	GL_LUMINANCE8UI_EXT 0x8D80\n   21: 	GL_LUMINANCE_ALPHA8UI_EXT 0x8D81\n   22  	GL_RGBA32I_EXT 0x8D82\n   23  	GL_RGB32I_EXT 0x8D83\n   24  	GL_ALPHA32I_EXT 0x8D84\n   25  	GL_INTENSITY32I_EXT 0x8D85\n   26: 	GL_LUMINANCE32I_EXT 0x8D86\n   27: 	GL_LUMINANCE_ALPHA32I_EXT 0x8D87\n   28  	GL_RGBA16I_EXT 0x8D88\n   29  	GL_RGB16I_EXT 0x8D89\n   30  	GL_ALPHA16I_EXT 0x8D8A\n   31  	GL_INTENSITY16I_EXT 0x8D8B\n   32: 	GL_LUMINANCE16I_EXT 0x8D8C\n   33: 	GL_LUMINANCE_ALPHA16I_EXT 0x8D8D\n   34  	GL_RGBA8I_EXT 0x8D8E\n   35  	GL_RGB8I_EXT 0x8D8F\n   36  	GL_ALPHA8I_EXT 0x8D90\n   37  	GL_INTENSITY8I_EXT 0x8D91\n   38: 	GL_LUMINANCE8I_EXT 0x8D92\n   39: 	GL_LUMINANCE_ALPHA8I_EXT 0x8D93\n   40  	GL_RED_INTEGER_EXT 0x8D94\n   41  	GL_GREEN_INTEGER_EXT 0x8D95\n   ..\n   46  	GL_BGR_INTEGER_EXT 0x8D9A\n   47  	GL_BGRA_INTEGER_EXT 0x8D9B\n   48: 	GL_LUMINANCE_INTEGER_EXT 0x8D9C\n   49: 	GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D\n   50  	GL_RGBA_INTEGER_MODE_EXT 0x8D9E\n   51  	void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_texture_snorm:\n   16  	GL_SIGNED_NORMALIZED 0x8F9C\n   17  	GL_ALPHA_SNORM 0x9010\n   18: 	GL_LUMINANCE_SNORM 0x9011\n   19: 	GL_LUMINANCE_ALPHA_SNORM 0x9012\n   20  	GL_INTENSITY_SNORM 0x9013\n   21  	GL_ALPHA8_SNORM 0x9014\n   22: 	GL_LUMINANCE8_SNORM 0x9015\n   23: 	GL_LUMINANCE8_ALPHA8_SNORM 0x9016\n   24  	GL_INTENSITY8_SNORM 0x9017\n   25  	GL_ALPHA16_SNORM 0x9018\n   26: 	GL_LUMINANCE16_SNORM 0x9019\n   27: 	GL_LUMINANCE16_ALPHA16_SNORM 0x901A\n   28  	GL_INTENSITY16_SNORM 0x901B\n   29  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_texture_sRGB:\n    6  	GL_SRGB_ALPHA_EXT 0x8C42\n    7  	GL_SRGB8_ALPHA8_EXT 0x8C43\n    8: 	GL_SLUMINANCE_ALPHA_EXT 0x8C44\n    9: 	GL_SLUMINANCE8_ALPHA8_EXT 0x8C45\n   10: 	GL_SLUMINANCE_EXT 0x8C46\n   11: 	GL_SLUMINANCE8_EXT 0x8C47\n   12  	GL_COMPRESSED_SRGB_EXT 0x8C48\n   13  	GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49\n   14: 	GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A\n   15: 	GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B\n   16  	GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C\n   17  	GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_vertex_shader:\n   13  	GL_OP_FRAC_EXT 0x8789\n   14  	GL_OP_MAX_EXT 0x878A\n   15: 	GL_OP_MIN_EXT 0x878B\n   16  	GL_OP_SET_GE_EXT 0x878C\n   17  	GL_OP_SET_LT_EXT 0x878D\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_GREMEDY_frame_terminator:\n    1: GL_GREMEDY_frame_terminator\n    2: http://www.opengl.org/registry/specs/GREMEDY/frame_terminator.txt\n    3: GL_GREMEDY_frame_terminator\n    4: 	void glFrameTerminatorGREMEDY (void)\n    5  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_INGR_color_clamp:\n    2  http://www.opengl.org/registry/specs/INGR/color_clamp.txt\n    3  GL_INGR_color_clamp\n    4: 	GL_RED_MIN_CLAMP_INGR 0x8560\n    5: 	GL_GREEN_MIN_CLAMP_INGR 0x8561\n    6: 	GL_BLUE_MIN_CLAMP_INGR 0x8562\n    7: 	GL_ALPHA_MIN_CLAMP_INGR 0x8563\n    8  	GL_RED_MAX_CLAMP_INGR 0x8564\n    9  	GL_GREEN_MAX_CLAMP_INGR 0x8565\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_depth_buffer_float:\n    8  	void glDepthRangedNV (GLdouble zNear, GLdouble zFar)\n    9  	void glClearDepthdNV (GLdouble depth)\n   10: 	void glDepthBoundsdNV (GLdouble zmin, GLdouble zmax)\n   11  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_gpu_program4:\n    2  http://developer.download.nvidia.com/opengl/specs/GL_NV_gpu_program4.txt\n    3  GL_NV_gpu_program4\n    4: 	GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904\n    5  	GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905\n    6  	GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_gpu_program5:\n    3  GL_NV_gpu_program5\n    4  	GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A\n    5: 	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B\n    6  	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C\n    7  	GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D\n    8: 	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E\n    9  	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F\n   10  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_path_rendering:\n   58  	GL_PATH_END_CAPS_NV 0x9076\n   59  	GL_PATH_INITIAL_END_CAP_NV 0x9077\n   60: 	GL_PATH_TERMINAL_END_CAP_NV 0x9078\n   61  	GL_PATH_JOIN_STYLE_NV 0x9079\n   62  	GL_PATH_MITER_LIMIT_NV 0x907A\n   63  	GL_PATH_DASH_CAPS_NV 0x907B\n   64  	GL_PATH_INITIAL_DASH_CAP_NV 0x907C\n   65: 	GL_PATH_TERMINAL_DASH_CAP_NV 0x907D\n   66  	GL_PATH_DASH_OFFSET_NV 0x907E\n   67  	GL_PATH_CLIENT_LENGTH_NV 0x907F\n   ..\n  119  	GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE\n  120  	GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF\n  121: 	GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000\n  122: 	GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000\n  123  	GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000\n  124  	GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_present_video:\n   12  	void glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT* params)\n   13  	void glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint* params)\n   14: 	void glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)\n   15: 	void glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)\n   16  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_texture_shader:\n   41  	GL_SIGNED_RGB_NV 0x86FE\n   42  	GL_SIGNED_RGB8_NV 0x86FF\n   43: 	GL_SIGNED_LUMINANCE_NV 0x8701\n   44: 	GL_SIGNED_LUMINANCE8_NV 0x8702\n   45: 	GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703\n   46: 	GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704\n   47  	GL_SIGNED_ALPHA_NV 0x8705\n   48  	GL_SIGNED_ALPHA8_NV 0x8706\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_texture_shader2:\n   17  	GL_SIGNED_RGB_NV 0x86FE\n   18  	GL_SIGNED_RGB8_NV 0x86FF\n   19: 	GL_SIGNED_LUMINANCE_NV 0x8701\n   20: 	GL_SIGNED_LUMINANCE8_NV 0x8702\n   21: 	GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703\n   22: 	GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704\n   23  	GL_SIGNED_ALPHA_NV 0x8705\n   24  	GL_SIGNED_ALPHA8_NV 0x8706\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_NV_video_capture:\n   13  	GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029\n   14  	GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A\n   15: 	GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B\n   16  	GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C\n   17  	GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_SGI_color_table:\n   16  	GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC\n   17  	GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD\n   18: 	GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE\n   19  	GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF\n   20  	void glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat* params)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_SGIS_color_range:\n    3  GL_SGIS_color_range\n    4  	GL_EXTENDED_RANGE_SGIS 0x85A5\n    5: 	GL_MIN_RED_SGIS 0x85A6\n    6  	GL_MAX_RED_SGIS 0x85A7\n    7: 	GL_MIN_GREEN_SGIS 0x85A8\n    8  	GL_MAX_GREEN_SGIS 0x85A9\n    9: 	GL_MIN_BLUE_SGIS 0x85AA\n   10  	GL_MAX_BLUE_SGIS 0x85AB\n   11: 	GL_MIN_ALPHA_SGIS 0x85AC\n   12  	GL_MAX_ALPHA_SGIS 0x85AD\n   13  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_SGIS_texture_lod:\n    2  http://www.opengl.org/registry/specs/SGIS/texture_lod.txt\n    3  GL_SGIS_texture_lod\n    4: 	GL_TEXTURE_MIN_LOD_SGIS 0x813A\n    5  	GL_TEXTURE_MAX_LOD_SGIS 0x813B\n    6  	GL_TEXTURE_BASE_LEVEL_SGIS 0x813C\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_SGIX_blend_alpha_minmax:\n    1: GL_SGIX_blend_alpha_minmax\n    2: http://www.opengl.org/registry/specs/SGIX/blend_alpha_minmax.txt\n    3: GL_SGIX_blend_alpha_minmax\n    4: 	GL_ALPHA_MIN_SGIX 0x8320\n    5  	GL_ALPHA_MAX_SGIX 0x8321\n    6  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_SGIX_texture_range:\n    5  	GL_RGBA_SIGNED_SGIX 0x85E1\n    6  	GL_ALPHA_SIGNED_SGIX 0x85E2\n    7: 	GL_LUMINANCE_SIGNED_SGIX 0x85E3\n    8  	GL_INTENSITY_SIGNED_SGIX 0x85E4\n    9: 	GL_LUMINANCE_ALPHA_SIGNED_SGIX 0x85E5\n   10  	GL_RGB16_SIGNED_SGIX 0x85E6\n   11  	GL_RGBA16_SIGNED_SGIX 0x85E7\n   12  	GL_ALPHA16_SIGNED_SGIX 0x85E8\n   13: 	GL_LUMINANCE16_SIGNED_SGIX 0x85E9\n   14  	GL_INTENSITY16_SIGNED_SGIX 0x85EA\n   15: 	GL_LUMINANCE16_ALPHA16_SIGNED_SGIX 0x85EB\n   16  	GL_RGB_EXTENDED_RANGE_SGIX 0x85EC\n   17  	GL_RGBA_EXTENDED_RANGE_SGIX 0x85ED\n   18  	GL_ALPHA_EXTENDED_RANGE_SGIX 0x85EE\n   19: 	GL_LUMINANCE_EXTENDED_RANGE_SGIX 0x85EF\n   20  	GL_INTENSITY_EXTENDED_RANGE_SGIX 0x85F0\n   21: 	GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX 0x85F1\n   22  	GL_RGB16_EXTENDED_RANGE_SGIX 0x85F2\n   23  	GL_RGBA16_EXTENDED_RANGE_SGIX 0x85F3\n   24  	GL_ALPHA16_EXTENDED_RANGE_SGIX 0x85F4\n   25: 	GL_LUMINANCE16_EXTENDED_RANGE_SGIX 0x85F5\n   26  	GL_INTENSITY16_EXTENDED_RANGE_SGIX 0x85F6\n   27: 	GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX 0x85F7\n   28: 	GL_MIN_LUMINANCE_SGIS 0x85F8\n   29: 	GL_MAX_LUMINANCE_SGIS 0x85F9\n   30: 	GL_MIN_INTENSITY_SGIS 0x85FA\n   31  	GL_MAX_INTENSITY_SGIS 0x85FB\n   32  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GLX_ARB_create_context:\n    5  	GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x0002\n    6  	GLX_CONTEXT_MAJOR_VERSION_ARB 0x2091\n    7: 	GLX_CONTEXT_MINOR_VERSION_ARB 0x2092\n    8  	GLX_CONTEXT_FLAGS_ARB 0x2094\n    9  	GLXContext glXCreateContextAttribsARB (Display* dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GLX_ATI_render_texture:\n   35  	GLX_AUX8_ATI                        0x981F\n   36  	GLX_AUX9_ATI                        0x9820\n   37: 	GLX_BIND_TO_TEXTURE_LUMINANCE_ATI   0x9821\n   38  	GLX_BIND_TO_TEXTURE_INTENSITY_ATI   0x9822\n   39  	void glXBindTexImageATI (Display *dpy, GLXPbuffer pbuf, int buffer)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GLX_OML_sync_control:\n    2  http://www.opengl.org/registry/specs/OML/glx_sync_control.txt\n    3  GLX_OML_sync_control\n    4: 	Bool glXGetMscRateOML (Display* dpy, GLXDrawable drawable, int32_t* numerator, int32_t* denominator)\n    5  	Bool glXGetSyncValuesOML (Display* dpy, GLXDrawable drawable, int64_t* ust, int64_t* msc, int64_t* sbc)\n    6  	int64_t glXSwapBuffersMscOML (Display* dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GLX_SGIS_color_range:\n    3  GLX_SGIS_color_range\n    4  	GLX_MAX_GREEN_SGIS 0\n    5: 	GLX_MIN_RED_SGIS 0\n    6: 	GLX_MIN_BLUE_SGIS 0\n    7  	GLX_MAX_RED_SGIS 0\n    8  	GLX_MAX_ALPHA_SGIS 0\n    9: 	GLX_MIN_GREEN_SGIS 0\n   10: 	GLX_MIN_ALPHA_SGIS 0\n   11  	GLX_EXTENDED_RANGE_SGIS 0\n   12  	GLX_MAX_BLUE_SGIS 0\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/WGL_ARB_create_context:\n    5  	WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x0002\n    6  	WGL_CONTEXT_MAJOR_VERSION_ARB 0x2091\n    7: 	WGL_CONTEXT_MINOR_VERSION_ARB 0x2092\n    8  	WGL_CONTEXT_LAYER_PLANE_ARB 0x2093\n    9  	WGL_CONTEXT_FLAGS_ARB 0x2094\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/WGL_I3D_image_buffer:\n    2  http://www.opengl.org/registry/specs/I3D/wgl_image_buffer.txt\n    3  WGL_I3D_image_buffer\n    4: 	WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001\n    5  	WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002\n    6  	BOOL wglAssociateImageBufferEventsI3D (HDC hdc, HANDLE* pEvent, LPVOID *pAddress, DWORD *pSize, UINT count)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/WGL_OML_sync_control:\n    2  http://www.opengl.org/registry/specs/OML/wgl_sync_control.txt\n    3  WGL_OML_sync_control\n    4: 	BOOL wglGetMscRateOML (HDC hdc, INT32* numerator, INT32 *denominator)\n    5  	BOOL wglGetSyncValuesOML (HDC hdc, INT64* ust, INT64 *msc, INT64 *sbc)\n    6  	INT64 wglSwapBuffersMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew.rc:\n   37  //\n   38  VS_VERSION_INFO VERSIONINFO \n   39: FILEVERSION GLEW_MAJOR, GLEW_MINOR, GLEW_MICRO, 0\n   40: PRODUCTVERSION GLEW_MAJOR, GLEW_MINOR, GLEW_MICRO, 0\n   41  FILEFLAGSMASK VS_FFI_FILEFLAGSMASK\n   42  #ifdef _DEBUG\n   ..\n   60              VALUE \"CompanyName\", \"\\0\"\n   61              VALUE \"FileDescription\", \"The OpenGL Extension Wrangler Library\\0\"\n   62:             VALUE \"FileVersion\", \"GLEW_MAJOR,GLEW_MINOR,GLEW_MICRO,0\\0\"\n   63              VALUE \"InternalName\", \"GLEW\\0\"\n   64              VALUE \"LegalCopyright\", \"© 2002-2008 Milan Ikits & Marcelo Magallon\\0\"\n   ..\n   67              VALUE \"PrivateBuild\", \"\\0\"\n   68              VALUE \"ProductName\", \"The OpenGL Extension Wrangler Library\\0\"\n   69:             VALUE \"ProductVersion\", \"GLEW_MAJOR,GLEW_MINOR,GLEW_MICRO,0\\0\"\n   70              VALUE \"SpecialBuild\", \"\\0\"\n   71          END\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_head.h:\n   34  #ifndef APIENTRY\n   35  #define GLEW_APIENTRY_DEFINED\n   36: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n   37  #    define APIENTRY __stdcall\n   38  #  elif (_MSC_VER >= 800) || defined(_STDCALL_SUPPORTED) || defined(__BORLANDC__)\n   ..\n   43  #endif\n   44  #ifndef GLAPI\n   45: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n   46  #    define GLAPI extern\n   47  #  endif\n   ..\n   50  #ifndef CALLBACK\n   51  #define GLEW_CALLBACK_DEFINED\n   52: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n   53  #    define CALLBACK __attribute__ ((__stdcall__))\n   54  #  elif (defined(_M_MRX000) || defined(_M_IX86) || defined(_M_ALPHA) || defined(_M_PPC)) && !defined(MIDL_PASS)\n   ..\n   76  #  endif\n   77  #endif\n   78: #if !defined(_PTRDIFF_T_DEFINED) && !defined(_PTRDIFF_T_) && !defined(__MINGW64__)\n   79  #  ifdef _WIN64\n   80  typedef __int64 ptrdiff_t;\n   ..\n   87  \n   88  #ifndef GLAPI\n   89: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n   90  #    define GLAPI extern\n   91  #  else\n   ..\n  205  typedef unsigned long long GLuint64EXT;\n  206  #else\n  207: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n  208  #include <inttypes.h>\n  209  #  endif\n  ...\n  261  #define GL_ALWAYS 0x0207\n  262  #define GL_SRC_COLOR 0x0300\n  263: #define GL_ONE_MINUS_SRC_COLOR 0x0301\n  264  #define GL_SRC_ALPHA 0x0302\n  265: #define GL_ONE_MINUS_SRC_ALPHA 0x0303\n  266  #define GL_DST_ALPHA 0x0304\n  267: #define GL_ONE_MINUS_DST_ALPHA 0x0305\n  268  #define GL_DST_COLOR 0x0306\n  269: #define GL_ONE_MINUS_DST_COLOR 0x0307\n  270  #define GL_SRC_ALPHA_SATURATE 0x0308\n  271  #define GL_STENCIL_BUFFER_BIT 0x00000400\n  ...\n  586  #define GL_RGB 0x1907\n  587  #define GL_RGBA 0x1908\n  588: #define GL_LUMINANCE 0x1909\n  589: #define GL_LUMINANCE_ALPHA 0x190A\n  590  #define GL_BITMAP 0x1A00\n  591  #define GL_POINT 0x1B00\n  ...\n  628  #define GL_LINEAR_MIPMAP_LINEAR 0x2703\n  629  #define GL_TEXTURE_MAG_FILTER 0x2800\n  630: #define GL_TEXTURE_MIN_FILTER 0x2801\n  631  #define GL_TEXTURE_WRAP_S 0x2802\n  632  #define GL_TEXTURE_WRAP_T 0x2803\n  ...\n  673  #define GL_ALPHA12 0x803D\n  674  #define GL_ALPHA16 0x803E\n  675: #define GL_LUMINANCE4 0x803F\n  676: #define GL_LUMINANCE8 0x8040\n  677: #define GL_LUMINANCE12 0x8041\n  678: #define GL_LUMINANCE16 0x8042\n  679: #define GL_LUMINANCE4_ALPHA4 0x8043\n  680: #define GL_LUMINANCE6_ALPHA2 0x8044\n  681: #define GL_LUMINANCE8_ALPHA8 0x8045\n  682: #define GL_LUMINANCE12_ALPHA4 0x8046\n  683: #define GL_LUMINANCE12_ALPHA12 0x8047\n  684: #define GL_LUMINANCE16_ALPHA16 0x8048\n  685  #define GL_INTENSITY 0x8049\n  686  #define GL_INTENSITY4 0x804A\n  ...\n  705  #define GL_TEXTURE_BLUE_SIZE 0x805E\n  706  #define GL_TEXTURE_ALPHA_SIZE 0x805F\n  707: #define GL_TEXTURE_LUMINANCE_SIZE 0x8060\n  708  #define GL_TEXTURE_INTENSITY_SIZE 0x8061\n  709  #define GL_PROXY_TEXTURE_1D 0x8063\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_init_gl.c:\n   21    const GLubyte* s;\n   22    GLuint dot;\n   23:   GLint major, minor;\n   24    const GLubyte* extStart;\n   25    const GLubyte* extEnd;\n   ..\n   31    \n   32    major = s[dot-1]-'0';\n   33:   minor = s[dot+1]-'0';\n   34  \n   35:   if (minor < 0 || minor > 9)\n   36:     minor = 0;\n   37    if (major<0 || major>9)\n   38      return GLEW_ERROR_NO_GL_VERSION;\n   39    \n   40  \n   41:   if (major == 1 && minor == 0)\n   42    {\n   43      return GLEW_ERROR_GL_VERSION_10_ONLY;\n   ..\n   45    else\n   46    {\n   47:     CONST_CAST(GLEW_VERSION_4_3)   = ( major > 4 )                 || ( major == 4 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n   48:     CONST_CAST(GLEW_VERSION_4_2)   = GLEW_VERSION_4_3   == GL_TRUE || ( major == 4 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n   49:     CONST_CAST(GLEW_VERSION_4_1)   = GLEW_VERSION_4_2   == GL_TRUE || ( major == 4 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n   50      CONST_CAST(GLEW_VERSION_4_0)   = GLEW_VERSION_4_1   == GL_TRUE || ( major == 4               ) ? GL_TRUE : GL_FALSE;\n   51:     CONST_CAST(GLEW_VERSION_3_3)   = GLEW_VERSION_4_0   == GL_TRUE || ( major == 3 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n   52:     CONST_CAST(GLEW_VERSION_3_2)   = GLEW_VERSION_3_3   == GL_TRUE || ( major == 3 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n   53:     CONST_CAST(GLEW_VERSION_3_1)   = GLEW_VERSION_3_2   == GL_TRUE || ( major == 3 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n   54      CONST_CAST(GLEW_VERSION_3_0)   = GLEW_VERSION_3_1   == GL_TRUE || ( major == 3               ) ? GL_TRUE : GL_FALSE;\n   55:     CONST_CAST(GLEW_VERSION_2_1)   = GLEW_VERSION_3_0   == GL_TRUE || ( major == 2 && minor >= 1 ) ? GL_TRUE : GL_FALSE;    \n   56      CONST_CAST(GLEW_VERSION_2_0)   = GLEW_VERSION_2_1   == GL_TRUE || ( major == 2               ) ? GL_TRUE : GL_FALSE;\n   57:     CONST_CAST(GLEW_VERSION_1_5)   = GLEW_VERSION_2_0   == GL_TRUE || ( major == 1 && minor >= 5 ) ? GL_TRUE : GL_FALSE;\n   58:     CONST_CAST(GLEW_VERSION_1_4)   = GLEW_VERSION_1_5   == GL_TRUE || ( major == 1 && minor >= 4 ) ? GL_TRUE : GL_FALSE;\n   59:     CONST_CAST(GLEW_VERSION_1_3)   = GLEW_VERSION_1_4   == GL_TRUE || ( major == 1 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n   60      CONST_CAST(GLEW_VERSION_1_2_1) = GLEW_VERSION_1_3   == GL_TRUE                                 ? GL_TRUE : GL_FALSE; \n   61:     CONST_CAST(GLEW_VERSION_1_2)   = GLEW_VERSION_1_2_1 == GL_TRUE || ( major == 1 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n   62:     CONST_CAST(GLEW_VERSION_1_1)   = GLEW_VERSION_1_2   == GL_TRUE || ( major == 1 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n   63    }\n   64  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_init_glx.c:\n   15  GLenum glxewContextInit (GLXEW_CONTEXT_ARG_DEF_LIST)\n   16  {\n   17:   int major, minor;\n   18    const GLubyte* extStart;\n   19    const GLubyte* extEnd;\n   ..\n   27    CONST_CAST(GLXEW_VERSION_1_4) = GL_TRUE;\n   28    /* query GLX version */\n   29:   glXQueryVersion(glXGetCurrentDisplay(), &major, &minor);\n   30:   if (major == 1 && minor <= 3)\n   31    {\n   32:     switch (minor)\n   33      {\n   34        case 3:\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_init_tail.c:\n   22      (const GLubyte*)\"GLEW_VERSION_STRING\",\n   23      (const GLubyte*)\"GLEW_VERSION_MAJOR_STRING\",\n   24:     (const GLubyte*)\"GLEW_VERSION_MINOR_STRING\",\n   25      (const GLubyte*)\"GLEW_VERSION_MICRO_STRING\"\n   26    };\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_tail.h:\n   11  #define GLEW_VERSION 1\n   12  #define GLEW_VERSION_MAJOR 2\n   13: #define GLEW_VERSION_MINOR 3\n   14  #define GLEW_VERSION_MICRO 4\n   15  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glewinfo.rc:\n   21  //\n   22  VS_VERSION_INFO VERSIONINFO \n   23: FILEVERSION GLEW_MAJOR, GLEW_MINOR, GLEW_MICRO, 0\n   24: PRODUCTVERSION GLEW_MAJOR, GLEW_MINOR, GLEW_MICRO, 0\n   25  FILEFLAGSMASK VS_FFI_FILEFLAGSMASK\n   26  #ifdef _DEBUG\n   ..\n   40              VALUE \"CompanyName\", \"\\0\"\n   41              VALUE \"FileDescription\", \"Utility for verifying extension entry points\\0\"\n   42:             VALUE \"FileVersion\", \"GLEW_MAJOR,GLEW_MINOR,GLEW_MICRO,0\\0\"\n   43              VALUE \"InternalName\", \"glewinfo\\0\"\n   44              VALUE \"LegalCopyright\", \"© 2002-2008 Milan Ikits & Marcelo Magallon\\0\"\n   ..\n   47              VALUE \"PrivateBuild\", \"\\0\"\n   48              VALUE \"ProductName\", \"The OpenGL Extension Wrangler Library\\0\"\n   49:             VALUE \"ProductVersion\", \"GLEW_MAJOR,GLEW_MINOR,GLEW_MICRO,0\\0\"\n   50              VALUE \"SpecialBuild\", \"\\0\"\n   51          END\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glewinfo_tail.c:\n  189    int attrib[] = { AGL_RGBA, AGL_NONE };\n  190    AGLPixelFormat pf;\n  191:   /*int major, minor;\n  192    SetPortWindowPort(wnd);\n  193:   aglGetVersion(&major, &minor);\n  194:   fprintf(stderr, \"GL %d.%d\\n\", major, minor);*/\n  195    pf = aglChoosePixelFormat(NULL, 0, attrib);\n  196    if (NULL == pf) return GL_TRUE;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glxew_head.h:\n   67  \n   68  extern Bool glXQueryExtension (Display *dpy, int *errorBase, int *eventBase);\n   69: extern Bool glXQueryVersion (Display *dpy, int *major, int *minor);\n   70  extern int glXGetConfig (Display *dpy, XVisualInfo *vis, int attrib, int *value);\n   71  extern XVisualInfo* glXChooseVisual (Display *dpy, int screen, int *attribList);\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/visualinfo.rc:\n   21  //\n   22  VS_VERSION_INFO VERSIONINFO \n   23: FILEVERSION GLEW_MAJOR, GLEW_MINOR, GLEW_MICRO, 0\n   24: PRODUCTVERSION GLEW_MAJOR, GLEW_MINOR, GLEW_MICRO, 0\n   25  FILEFLAGSMASK VS_FFI_FILEFLAGSMASK\n   26  #ifdef _DEBUG\n   ..\n   40              VALUE \"CompanyName\", \"\\0\"\n   41              VALUE \"FileDescription\", \"Utility for listing pixelformat capabilities\\0\"\n   42:             VALUE \"FileVersion\", \"GLEW_MAJOR,GLEW_MINOR,GLEW_MICRO,0\\0\"\n   43              VALUE \"InternalName\", \"visualinfo\\0\"\n   44              VALUE \"LegalCopyright\", \"© 2002-2008 Milan Ikits & Marcelo Magallon\\0\"\n   ..\n   47              VALUE \"PrivateBuild\", \"\\0\"\n   48              VALUE \"ProductName\", \"The OpenGL Extension Wrangler Library\\0\"\n   49:             VALUE \"ProductVersion\", \"GLEW_MAJOR,GLEW_MINOR,GLEW_MICRO,0\\0\"\n   50              VALUE \"SpecialBuild\", \"\\0\"\n   51          END\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/config.guess:\n  388  	echo sparc-auspex-sunos${UNAME_RELEASE}\n  389  	exit ;;\n  390:     # The situation for MiNT is a little confusing.  The machine name\n  391      # can be virtually everything (everything which is not\n  392      # \"atarist\" or \"atariste\" at least should have a processor\n  393:     # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n  394:     # to the lowercase version \"mint\" (or \"freemint\").  Finally\n  395      # the system name \"TOS\" denotes a system which is actually not\n  396:     # MiNT.  But MiNT is downward compatible to TOS, so this should\n  397      # be no problem.\n  398:     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n  399: 	echo m68k-atari-mint${UNAME_RELEASE}\n  400  	exit ;;\n  401:     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n  402: 	echo m68k-atari-mint${UNAME_RELEASE}\n  403  	exit ;;\n  404:     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n  405: 	echo m68k-atari-mint${UNAME_RELEASE}\n  406  	exit ;;\n  407:     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n  408: 	echo m68k-milan-mint${UNAME_RELEASE}\n  409  	exit ;;\n  410:     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n  411: 	echo m68k-hades-mint${UNAME_RELEASE}\n  412  	exit ;;\n  413:     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n  414: 	echo m68k-unknown-mint${UNAME_RELEASE}\n  415  	exit ;;\n  416      m68k:machten:*:*)\n  ...\n  802  	echo ${UNAME_MACHINE}-pc-cygwin\n  803  	exit ;;\n  804:     *:MINGW*:*)\n  805: 	echo ${UNAME_MACHINE}-pc-mingw32\n  806  	exit ;;\n  807      i*:MSYS*:*)\n  ...\n  810      i*:windows32*:*)\n  811  	# uname -m includes \"-pc\" on this system.\n  812: 	echo ${UNAME_MACHINE}-mingw32\n  813  	exit ;;\n  814      i*:PW*:*)\n  ...\n  859  	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu\n  860  	exit ;;\n  861:     i*86:Minix:*:*)\n  862: 	echo ${UNAME_MACHINE}-pc-minix\n  863  	exit ;;\n  864      alpha:Linux:*:*)\n  ...\n 1065  	# Left here for compatibility:\n 1066  	# uname -m prints for DJGPP always 'pc', but it prints nothing about\n 1067: 	# the processor, so we play safe by assuming i586.\n 1068  	# Note: whatever this is, it MUST be the same as what config.sub\n 1069  	# prints for the \"djgpp\" host, or else GDB configury will decide that\n ....\n 1078  	exit ;;\n 1079      i860:*:4.*:*) # i860-SVR4\n 1080: 	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n 1081  	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n 1082  	else # Add other i860-SVR4 vendors below as they are discovered.\n ....\n 1084  	fi\n 1085  	exit ;;\n 1086:     mini*:CTIX:SYS*5:*)\n 1087: 	# \"miniframe\"\n 1088  	echo m68010-convergent-sysv\n 1089  	exit ;;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/Makefile.cygming:\n    2  GLEW_DEST = /usr\n    3  BINDIR = /usr/bin\n    4: LIBDIR = /usr/lib/mingw\n    5: INCDIR = /usr/include/mingw/GL\n    6  # use gcc for linking, with ld it does not work\n    7  CC := gcc -mno-cygwin\n    .\n   15  BIN.SUFFIX = .exe\n   16  LIB.SONAME    = lib$(NAME).dll\n   17: LIB.DEVLNK    = lib$(NAME).dll.a   # for mingw this is the dll import lib\n   18  LIB.SHARED    = $(NAME).dll\n   19  LIB.STATIC    = lib$(NAME).a       # the static lib will be broken (see CFLAGS.SO)\n   20  LDFLAGS.SO    = -shared -Wl,-soname,$(LIB.SONAME) -Wl,--out-implib,lib/$(LIB.DEVLNK)\n   21  LIB.SONAME.MX = lib$(NAME)mx.dll\n   22: LIB.DEVLNK.MX = lib$(NAME)mx.dll.a # for mingw this is the dll import lib\n   23  LIB.SHARED.MX = $(NAME)mx.dll\n   24  LIB.STATIC.MX = lib$(NAME)mx.a     # the static lib will be broken (see CFLAGS.SO)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/Makefile.cygwin:\n   13  POPT = -O2\n   14  BIN.SUFFIX = .exe\n   15: LIB.SONAME    = cyg$(NAME)-$(GLEW_MAJOR)-$(GLEW_MINOR).dll\n   16  LIB.DEVLNK    = lib$(NAME).dll.a\n   17: LIB.SHARED    = cyg$(NAME)-$(GLEW_MAJOR)-$(GLEW_MINOR).dll\n   18  LIB.STATIC    = lib$(NAME).a\n   19  LDFLAGS.SO    = -shared -Wl,--out-implib,lib/$(LIB.DEVLNK)\n   20: LIB.SONAME.MX = cyg$(NAME)mx-$(GLEW_MAJOR)-$(GLEW_MINOR).dll\n   21  LIB.DEVLNK.MX = lib$(NAME)mx.dll.a\n   22: LIB.SHARED.MX = cyg$(NAME)mx-$(GLEW_MAJOR)-$(GLEW_MINOR).dll\n   23  LIB.STATIC.MX = lib$(NAME)mx.a\n   24  LDFLAGS.SO.MX = -shared -Wl,--out-implib,lib/$(LIB.DEVLNK.MX)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/Makefile.fedora-mingw32:\n    1: # For cross-compiling from Linux to Windows x86 using mingw32\n    2: # http://www.mingw.org/\n    3  #\n    4: # $ make SYSTEM=fedora-mingw32\n    5  #\n    6  \n    7: include config/Makefile.linux-mingw32\n    8  \n    9: CC    := i686-pc-mingw32-gcc\n   10: LD    := i686-pc-mingw32-ld\n   11: LDFLAGS.GL += -L/usr/i686-pc-mingw32/sys-root/mingw/lib\n   12  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/Makefile.linux-mingw32:\n    1: # For cross-compiling from Linux to Windows x86 using mingw32\n    2: # http://www.mingw.org/\n    3  #\n    4: # $ make SYSTEM=linux-mingw32\n    5  #\n    6  \n    7  NAME  := glew32\n    8: CC    := i586-mingw32msvc-gcc\n    9: LD    := i586-mingw32msvc-ld\n   10  LN    :=\n   11  STRIP :=\n   ..\n   16  BIN.SUFFIX = .exe\n   17  LIB.SONAME    = lib$(NAME).dll\n   18: LIB.DEVLNK    = lib$(NAME).dll.a    # for mingw this is the dll import lib\n   19  LIB.SHARED    = $(NAME).dll\n   20  LIB.STATIC    = lib$(NAME).a        # the static lib will be broken (see CFLAGS.SO)\n   21  LDFLAGS.SO    = -shared -soname $(LIB.SONAME) --out-implib lib/$(LIB.DEVLNK)\n   22  LIB.SONAME.MX = lib$(NAME)mx.dll\n   23: LIB.DEVLNK.MX = lib$(NAME)mx.dll.a  # for mingw this is the dll import lib\n   24  LIB.SHARED.MX = $(NAME)mx.dll\n   25  LIB.STATIC.MX = lib$(NAME)mx.a      # the static lib will be broken (see CFLAGS.SO)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/Makefile.linux-mingw64:\n    1: # For cross-compiling from Linux to Windows amd64 using mingw32\n    2: # http://www.mingw.org/\n    3  #\n    4: # $ make SYSTEM=linux-mingw64\n    5  #\n    6  \n    7  NAME  := glew32\n    8: CC    := amd64-mingw32msvc-gcc\n    9: LD    := amd64-mingw32msvc-ld\n   10  LN    :=\n   11  STRIP :=\n   ..\n   16  BIN.SUFFIX = .exe\n   17  LIB.SONAME    = lib$(NAME).dll\n   18: LIB.DEVLNK    = lib$(NAME).dll.a    # for mingw this is the dll import lib\n   19  LIB.SHARED    = $(NAME).dll\n   20  LIB.STATIC    = lib$(NAME).a        # the static lib will be broken (see CFLAGS.SO)\n   21  LDFLAGS.SO    = -shared -soname $(LIB.SONAME) --out-implib lib/$(LIB.DEVLNK)\n   22  LIB.SONAME.MX = lib$(NAME)mx.dll\n   23: LIB.DEVLNK.MX = lib$(NAME)mx.dll.a  # for mingw this is the dll import lib\n   24  LIB.SHARED.MX = $(NAME)mx.dll\n   25  LIB.STATIC.MX = lib$(NAME)mx.a      # the static lib will be broken (see CFLAGS.SO)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/Makefile.mingw:\n    6  CFLAGS.SO = -DGLEW_BUILD\n    7  LDFLAGS.GL = -lopengl32 -lgdi32 -luser32 -lkernel32\n    8: LDFLAGS.EXTRA = -L/mingw/lib\n    9  WARN = -Wall -W\n   10  POPT = -O2\n   11  BIN.SUFFIX = .exe\n   12  LIB.SONAME    = lib$(NAME).dll\n   13: LIB.DEVLNK    = lib$(NAME).dll.a   # for mingw this is the dll import lib\n   14  LIB.SHARED    = $(NAME).dll\n   15  LIB.STATIC    = lib$(NAME).a       # the static lib will be broken (see CFLAGS.SO)\n   16  LDFLAGS.SO    = -shared -Wl,-soname,$(LIB.SONAME) -Wl,--out-implib,lib/$(LIB.DEVLNK)\n   17  LIB.SONAME.MX = lib$(NAME)mx.dll\n   18: LIB.DEVLNK.MX = lib$(NAME)mx.dll.a # for mingw this is the dll import lib\n   19  LIB.SHARED.MX = $(NAME)mx.dll\n   20  LIB.STATIC.MX = lib$(NAME)mx.a     # the static lib will be broken (see CFLAGS.SO)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/version:\n    1  GLEW_MAJOR = 1\n    2: GLEW_MINOR = 9\n    3  GLEW_MICRO = 0\n    4: GLEW_VERSION = $(GLEW_MAJOR).$(GLEW_MINOR).$(GLEW_MICRO)\n    5  GLEW_NAME = GLEW\n    6: SO_MAJOR = $(GLEW_MAJOR).$(GLEW_MINOR)\n    7  SO_VERSION = $(GLEW_VERSION)\n    8  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/advanced.html:\n  173  <p>\n  174  Note that <tt>Function Definitions</tt> are copied to the header files\n  175: without changes and have to be terminated with a semicolon. In\n  176  contrast, <tt>Tokens</tt>, <tt>Function signatures</tt>, and\n  177: <tt>Typedefs</tt> should not be terminated with a semicolon.\n  178  </p>\n  179  -->\n  ...\n  182  Take a look at one of the files in <tt>auto/core</tt> for an\n  183  example. Note that typedefs and function signatures should not be\n  184: terminated with a semicolon.\n  185  </p>\n  186  \n  ...\n  242  default ignores this requirement, and does not define per-context\n  243  entry points (you can however do this using the steps described\n  244: above).</b> Assuming a global namespace for the entry points works in\n  245  most situations, because typically all hardware accelerated pixel\n  246  formats provide the same entry points and capabilities. This means\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/basic.html:\n  208  Platform specific extensions are separated into two header files:\n  209  <tt>wglew.h</tt> and <tt>glxew.h</tt>, which define the available\n  210: <tt>WGL</tt> and <tt>GLX</tt> extensions.  To determine if a certain\n  211  extension is supported, query <tt>WGLEW_{extension name}</tt> or\n  212  <tt>GLXEW_{extension_name}</tt>.  For example:\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/credits.html:\n  105  href=\"http://wwwvis.informatik.uni-stuttgart.de/~magallon/\">Marcelo\n  106  Magallon</a>.  They also perform occasional maintainance to make sure\n  107: that GLEW stays in mint condition.  Aaron Lefohn, Joe Kniss, and Chris\n  108  Wyman were the first users and also assisted with the design and\n  109  debugging process.  The acronym GLEW originates from Aaron Lefohn.\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/glew.html:\n  105  <tr><td class=\"num\">3</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/3DFX/texture_compression_FXT1.txt\">3DFX_texture_compression_FXT1</a></td></tr>\n  106  <tr><td><br></td><td></td><td></td></tr>\n  107: <tr><td class=\"num\">4</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/AMD/blend_minmax_factor.txt\">AMD_blend_minmax_factor</a></td></tr>\n  108  <tr><td class=\"num\">5</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/AMD/conservative_depth.txt\">AMD_conservative_depth</a></td></tr>\n  109  <tr><td class=\"num\">6</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/AMD/debug_output.txt\">AMD_debug_output</a></td></tr>\n  ...\n  282  <tr><td class=\"num\">175</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/ATI/fragment_shader.txt\">ATI_fragment_shader</a></td></tr>\n  283  <tr><td class=\"num\">176</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/ATI/map_object_buffer.txt\">ATI_map_object_buffer</a></td></tr>\n  284: <tr><td class=\"num\">177</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/ATI/meminfo.txt\">ATI_meminfo</a></td></tr>\n  285  <tr><td class=\"num\">178</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/ATI/pn_triangles.txt\">ATI_pn_triangles</a></td></tr>\n  286  <tr><td class=\"num\">179</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/ATI/separate_stencil.txt\">ATI_separate_stencil</a></td></tr>\n  ...\n  304  <tr><td class=\"num\">196</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/EXT/blend_func_separate.txt\">EXT_blend_func_separate</a></td></tr>\n  305  <tr><td class=\"num\">197</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/EXT/blend_logic_op.txt\">EXT_blend_logic_op</a></td></tr>\n  306: <tr><td class=\"num\">198</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/EXT/blend_minmax.txt\">EXT_blend_minmax</a></td></tr>\n  307  <tr><td class=\"num\">199</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/EXT/blend_subtract.txt\">EXT_blend_subtract</a></td></tr>\n  308  <tr><td class=\"num\">200</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/EXT/clip_volume_hint.txt\">EXT_clip_volume_hint</a></td></tr>\n  ...\n  396  <tr><td class=\"num\">288</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/EXT/x11_sync_object.txt\">EXT_x11_sync_object</a></td></tr>\n  397  <tr><td><br></td><td></td><td></td></tr>\n  398: <tr><td class=\"num\">289</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/GREMEDY/frame_terminator.txt\">GREMEDY_frame_terminator</a></td></tr>\n  399  <tr><td class=\"num\">290</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/GREMEDY/string_marker.txt\">GREMEDY_string_marker</a></td></tr>\n  400  <tr><td><br></td><td></td><td></td></tr>\n  ...\n  537  <tr><td class=\"num\">410</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/SGIX/async_histogram.txt\">SGIX_async_histogram</a></td></tr>\n  538  <tr><td class=\"num\">411</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/SGIX/async_pixel.txt\">SGIX_async_pixel</a></td></tr>\n  539: <tr><td class=\"num\">412</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/SGIX/blend_alpha_minmax.txt\">SGIX_blend_alpha_minmax</a></td></tr>\n  540  <tr><td class=\"num\">413</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/SGIX/clipmap.txt\">SGIX_clipmap</a></td></tr>\n  541  <tr><td class=\"num\">414</td><td>&nbsp;</td><td><a href=\"http://www.opengl.org/registry/specs/SGIX/convolution_accuracy.txt\">SGIX_convolution_accuracy</a></td></tr>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/gpl.txt:\n   89  \n   90    2. You may modify your copy or copies of the Program or any portion\n   91: of it, thus forming a work based on the Program, and copy and\n   92  distribute such modifications or work under the terms of Section 1\n   93  above, provided that you also meet all of these conditions:\n   94  \n   95:     a) You must cause the modified files to carry prominent notices\n   96      stating that you changed the files and the date of any change.\n   97  \n   ..\n  142      b) Accompany it with a written offer, valid for at least three\n  143      years, to give any third party, for a charge no more than your\n  144:     cost of physically performing source distribution, a complete\n  145      machine-readable copy of the corresponding source code, to be\n  146      distributed under the terms of Sections 1 and 2 above on a medium\n  ...\n  173  except as expressly provided under this License.  Any attempt\n  174  otherwise to copy, modify, sublicense or distribute the Program is\n  175: void, and will automatically terminate your rights under this License.\n  176  However, parties who have received copies, or rights, from you under\n  177: this License will not have their licenses terminated so long as such\n  178  parties remain in full compliance.\n  179  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/index.html:\n  101  The OpenGL Extension Wrangler Library (GLEW) is a cross-platform\n  102  open-source C/C++ extension loading library.  GLEW provides efficient\n  103: run-time mechanisms for determining which OpenGL extensions are\n  104  supported on the target platform.  OpenGL core and extension\n  105  functionality is exposed in a single header file.  GLEW has been\n  ...\n  165  <ul>\n  166  <li>[08-06-12] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.9.0/\">GLEW 1.9.0</a> adds support for OpenGL 4.3, new extensions</li>\n  167: <li>[07-17-12] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.8.0/\">GLEW 1.8.0</a> fixes minor bugs and adds new extensions</li>\n  168  <li>[08-26-11] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.7.0/\">GLEW 1.7.0</a> adds support for OpenGL 4.2, new extensions, fixes bugs</li>\n  169: <li>[04-27-11] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.6.0/\">GLEW 1.6.0</a> fixes minor bugs and adds eight new extensions</li>\n  170: <li>[01-31-11] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.8/\">GLEW 1.5.8</a> fixes minor bugs and adds two new extensions</li>\n  171: <li>[11-03-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.7/\">GLEW 1.5.7</a> fixes minor bugs and adds one new extension</li>\n  172  <li>[09-07-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.6/\">GLEW 1.5.6</a> adds support for OpenGL 4.1, fixes bugs</li>\n  173: <li>[07-13-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.5/\">GLEW 1.5.5</a> fixes minor bugs and adds new extensions</li>\n  174  <li>[04-21-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.4/\">GLEW 1.5.4</a> adds support for OpenGL 3.3, OpenGL 4.0 and new extensions, fixes bugs</li>\n  175: <li>[02-28-10] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.3/\">GLEW 1.5.3</a> fixes minor bugs and adds three new extensions</li>\n  176  <li>[12-31-09] <a href=\"https://sourceforge.net/projects/glew/files/glew/1.5.2/\">GLEW 1.5.2</a> adds support for OpenGL 3.1, OpenGL 3.2 and new extensions</li>\n  177  <li>[11-03-08] <a href=\"https://sourceforge.net/project/showfiles.php?group_id=67586&amp;package_id=67942&amp;release_id=637800\">GLEW 1.5.1</a> adds support for OpenGL 3.0 and 31 new extensions</li>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/install.html:\n  187  where the OpenGL equivalents <tt>gl.h</tt>, <tt>opengl32.lib</tt>, and\n  188  <tt>opengl32.dll</tt> / <tt>libGL.so</tt> are located.  Note that you\n  189: need administrative privileges to do this.  If you do not have\n  190: administrator access and your system administrator will not do it for\n  191  you, you can install GLEW into your own lib and include subdirectories\n  192  and tell the compiler where to find it. Then you can just replace\n  ...\n  218  \n  219  <p>\n  220: It is important to keep in mind that <tt>glew.h</tt> includes neither\n  221  <tt>windows.h</tt> nor <tt>gl.h</tt>.  Also, GLEW will warn you by\n  222  issuing a preprocessor error in case you have included <tt>gl.h</tt>,\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/log.html:\n  231  <li> New extensions:\n  232  <ul>\n  233: <li> GL_AMD_blend_minmax_factor\n  234  <li> GL_AMD_sample_positions\n  235  <li> GL_EXT_x11_sync_object\n  ...\n  286  <li> Bug fixes:\n  287  <ul>\n  288: <li> Improved mingw32 build support\n  289  <li> Improved cygwin build support\n  290  <li> glGetPointervEXT fix\n  ...\n  451  <li> GL_ARB_uniform_buffer_object\n  452  <li> GL_ARB_vertex_array_bgra\n  453: <li> GL_ATI_meminfo\n  454  <li> GL_EXT_provoking_vertex\n  455  <li> GL_EXT_separate_shader_objects\n  ...\n  530  <ul>\n  531  <li> Licensing issues with documentation\n  532: <li> Problems with long long and _MSC_VER on MINGW \n  533  <li> Incorrect parameter for glGetUniformLocation\n  534  <li> glewGetExtension fails on last entry \n  ...\n  548  <li> Licensing change (BSD, Mesa 3-D, Khronos)\n  549  <li> Switch to using registry on <a href=\"http://www.opengl.org/registry/\">www.opengl.org</a>\n  550: <li> Support for major and minor version strings\n  551  </ul>\n  552  <li> New extensions:\n  553  <ul>\n  554  <li> GL_APPLE_flush_buffer_range\n  555: <li> GL_GREMEDY_frame_terminator\n  556  <li> GLX_EXT_texture_from_pixmap\n  557  </ul>\n  ...\n  714  <li> Missing OpenGL 2.0 entry points\n  715  <li> Missing tokens in GL_SGIX_shadow\n  716: <li> MinGW makefile problem\n  717  <li> Check for incorrect OpenGL version string on SiS hardware\n  718  <li> Documentation update to meet the HTML 4.01 Transitional specification\n  ...\n  776  <ul>\n  777  <li> OpenGL version detection bug\n  778: <li> Problems with wxWindows and MinGW compilation\n  779  <li> <tt>visualinfo</tt> compilation problem with GLEW_MX specified\n  780  <li> Wrong token name in OpenGL 1.5 core\n  ...\n  826  <li> Added command line flags to <tt>glewinfo</tt> for selecting displays and visuals\n  827  <li> Added GLX_SGIS_multisample, GLX_SUN_video_resize, and GL_SUN_read_video_pixels\n  828: <li> Added MinGW/MSYS support\n  829  <li> Bug fixes in GL_ARB_shader_objects and the OS X build\n  830  </ul>\n  ...\n  864  <li> Added GLX_NV_float_buffer, GL_ARB_shading_language_100, and GL_ARB_texture_non_power_of_two\n  865  <li> Fixed bug in GL_ARB_vertex_buffer_object\n  866: <li> Minor updates in documentation\n  867  </ul>\n  868  </ul>\n  ...\n  909  <ul>\n  910  <li> Added NV_texture_expand_normal\n  911: <li> Added mingw support\n  912  <li> Updated documentation\n  913  </ul>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/include/GL/glew.h:\n  112  #ifndef APIENTRY\n  113  #define GLEW_APIENTRY_DEFINED\n  114: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n  115  #    define APIENTRY __stdcall\n  116  #  elif (_MSC_VER >= 800) || defined(_STDCALL_SUPPORTED) || defined(__BORLANDC__)\n  ...\n  121  #endif\n  122  #ifndef GLAPI\n  123: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n  124  #    define GLAPI extern\n  125  #  endif\n  ...\n  128  #ifndef CALLBACK\n  129  #define GLEW_CALLBACK_DEFINED\n  130: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n  131  #    define CALLBACK __attribute__ ((__stdcall__))\n  132  #  elif (defined(_M_MRX000) || defined(_M_IX86) || defined(_M_ALPHA) || defined(_M_PPC)) && !defined(MIDL_PASS)\n  ...\n  154  #  endif\n  155  #endif\n  156: #if !defined(_PTRDIFF_T_DEFINED) && !defined(_PTRDIFF_T_) && !defined(__MINGW64__)\n  157  #  ifdef _WIN64\n  158  typedef __int64 ptrdiff_t;\n  ...\n  165  \n  166  #ifndef GLAPI\n  167: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n  168  #    define GLAPI extern\n  169  #  else\n  ...\n  283  typedef unsigned long long GLuint64EXT;\n  284  #else\n  285: #  if defined(__MINGW32__) || defined(__CYGWIN__)\n  286  #include <inttypes.h>\n  287  #  endif\n  ...\n  339  #define GL_ALWAYS 0x0207\n  340  #define GL_SRC_COLOR 0x0300\n  341: #define GL_ONE_MINUS_SRC_COLOR 0x0301\n  342  #define GL_SRC_ALPHA 0x0302\n  343: #define GL_ONE_MINUS_SRC_ALPHA 0x0303\n  344  #define GL_DST_ALPHA 0x0304\n  345: #define GL_ONE_MINUS_DST_ALPHA 0x0305\n  346  #define GL_DST_COLOR 0x0306\n  347: #define GL_ONE_MINUS_DST_COLOR 0x0307\n  348  #define GL_SRC_ALPHA_SATURATE 0x0308\n  349  #define GL_STENCIL_BUFFER_BIT 0x00000400\n  ...\n  664  #define GL_RGB 0x1907\n  665  #define GL_RGBA 0x1908\n  666: #define GL_LUMINANCE 0x1909\n  667: #define GL_LUMINANCE_ALPHA 0x190A\n  668  #define GL_BITMAP 0x1A00\n  669  #define GL_POINT 0x1B00\n  ...\n  706  #define GL_LINEAR_MIPMAP_LINEAR 0x2703\n  707  #define GL_TEXTURE_MAG_FILTER 0x2800\n  708: #define GL_TEXTURE_MIN_FILTER 0x2801\n  709  #define GL_TEXTURE_WRAP_S 0x2802\n  710  #define GL_TEXTURE_WRAP_T 0x2803\n  ...\n  751  #define GL_ALPHA12 0x803D\n  752  #define GL_ALPHA16 0x803E\n  753: #define GL_LUMINANCE4 0x803F\n  754: #define GL_LUMINANCE8 0x8040\n  755: #define GL_LUMINANCE12 0x8041\n  756: #define GL_LUMINANCE16 0x8042\n  757: #define GL_LUMINANCE4_ALPHA4 0x8043\n  758: #define GL_LUMINANCE6_ALPHA2 0x8044\n  759: #define GL_LUMINANCE8_ALPHA8 0x8045\n  760: #define GL_LUMINANCE12_ALPHA4 0x8046\n  761: #define GL_LUMINANCE12_ALPHA12 0x8047\n  762: #define GL_LUMINANCE16_ALPHA16 0x8048\n  763  #define GL_INTENSITY 0x8049\n  764  #define GL_INTENSITY4 0x804A\n  ...\n  783  #define GL_TEXTURE_BLUE_SIZE 0x805E\n  784  #define GL_TEXTURE_ALPHA_SIZE 0x805F\n  785: #define GL_TEXTURE_LUMINANCE_SIZE 0x8060\n  786  #define GL_TEXTURE_INTENSITY_SIZE 0x8061\n  787  #define GL_PROXY_TEXTURE_1D 0x8063\n  ...\n 1212  #define GL_MAX_ELEMENTS_INDICES 0x80E9\n 1213  #define GL_CLAMP_TO_EDGE 0x812F\n 1214: #define GL_TEXTURE_MIN_LOD 0x813A\n 1215  #define GL_TEXTURE_MAX_LOD 0x813B\n 1216  #define GL_TEXTURE_BASE_LEVEL 0x813C\n ....\n 1307  #define GL_SUBTRACT 0x84E7\n 1308  #define GL_COMPRESSED_ALPHA 0x84E9\n 1309: #define GL_COMPRESSED_LUMINANCE 0x84EA\n 1310: #define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB\n 1311  #define GL_COMPRESSED_INTENSITY 0x84EC\n 1312  #define GL_COMPRESSED_RGB 0x84ED\n ....\n 1461  #define GL_BLEND_DST_ALPHA 0x80CA\n 1462  #define GL_BLEND_SRC_ALPHA 0x80CB\n 1463: #define GL_POINT_SIZE_MIN 0x8126\n 1464  #define GL_POINT_SIZE_MAX 0x8127\n 1465  #define GL_POINT_FADE_THRESHOLD_SIZE 0x8128\n ....\n 1806  typedef void (GLAPIENTRY * PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);\n 1807  typedef GLint (GLAPIENTRY * PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar* name);\n 1808: typedef void (GLAPIENTRY * PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);\n 1809  typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint* param);\n 1810  typedef void (GLAPIENTRY * PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);\n ....\n 1900  #define glGetAttachedShaders GLEW_GET_FUN(__glewGetAttachedShaders)\n 1901  #define glGetAttribLocation GLEW_GET_FUN(__glewGetAttribLocation)\n 1902: #define glGetProgramInfoLog GLEW_GET_FUN(__glewGetProgramInfoLog)\n 1903  #define glGetProgramiv GLEW_GET_FUN(__glewGetProgramiv)\n 1904  #define glGetShaderInfoLog GLEW_GET_FUN(__glewGetShaderInfoLog)\n ....\n 2002  #define GL_SRGB_ALPHA 0x8C42\n 2003  #define GL_SRGB8_ALPHA8 0x8C43\n 2004: #define GL_SLUMINANCE_ALPHA 0x8C44\n 2005: #define GL_SLUMINANCE8_ALPHA8 0x8C45\n 2006: #define GL_SLUMINANCE 0x8C46\n 2007: #define GL_SLUMINANCE8 0x8C47\n 2008  #define GL_COMPRESSED_SRGB 0x8C48\n 2009  #define GL_COMPRESSED_SRGB_ALPHA 0x8C49\n 2010: #define GL_COMPRESSED_SLUMINANCE 0x8C4A\n 2011: #define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B\n 2012  \n 2013  typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\n ....\n 2045  #define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x0001\n 2046  #define GL_MAJOR_VERSION 0x821B\n 2047: #define GL_MINOR_VERSION 0x821C\n 2048  #define GL_NUM_EXTENSIONS 0x821D\n 2049  #define GL_CONTEXT_FLAGS 0x821E\n ....\n 2058  #define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD\n 2059  #define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF\n 2060: #define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904\n 2061  #define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905\n 2062  #define GL_CLAMP_VERTEX_COLOR 0x891A\n ....\n 2068  #define GL_TEXTURE_BLUE_TYPE 0x8C12\n 2069  #define GL_TEXTURE_ALPHA_TYPE 0x8C13\n 2070: #define GL_TEXTURE_LUMINANCE_TYPE 0x8C14\n 2071  #define GL_TEXTURE_INTENSITY_TYPE 0x8C15\n 2072  #define GL_TEXTURE_DEPTH_TYPE 0x8C16\n ....\n 2380  #define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F\n 2381  #define GL_SAMPLE_SHADING 0x8C36\n 2382: #define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37\n 2383  #define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A\n 2384: #define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B\n 2385  #define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C\n 2386  #define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D\n 2387: #define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E\n 2388  #define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F\n 2389  #define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS 0x8F9F\n ....\n 2400  typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\n 2401  typedef void (GLAPIENTRY * PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);\n 2402: typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGPROC) (GLclampf value);\n 2403  \n 2404  #define glBlendEquationSeparatei GLEW_GET_FUN(__glewBlendEquationSeparatei)\n ....\n 2406  #define glBlendFuncSeparatei GLEW_GET_FUN(__glewBlendFuncSeparatei)\n 2407  #define glBlendFunci GLEW_GET_FUN(__glewBlendFunci)\n 2408: #define glMinSampleShading GLEW_GET_FUN(__glewMinSampleShading)\n 2409  \n 2410  #define GLEW_VERSION_4_0 GLEW_GET_VAR(__GLEW_VERSION_4_0)\n ....\n 2486  #endif /* GL_3DFX_texture_compression_FXT1 */\n 2487  \n 2488: /* ----------------------- GL_AMD_blend_minmax_factor ---------------------- */\n 2489  \n 2490: #ifndef GL_AMD_blend_minmax_factor\n 2491: #define GL_AMD_blend_minmax_factor 1\n 2492  \n 2493: #define GL_FACTOR_MIN_AMD 0x901C\n 2494  #define GL_FACTOR_MAX_AMD 0x901D\n 2495  \n 2496: #define GLEW_AMD_blend_minmax_factor GLEW_GET_VAR(__GLEW_AMD_blend_minmax_factor)\n 2497  \n 2498: #endif /* GL_AMD_blend_minmax_factor */\n 2499  \n 2500  /* ----------------------- GL_AMD_conservative_depth ----------------------- */\n ....\n 2876  #define GL_ALPHA_FLOAT32_APPLE 0x8816\n 2877  #define GL_INTENSITY_FLOAT32_APPLE 0x8817\n 2878: #define GL_LUMINANCE_FLOAT32_APPLE 0x8818\n 2879: #define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819\n 2880  #define GL_RGBA_FLOAT16_APPLE 0x881A\n 2881  #define GL_RGB_FLOAT16_APPLE 0x881B\n 2882  #define GL_ALPHA_FLOAT16_APPLE 0x881C\n 2883  #define GL_INTENSITY_FLOAT16_APPLE 0x881D\n 2884: #define GL_LUMINANCE_FLOAT16_APPLE 0x881E\n 2885: #define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F\n 2886  #define GL_COLOR_FLOAT_APPLE 0x8A0F\n 2887  \n ....\n 2937  #define GL_APPLE_pixel_buffer 1\n 2938  \n 2939: #define GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE 0x8A10\n 2940  \n 2941  #define GLEW_APPLE_pixel_buffer GLEW_GET_VAR(__GLEW_APPLE_pixel_buffer)\n ....\n 3199  \n 3200  #define GL_SRC1_COLOR 0x88F9\n 3201: #define GL_ONE_MINUS_SRC1_COLOR 0x88FA\n 3202: #define GL_ONE_MINUS_SRC1_ALPHA 0x88FB\n 3203  #define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC\n 3204  \n ....\n 3867  #define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F\n 3868  #define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A\n 3869: #define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B\n 3870  #define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C\n 3871  #define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D\n ....\n 3964  \n 3965  #define GL_CONSTANT_COLOR 0x8001\n 3966: #define GL_ONE_MINUS_CONSTANT_COLOR 0x8002\n 3967  #define GL_CONSTANT_ALPHA 0x8003\n 3968: #define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004\n 3969  #define GL_BLEND_COLOR 0x8005\n 3970  #define GL_FUNC_ADD 0x8006\n 3971: #define GL_MIN 0x8007\n 3972  #define GL_MAX 0x8008\n 3973  #define GL_BLEND_EQUATION 0x8009\n ....\n 4002  #define GL_HISTOGRAM_BLUE_SIZE 0x802A\n 4003  #define GL_HISTOGRAM_ALPHA_SIZE 0x802B\n 4004: #define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C\n 4005  #define GL_HISTOGRAM_SINK 0x802D\n 4006: #define GL_MINMAX 0x802E\n 4007: #define GL_MINMAX_FORMAT 0x802F\n 4008: #define GL_MINMAX_SINK 0x8030\n 4009  #define GL_TABLE_TOO_LARGE 0x8031\n 4010  #define GL_COLOR_MATRIX 0x80B1\n ....\n 4033  #define GL_COLOR_TABLE_BLUE_SIZE 0x80DC\n 4034  #define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD\n 4035: #define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE\n 4036  #define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF\n 4037  #define GL_IGNORE_BORDER 0x8150\n ....\n 4064  typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);\n 4065  typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);\n 4066: typedef void (GLAPIENTRY * PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values);\n 4067: typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);\n 4068: typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);\n 4069  typedef void (GLAPIENTRY * PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);\n 4070  typedef void (GLAPIENTRY * PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);\n 4071: typedef void (GLAPIENTRY * PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);\n 4072  typedef void (GLAPIENTRY * PFNGLRESETHISTOGRAMPROC) (GLenum target);\n 4073: typedef void (GLAPIENTRY * PFNGLRESETMINMAXPROC) (GLenum target);\n 4074  typedef void (GLAPIENTRY * PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);\n 4075  \n ....\n 4097  #define glGetHistogramParameterfv GLEW_GET_FUN(__glewGetHistogramParameterfv)\n 4098  #define glGetHistogramParameteriv GLEW_GET_FUN(__glewGetHistogramParameteriv)\n 4099: #define glGetMinmax GLEW_GET_FUN(__glewGetMinmax)\n 4100: #define glGetMinmaxParameterfv GLEW_GET_FUN(__glewGetMinmaxParameterfv)\n 4101: #define glGetMinmaxParameteriv GLEW_GET_FUN(__glewGetMinmaxParameteriv)\n 4102  #define glGetSeparableFilter GLEW_GET_FUN(__glewGetSeparableFilter)\n 4103  #define glHistogram GLEW_GET_FUN(__glewHistogram)\n 4104: #define glMinmax GLEW_GET_FUN(__glewMinmax)\n 4105  #define glResetHistogram GLEW_GET_FUN(__glewResetHistogram)\n 4106: #define glResetMinmax GLEW_GET_FUN(__glewResetMinmax)\n 4107  #define glSeparableFilter2D GLEW_GET_FUN(__glewSeparableFilter2D)\n 4108  \n ....\n 4299  #define GL_ARB_map_buffer_alignment 1\n 4300  \n 4301: #define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC\n 4302  \n 4303  #define GLEW_ARB_map_buffer_alignment GLEW_GET_VAR(__GLEW_ARB_map_buffer_alignment)\n ....\n 4575  #define GL_ARB_point_parameters 1\n 4576  \n 4577: #define GL_POINT_SIZE_MIN_ARB 0x8126\n 4578  #define GL_POINT_SIZE_MAX_ARB 0x8127\n 4579  #define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128\n ....\n 4655  #define GL_LOCATION_INDEX 0x930F\n 4656  \n 4657: typedef void (GLAPIENTRY * PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint* params);\n 4658: typedef GLuint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar* name);\n 4659: typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar* name);\n 4660: typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar* name);\n 4661: typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar *name);\n 4662: typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum* props, GLsizei bufSize, GLsizei *length, GLint *params);\n 4663  \n 4664: #define glGetProgramInterfaceiv GLEW_GET_FUN(__glewGetProgramInterfaceiv)\n 4665  #define glGetProgramResourceIndex GLEW_GET_FUN(__glewGetProgramResourceIndex)\n 4666  #define glGetProgramResourceLocation GLEW_GET_FUN(__glewGetProgramResourceLocation)\n ....\n 4721  typedef void (GLAPIENTRY * PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v);\n 4722  typedef void (GLAPIENTRY * PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint* v);\n 4723: typedef void (GLAPIENTRY * PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);\n 4724  typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat* values);\n 4725  typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint* values);\n ....\n 4742  #define glGetnMapfvARB GLEW_GET_FUN(__glewGetnMapfvARB)\n 4743  #define glGetnMapivARB GLEW_GET_FUN(__glewGetnMapivARB)\n 4744: #define glGetnMinmaxARB GLEW_GET_FUN(__glewGetnMinmaxARB)\n 4745  #define glGetnPixelMapfvARB GLEW_GET_FUN(__glewGetnPixelMapfvARB)\n 4746  #define glGetnPixelMapuivARB GLEW_GET_FUN(__glewGetnPixelMapuivARB)\n ....\n 4783  \n 4784  #define GL_SAMPLE_SHADING_ARB 0x8C36\n 4785: #define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37\n 4786  \n 4787: typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGARBPROC) (GLclampf value);\n 4788  \n 4789: #define glMinSampleShadingARB GLEW_GET_FUN(__glewMinSampleShadingARB)\n 4790  \n 4791  #define GLEW_ARB_sample_shading GLEW_GET_VAR(__GLEW_ARB_sample_shading)\n ....\n 5592  \n 5593  #define GL_COMPRESSED_ALPHA_ARB 0x84E9\n 5594: #define GL_COMPRESSED_LUMINANCE_ARB 0x84EA\n 5595: #define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB\n 5596  #define GL_COMPRESSED_INTENSITY_ARB 0x84EC\n 5597  #define GL_COMPRESSED_RGB_ARB 0x84ED\n ....\n 5761  #define GL_ALPHA32F_ARB 0x8816\n 5762  #define GL_INTENSITY32F_ARB 0x8817\n 5763: #define GL_LUMINANCE32F_ARB 0x8818\n 5764: #define GL_LUMINANCE_ALPHA32F_ARB 0x8819\n 5765  #define GL_RGBA16F_ARB 0x881A\n 5766  #define GL_RGB16F_ARB 0x881B\n 5767  #define GL_ALPHA16F_ARB 0x881C\n 5768  #define GL_INTENSITY16F_ARB 0x881D\n 5769: #define GL_LUMINANCE16F_ARB 0x881E\n 5770: #define GL_LUMINANCE_ALPHA16F_ARB 0x881F\n 5771  #define GL_TEXTURE_RED_TYPE_ARB 0x8C10\n 5772  #define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11\n 5773  #define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12\n 5774  #define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13\n 5775: #define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14\n 5776  #define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15\n 5777  #define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16\n ....\n 5787  #define GL_ARB_texture_gather 1\n 5788  \n 5789: #define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E\n 5790  #define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F\n 5791  #define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F\n ....\n 5999  #define GL_ARB_texture_view 1\n 6000  \n 6001: #define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB\n 6002  #define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC\n 6003: #define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD\n 6004  #define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE\n 6005  #define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF\n 6006  \n 6007: typedef void (GLAPIENTRY * PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);\n 6008  \n 6009  #define glTextureView GLEW_GET_FUN(__glewTextureView)\n ....\n 6091  \n 6092  typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei primcount);\n 6093: typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei primcount);\n 6094  \n 6095  #define glDrawTransformFeedbackInstanced GLEW_GET_FUN(__glewDrawTransformFeedbackInstanced)\n 6096: #define glDrawTransformFeedbackStreamInstanced GLEW_GET_FUN(__glewDrawTransformFeedbackStreamInstanced)\n 6097  \n 6098  #define GLEW_ARB_transform_feedback_instanced GLEW_GET_VAR(__GLEW_ARB_transform_feedback_instanced)\n ....\n 6167  typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);\n 6168  typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);\n 6169: typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);\n 6170: typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);\n 6171  typedef void (GLAPIENTRY * PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint* data);\n 6172  typedef GLuint (GLAPIENTRY * PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar* uniformBlockName);\n 6173: typedef void (GLAPIENTRY * PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices);\n 6174  typedef void (GLAPIENTRY * PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);\n 6175  \n ....\n 6182  #define glGetIntegeri_v GLEW_GET_FUN(__glewGetIntegeri_v)\n 6183  #define glGetUniformBlockIndex GLEW_GET_FUN(__glewGetUniformBlockIndex)\n 6184: #define glGetUniformIndices GLEW_GET_FUN(__glewGetUniformIndices)\n 6185  #define glUniformBlockBinding GLEW_GET_FUN(__glewUniformBlockBinding)\n 6186  \n ....\n 7092  #endif /* GL_ATI_map_object_buffer */\n 7093  \n 7094: /* ----------------------------- GL_ATI_meminfo ---------------------------- */\n 7095  \n 7096: #ifndef GL_ATI_meminfo\n 7097: #define GL_ATI_meminfo 1\n 7098  \n 7099  #define GL_VBO_FREE_MEMORY_ATI 0x87FB\n ....\n 7101  #define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD\n 7102  \n 7103: #define GLEW_ATI_meminfo GLEW_GET_VAR(__GLEW_ATI_meminfo)\n 7104  \n 7105: #endif /* GL_ATI_meminfo */\n 7106  \n 7107  /* -------------------------- GL_ATI_pn_triangles -------------------------- */\n ....\n 7175  #define GL_ATI_texture_compression_3dc 1\n 7176  \n 7177: #define GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI 0x8837\n 7178  \n 7179  #define GLEW_ATI_texture_compression_3dc GLEW_GET_VAR(__GLEW_ATI_texture_compression_3dc)\n ....\n 7203  #define GL_ALPHA_FLOAT32_ATI 0x8816\n 7204  #define GL_INTENSITY_FLOAT32_ATI 0x8817\n 7205: #define GL_LUMINANCE_FLOAT32_ATI 0x8818\n 7206: #define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819\n 7207  #define GL_RGBA_FLOAT16_ATI 0x881A\n 7208  #define GL_RGB_FLOAT16_ATI 0x881B\n 7209  #define GL_ALPHA_FLOAT16_ATI 0x881C\n 7210  #define GL_INTENSITY_FLOAT16_ATI 0x881D\n 7211: #define GL_LUMINANCE_FLOAT16_ATI 0x881E\n 7212: #define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F\n 7213  \n 7214  #define GLEW_ATI_texture_float GLEW_GET_VAR(__GLEW_ATI_texture_float)\n ....\n 7480  \n 7481  #define GL_CONSTANT_COLOR_EXT 0x8001\n 7482: #define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002\n 7483  #define GL_CONSTANT_ALPHA_EXT 0x8003\n 7484: #define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004\n 7485  #define GL_BLEND_COLOR_EXT 0x8005\n 7486  \n ....\n 7536  #endif /* GL_EXT_blend_logic_op */\n 7537  \n 7538: /* -------------------------- GL_EXT_blend_minmax -------------------------- */\n 7539  \n 7540: #ifndef GL_EXT_blend_minmax\n 7541: #define GL_EXT_blend_minmax 1\n 7542  \n 7543  #define GL_FUNC_ADD_EXT 0x8006\n 7544: #define GL_MIN_EXT 0x8007\n 7545  #define GL_MAX_EXT 0x8008\n 7546  #define GL_BLEND_EQUATION_EXT 0x8009\n ....\n 7550  #define glBlendEquationEXT GLEW_GET_FUN(__glewBlendEquationEXT)\n 7551  \n 7552: #define GLEW_EXT_blend_minmax GLEW_GET_VAR(__GLEW_EXT_blend_minmax)\n 7553  \n 7554: #endif /* GL_EXT_blend_minmax */\n 7555  \n 7556  /* ------------------------- GL_EXT_blend_subtract ------------------------- */\n ....\n 7777  #define GL_DEPTH_BOUNDS_EXT 0x8891\n 7778  \n 7779: typedef void (GLAPIENTRY * PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);\n 7780  \n 7781  #define glDepthBoundsEXT GLEW_GET_FUN(__glewDepthBoundsEXT)\n ....\n 8734  #define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A\n 8735  #define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B\n 8736: #define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C\n 8737  #define GL_HISTOGRAM_SINK_EXT 0x802D\n 8738: #define GL_MINMAX_EXT 0x802E\n 8739: #define GL_MINMAX_FORMAT_EXT 0x802F\n 8740: #define GL_MINMAX_SINK_EXT 0x8030\n 8741  \n 8742  typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values);\n 8743  typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat* params);\n 8744  typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);\n 8745: typedef void (GLAPIENTRY * PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values);\n 8746: typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat* params);\n 8747: typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint* params);\n 8748  typedef void (GLAPIENTRY * PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);\n 8749: typedef void (GLAPIENTRY * PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);\n 8750  typedef void (GLAPIENTRY * PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);\n 8751: typedef void (GLAPIENTRY * PFNGLRESETMINMAXEXTPROC) (GLenum target);\n 8752  \n 8753  #define glGetHistogramEXT GLEW_GET_FUN(__glewGetHistogramEXT)\n 8754  #define glGetHistogramParameterfvEXT GLEW_GET_FUN(__glewGetHistogramParameterfvEXT)\n 8755  #define glGetHistogramParameterivEXT GLEW_GET_FUN(__glewGetHistogramParameterivEXT)\n 8756: #define glGetMinmaxEXT GLEW_GET_FUN(__glewGetMinmaxEXT)\n 8757: #define glGetMinmaxParameterfvEXT GLEW_GET_FUN(__glewGetMinmaxParameterfvEXT)\n 8758: #define glGetMinmaxParameterivEXT GLEW_GET_FUN(__glewGetMinmaxParameterivEXT)\n 8759  #define glHistogramEXT GLEW_GET_FUN(__glewHistogramEXT)\n 8760: #define glMinmaxEXT GLEW_GET_FUN(__glewMinmaxEXT)\n 8761  #define glResetHistogramEXT GLEW_GET_FUN(__glewResetHistogramEXT)\n 8762: #define glResetMinmaxEXT GLEW_GET_FUN(__glewResetMinmaxEXT)\n 8763  \n 8764  #define GLEW_EXT_histogram GLEW_GET_VAR(__GLEW_EXT_histogram)\n ....\n 8951  #define GL_COLOR_TABLE_BLUE_SIZE_EXT 0x80DC\n 8952  #define GL_COLOR_TABLE_ALPHA_SIZE_EXT 0x80DD\n 8953: #define GL_COLOR_TABLE_LUMINANCE_SIZE_EXT 0x80DE\n 8954  #define GL_COLOR_TABLE_INTENSITY_SIZE_EXT 0x80DF\n 8955  #define GL_COLOR_INDEX1_EXT 0x80E2\n ....\n 8998  #define GL_PIXEL_TRANSFORM_2D_EXT 0x8330\n 8999  #define GL_PIXEL_MAG_FILTER_EXT 0x8331\n 9000: #define GL_PIXEL_MIN_FILTER_EXT 0x8332\n 9001  #define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333\n 9002  #define GL_CUBIC_EXT 0x8334\n ....\n 9038  #define GL_EXT_point_parameters 1\n 9039  \n 9040: #define GL_POINT_SIZE_MIN_EXT 0x8126\n 9041  #define GL_POINT_SIZE_MAX_EXT 0x8127\n 9042  #define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128\n ....\n 9356  #define GL_ALPHA12_EXT 0x803D\n 9357  #define GL_ALPHA16_EXT 0x803E\n 9358: #define GL_LUMINANCE4_EXT 0x803F\n 9359: #define GL_LUMINANCE8_EXT 0x8040\n 9360: #define GL_LUMINANCE12_EXT 0x8041\n 9361: #define GL_LUMINANCE16_EXT 0x8042\n 9362: #define GL_LUMINANCE4_ALPHA4_EXT 0x8043\n 9363: #define GL_LUMINANCE6_ALPHA2_EXT 0x8044\n 9364: #define GL_LUMINANCE8_ALPHA8_EXT 0x8045\n 9365: #define GL_LUMINANCE12_ALPHA4_EXT 0x8046\n 9366: #define GL_LUMINANCE12_ALPHA12_EXT 0x8047\n 9367: #define GL_LUMINANCE16_ALPHA16_EXT 0x8048\n 9368  #define GL_INTENSITY_EXT 0x8049\n 9369  #define GL_INTENSITY4_EXT 0x804A\n ....\n 9389  #define GL_TEXTURE_BLUE_SIZE_EXT 0x805E\n 9390  #define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F\n 9391: #define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060\n 9392  #define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061\n 9393  #define GL_REPLACE_EXT 0x8062\n ....\n 9477  #define GL_EXT_texture_compression_latc 1\n 9478  \n 9479: #define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70\n 9480: #define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71\n 9481: #define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72\n 9482: #define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73\n 9483  \n 9484  #define GLEW_EXT_texture_compression_latc GLEW_GET_VAR(__GLEW_EXT_texture_compression_latc)\n ....\n 9641  #define GL_ALPHA32UI_EXT 0x8D72\n 9642  #define GL_INTENSITY32UI_EXT 0x8D73\n 9643: #define GL_LUMINANCE32UI_EXT 0x8D74\n 9644: #define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75\n 9645  #define GL_RGBA16UI_EXT 0x8D76\n 9646  #define GL_RGB16UI_EXT 0x8D77\n 9647  #define GL_ALPHA16UI_EXT 0x8D78\n 9648  #define GL_INTENSITY16UI_EXT 0x8D79\n 9649: #define GL_LUMINANCE16UI_EXT 0x8D7A\n 9650: #define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B\n 9651  #define GL_RGBA8UI_EXT 0x8D7C\n 9652  #define GL_RGB8UI_EXT 0x8D7D\n 9653  #define GL_ALPHA8UI_EXT 0x8D7E\n 9654  #define GL_INTENSITY8UI_EXT 0x8D7F\n 9655: #define GL_LUMINANCE8UI_EXT 0x8D80\n 9656: #define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81\n 9657  #define GL_RGBA32I_EXT 0x8D82\n 9658  #define GL_RGB32I_EXT 0x8D83\n 9659  #define GL_ALPHA32I_EXT 0x8D84\n 9660  #define GL_INTENSITY32I_EXT 0x8D85\n 9661: #define GL_LUMINANCE32I_EXT 0x8D86\n 9662: #define GL_LUMINANCE_ALPHA32I_EXT 0x8D87\n 9663  #define GL_RGBA16I_EXT 0x8D88\n 9664  #define GL_RGB16I_EXT 0x8D89\n 9665  #define GL_ALPHA16I_EXT 0x8D8A\n 9666  #define GL_INTENSITY16I_EXT 0x8D8B\n 9667: #define GL_LUMINANCE16I_EXT 0x8D8C\n 9668: #define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D\n 9669  #define GL_RGBA8I_EXT 0x8D8E\n 9670  #define GL_RGB8I_EXT 0x8D8F\n 9671  #define GL_ALPHA8I_EXT 0x8D90\n 9672  #define GL_INTENSITY8I_EXT 0x8D91\n 9673: #define GL_LUMINANCE8I_EXT 0x8D92\n 9674: #define GL_LUMINANCE_ALPHA8I_EXT 0x8D93\n 9675  #define GL_RED_INTEGER_EXT 0x8D94\n 9676  #define GL_GREEN_INTEGER_EXT 0x8D95\n ....\n 9681  #define GL_BGR_INTEGER_EXT 0x8D9A\n 9682  #define GL_BGRA_INTEGER_EXT 0x8D9B\n 9683: #define GL_LUMINANCE_INTEGER_EXT 0x8D9C\n 9684: #define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D\n 9685  #define GL_RGBA_INTEGER_MODE_EXT 0x8D9E\n 9686  \n ....\n 9797  #define GL_SRGB_ALPHA_EXT 0x8C42\n 9798  #define GL_SRGB8_ALPHA8_EXT 0x8C43\n 9799: #define GL_SLUMINANCE_ALPHA_EXT 0x8C44\n 9800: #define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45\n 9801: #define GL_SLUMINANCE_EXT 0x8C46\n 9802: #define GL_SLUMINANCE8_EXT 0x8C47\n 9803  #define GL_COMPRESSED_SRGB_EXT 0x8C48\n 9804  #define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49\n 9805: #define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A\n 9806: #define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B\n 9807  #define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C\n 9808  #define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D\n ....\n 9859  #define GL_SIGNED_NORMALIZED 0x8F9C\n 9860  #define GL_ALPHA_SNORM 0x9010\n 9861: #define GL_LUMINANCE_SNORM 0x9011\n 9862: #define GL_LUMINANCE_ALPHA_SNORM 0x9012\n 9863  #define GL_INTENSITY_SNORM 0x9013\n 9864  #define GL_ALPHA8_SNORM 0x9014\n 9865: #define GL_LUMINANCE8_SNORM 0x9015\n 9866: #define GL_LUMINANCE8_ALPHA8_SNORM 0x9016\n 9867  #define GL_INTENSITY8_SNORM 0x9017\n 9868  #define GL_ALPHA16_SNORM 0x9018\n 9869: #define GL_LUMINANCE16_SNORM 0x9019\n 9870: #define GL_LUMINANCE16_ALPHA16_SNORM 0x901A\n 9871  #define GL_INTENSITY16_SNORM 0x901B\n 9872  \n ....\n 10082  #define GL_OP_FRAC_EXT 0x8789\n 10083  #define GL_OP_MAX_EXT 0x878A\n 10084: #define GL_OP_MIN_EXT 0x878B\n 10085  #define GL_OP_SET_GE_EXT 0x878C\n 10086  #define GL_OP_SET_LT_EXT 0x878D\n .....\n 10318  #endif /* GL_EXT_x11_sync_object */\n 10319  \n 10320: /* ---------------------- GL_GREMEDY_frame_terminator ---------------------- */\n 10321  \n 10322: #ifndef GL_GREMEDY_frame_terminator\n 10323: #define GL_GREMEDY_frame_terminator 1\n 10324  \n 10325: typedef void (GLAPIENTRY * PFNGLFRAMETERMINATORGREMEDYPROC) (void);\n 10326  \n 10327: #define glFrameTerminatorGREMEDY GLEW_GET_FUN(__glewFrameTerminatorGREMEDY)\n 10328  \n 10329: #define GLEW_GREMEDY_frame_terminator GLEW_GET_VAR(__GLEW_GREMEDY_frame_terminator)\n 10330  \n 10331: #endif /* GL_GREMEDY_frame_terminator */\n 10332  \n 10333  /* ------------------------ GL_GREMEDY_string_marker ----------------------- */\n .....\n 10506  #define GL_INGR_color_clamp 1\n 10507  \n 10508: #define GL_RED_MIN_CLAMP_INGR 0x8560\n 10509: #define GL_GREEN_MIN_CLAMP_INGR 0x8561\n 10510: #define GL_BLUE_MIN_CLAMP_INGR 0x8562\n 10511: #define GL_ALPHA_MIN_CLAMP_INGR 0x8563\n 10512  #define GL_RED_MAX_CLAMP_INGR 0x8564\n 10513  #define GL_GREEN_MAX_CLAMP_INGR 0x8565\n .....\n 10937  \n 10938  typedef void (GLAPIENTRY * PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);\n 10939: typedef void (GLAPIENTRY * PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);\n 10940  typedef void (GLAPIENTRY * PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);\n 10941  \n .....\n 11235  #define GL_NV_gpu_program4 1\n 11236  \n 11237: #define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904\n 11238  #define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905\n 11239  #define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906\n .....\n 11280  \n 11281  #define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A\n 11282: #define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B\n 11283  #define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C\n 11284  #define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D\n 11285: #define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E\n 11286  #define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F\n 11287  \n .....\n 11684  #define GL_PATH_END_CAPS_NV 0x9076\n 11685  #define GL_PATH_INITIAL_END_CAP_NV 0x9077\n 11686: #define GL_PATH_TERMINAL_END_CAP_NV 0x9078\n 11687  #define GL_PATH_JOIN_STYLE_NV 0x9079\n 11688  #define GL_PATH_MITER_LIMIT_NV 0x907A\n 11689  #define GL_PATH_DASH_CAPS_NV 0x907B\n 11690  #define GL_PATH_INITIAL_DASH_CAP_NV 0x907C\n 11691: #define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D\n 11692  #define GL_PATH_DASH_OFFSET_NV 0x907E\n 11693  #define GL_PATH_CLIENT_LENGTH_NV 0x907F\n .....\n 11745  #define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE\n 11746  #define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF\n 11747: #define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000\n 11748: #define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000\n 11749  #define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000\n 11750  #define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000\n .....\n 11920  typedef void (GLAPIENTRY * PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT* params);\n 11921  typedef void (GLAPIENTRY * PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint* params);\n 11922: typedef void (GLAPIENTRY * PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);\n 11923: typedef void (GLAPIENTRY * PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);\n 11924  \n 11925  #define glGetVideoi64vNV GLEW_GET_FUN(__glewGetVideoi64vNV)\n .....\n 12283  #define GL_SIGNED_RGB_NV 0x86FE\n 12284  #define GL_SIGNED_RGB8_NV 0x86FF\n 12285: #define GL_SIGNED_LUMINANCE_NV 0x8701\n 12286: #define GL_SIGNED_LUMINANCE8_NV 0x8702\n 12287: #define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703\n 12288: #define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704\n 12289  #define GL_SIGNED_ALPHA_NV 0x8705\n 12290  #define GL_SIGNED_ALPHA8_NV 0x8706\n .....\n 12339  #define GL_SIGNED_RGB_NV 0x86FE\n 12340  #define GL_SIGNED_RGB8_NV 0x86FF\n 12341: #define GL_SIGNED_LUMINANCE_NV 0x8701\n 12342: #define GL_SIGNED_LUMINANCE8_NV 0x8702\n 12343: #define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703\n 12344: #define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704\n 12345  #define GL_SIGNED_ALPHA_NV 0x8705\n 12346  #define GL_SIGNED_ALPHA8_NV 0x8706\n .....\n 12947  #define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029\n 12948  #define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A\n 12949: #define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B\n 12950  #define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C\n 12951  #define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D\n .....\n 13245  \n 13246  #define GL_EXTENDED_RANGE_SGIS 0x85A5\n 13247: #define GL_MIN_RED_SGIS 0x85A6\n 13248  #define GL_MAX_RED_SGIS 0x85A7\n 13249: #define GL_MIN_GREEN_SGIS 0x85A8\n 13250  #define GL_MAX_GREEN_SGIS 0x85A9\n 13251: #define GL_MIN_BLUE_SGIS 0x85AA\n 13252  #define GL_MAX_BLUE_SGIS 0x85AB\n 13253: #define GL_MIN_ALPHA_SGIS 0x85AC\n 13254  #define GL_MAX_ALPHA_SGIS 0x85AD\n 13255  \n .....\n 13431  #define GL_SGIS_texture_lod 1\n 13432  \n 13433: #define GL_TEXTURE_MIN_LOD_SGIS 0x813A\n 13434  #define GL_TEXTURE_MAX_LOD_SGIS 0x813B\n 13435  #define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C\n .....\n 13502  #endif /* GL_SGIX_async_pixel */\n 13503  \n 13504: /* ----------------------- GL_SGIX_blend_alpha_minmax ---------------------- */\n 13505  \n 13506: #ifndef GL_SGIX_blend_alpha_minmax\n 13507: #define GL_SGIX_blend_alpha_minmax 1\n 13508  \n 13509: #define GL_ALPHA_MIN_SGIX 0x8320\n 13510  #define GL_ALPHA_MAX_SGIX 0x8321\n 13511  \n 13512: #define GLEW_SGIX_blend_alpha_minmax GLEW_GET_VAR(__GLEW_SGIX_blend_alpha_minmax)\n 13513  \n 13514: #endif /* GL_SGIX_blend_alpha_minmax */\n 13515  \n 13516  /* ---------------------------- GL_SGIX_clipmap ---------------------------- */\n .....\n 13833  #define GL_RGBA_SIGNED_SGIX 0x85E1\n 13834  #define GL_ALPHA_SIGNED_SGIX 0x85E2\n 13835: #define GL_LUMINANCE_SIGNED_SGIX 0x85E3\n 13836  #define GL_INTENSITY_SIGNED_SGIX 0x85E4\n 13837: #define GL_LUMINANCE_ALPHA_SIGNED_SGIX 0x85E5\n 13838  #define GL_RGB16_SIGNED_SGIX 0x85E6\n 13839  #define GL_RGBA16_SIGNED_SGIX 0x85E7\n 13840  #define GL_ALPHA16_SIGNED_SGIX 0x85E8\n 13841: #define GL_LUMINANCE16_SIGNED_SGIX 0x85E9\n 13842  #define GL_INTENSITY16_SIGNED_SGIX 0x85EA\n 13843: #define GL_LUMINANCE16_ALPHA16_SIGNED_SGIX 0x85EB\n 13844  #define GL_RGB_EXTENDED_RANGE_SGIX 0x85EC\n 13845  #define GL_RGBA_EXTENDED_RANGE_SGIX 0x85ED\n 13846  #define GL_ALPHA_EXTENDED_RANGE_SGIX 0x85EE\n 13847: #define GL_LUMINANCE_EXTENDED_RANGE_SGIX 0x85EF\n 13848  #define GL_INTENSITY_EXTENDED_RANGE_SGIX 0x85F0\n 13849: #define GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX 0x85F1\n 13850  #define GL_RGB16_EXTENDED_RANGE_SGIX 0x85F2\n 13851  #define GL_RGBA16_EXTENDED_RANGE_SGIX 0x85F3\n 13852  #define GL_ALPHA16_EXTENDED_RANGE_SGIX 0x85F4\n 13853: #define GL_LUMINANCE16_EXTENDED_RANGE_SGIX 0x85F5\n 13854  #define GL_INTENSITY16_EXTENDED_RANGE_SGIX 0x85F6\n 13855: #define GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX 0x85F7\n 13856: #define GL_MIN_LUMINANCE_SGIS 0x85F8\n 13857: #define GL_MAX_LUMINANCE_SGIS 0x85F9\n 13858: #define GL_MIN_INTENSITY_SGIS 0x85FA\n 13859  #define GL_MAX_INTENSITY_SGIS 0x85FB\n 13860  \n .....\n 13950  #define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC\n 13951  #define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD\n 13952: #define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE\n 13953  #define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF\n 13954  \n .....\n 14403  GLEW_FUN_EXPORT PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders;\n 14404  GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation;\n 14405: GLEW_FUN_EXPORT PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog;\n 14406  GLEW_FUN_EXPORT PFNGLGETPROGRAMIVPROC __glewGetProgramiv;\n 14407  GLEW_FUN_EXPORT PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog;\n .....\n 14559  GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei;\n 14560  GLEW_FUN_EXPORT PFNGLBLENDFUNCIPROC __glewBlendFunci;\n 14561: GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading;\n 14562  \n 14563  GLEW_FUN_EXPORT PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX;\n .....\n 14767  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv;\n 14768  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv;\n 14769: GLEW_FUN_EXPORT PFNGLGETMINMAXPROC __glewGetMinmax;\n 14770: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv;\n 14771: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv;\n 14772  GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter;\n 14773  GLEW_FUN_EXPORT PFNGLHISTOGRAMPROC __glewHistogram;\n 14774: GLEW_FUN_EXPORT PFNGLMINMAXPROC __glewMinmax;\n 14775  GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMPROC __glewResetHistogram;\n 14776: GLEW_FUN_EXPORT PFNGLRESETMINMAXPROC __glewResetMinmax;\n 14777  GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D;\n 14778  \n .....\n 14853  GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB;\n 14854  \n 14855: GLEW_FUN_EXPORT PFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv;\n 14856  GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex;\n 14857  GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation;\n .....\n 14870  GLEW_FUN_EXPORT PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB;\n 14871  GLEW_FUN_EXPORT PFNGLGETNMAPIVARBPROC __glewGetnMapivARB;\n 14872: GLEW_FUN_EXPORT PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB;\n 14873  GLEW_FUN_EXPORT PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB;\n 14874  GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB;\n .....\n 14883  GLEW_FUN_EXPORT PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB;\n 14884  \n 14885: GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB;\n 14886  \n 14887  GLEW_FUN_EXPORT PFNGLBINDSAMPLERPROC __glewBindSampler;\n .....\n 15085  \n 15086  GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced;\n 15087: GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamInstanced;\n 15088  \n 15089  GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB;\n .....\n 15100  GLEW_FUN_EXPORT PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v;\n 15101  GLEW_FUN_EXPORT PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex;\n 15102: GLEW_FUN_EXPORT PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices;\n 15103  GLEW_FUN_EXPORT PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding;\n 15104  \n .....\n 15766  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT;\n 15767  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT;\n 15768: GLEW_FUN_EXPORT PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT;\n 15769: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT;\n 15770: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT;\n 15771  GLEW_FUN_EXPORT PFNGLHISTOGRAMEXTPROC __glewHistogramEXT;\n 15772: GLEW_FUN_EXPORT PFNGLMINMAXEXTPROC __glewMinmaxEXT;\n 15773  GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT;\n 15774: GLEW_FUN_EXPORT PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT;\n 15775  \n 15776  GLEW_FUN_EXPORT PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT;\n .....\n 15944  GLEW_FUN_EXPORT PFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT;\n 15945  \n 15946: GLEW_FUN_EXPORT PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY;\n 15947  \n 15948  GLEW_FUN_EXPORT PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY;\n .....\n 16601  GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_tbuffer;\n 16602  GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_texture_compression_FXT1;\n 16603: GLEW_VAR_EXPORT GLboolean __GLEW_AMD_blend_minmax_factor;\n 16604  GLEW_VAR_EXPORT GLboolean __GLEW_AMD_conservative_depth;\n 16605  GLEW_VAR_EXPORT GLboolean __GLEW_AMD_debug_output;\n .....\n 16774  GLEW_VAR_EXPORT GLboolean __GLEW_ATI_fragment_shader;\n 16775  GLEW_VAR_EXPORT GLboolean __GLEW_ATI_map_object_buffer;\n 16776: GLEW_VAR_EXPORT GLboolean __GLEW_ATI_meminfo;\n 16777  GLEW_VAR_EXPORT GLboolean __GLEW_ATI_pn_triangles;\n 16778  GLEW_VAR_EXPORT GLboolean __GLEW_ATI_separate_stencil;\n .....\n 16795  GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_func_separate;\n 16796  GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_logic_op;\n 16797: GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_minmax;\n 16798  GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_subtract;\n 16799  GLEW_VAR_EXPORT GLboolean __GLEW_EXT_clip_volume_hint;\n .....\n 16886  GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_weighting;\n 16887  GLEW_VAR_EXPORT GLboolean __GLEW_EXT_x11_sync_object;\n 16888: GLEW_VAR_EXPORT GLboolean __GLEW_GREMEDY_frame_terminator;\n 16889  GLEW_VAR_EXPORT GLboolean __GLEW_GREMEDY_string_marker;\n 16890  GLEW_VAR_EXPORT GLboolean __GLEW_HP_convolution_border_modes;\n .....\n 17009  GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async_histogram;\n 17010  GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async_pixel;\n 17011: GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_blend_alpha_minmax;\n 17012  GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_clipmap;\n 17013  GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_convolution_accuracy;\n .....\n 17069  #define GLEW_VERSION 1\n 17070  #define GLEW_VERSION_MAJOR 2\n 17071: #define GLEW_VERSION_MINOR 3\n 17072  #define GLEW_VERSION_MICRO 4\n 17073  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/include/GL/glxew.h:\n  145  \n  146  extern Bool glXQueryExtension (Display *dpy, int *errorBase, int *eventBase);\n  147: extern Bool glXQueryVersion (Display *dpy, int *major, int *minor);\n  148  extern int glXGetConfig (Display *dpy, XVisualInfo *vis, int attrib, int *value);\n  149  extern XVisualInfo* glXChooseVisual (Display *dpy, int screen, int *attribList);\n  ...\n  375  #define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x0002\n  376  #define GLX_CONTEXT_MAJOR_VERSION_ARB 0x2091\n  377: #define GLX_CONTEXT_MINOR_VERSION_ARB 0x2092\n  378  #define GLX_CONTEXT_FLAGS_ARB 0x2094\n  379  \n  ...\n  541  #define GLX_AUX8_ATI 0x981F\n  542  #define GLX_AUX9_ATI 0x9820\n  543: #define GLX_BIND_TO_TEXTURE_LUMINANCE_ATI 0x9821\n  544  #define GLX_BIND_TO_TEXTURE_INTENSITY_ATI 0x9822\n  545  \n  ...\n 1016  #define GLX_OML_sync_control 1\n 1017  \n 1018: typedef Bool ( * PFNGLXGETMSCRATEOMLPROC) (Display* dpy, GLXDrawable drawable, int32_t* numerator, int32_t* denominator);\n 1019  typedef Bool ( * PFNGLXGETSYNCVALUESOMLPROC) (Display* dpy, GLXDrawable drawable, int64_t* ust, int64_t* msc, int64_t* sbc);\n 1020  typedef int64_t ( * PFNGLXSWAPBUFFERSMSCOMLPROC) (Display* dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder);\n ....\n 1048  #define GLX_SGIS_color_range 1\n 1049  \n 1050: #define GLX_MIN_RED_SGIS 0\n 1051  #define GLX_MAX_GREEN_SGIS 0\n 1052: #define GLX_MIN_BLUE_SGIS 0\n 1053  #define GLX_MAX_ALPHA_SGIS 0\n 1054: #define GLX_MIN_GREEN_SGIS 0\n 1055: #define GLX_MIN_ALPHA_SGIS 0\n 1056  #define GLX_MAX_RED_SGIS 0\n 1057  #define GLX_EXTENDED_RANGE_SGIS 0\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/include/GL/wglew.h:\n  191  #define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x0002\n  192  #define WGL_CONTEXT_MAJOR_VERSION_ARB 0x2091\n  193: #define WGL_CONTEXT_MINOR_VERSION_ARB 0x2092\n  194  #define WGL_CONTEXT_LAYER_PLANE_ARB 0x2093\n  195  #define WGL_CONTEXT_FLAGS_ARB 0x2094\n  ...\n  799  #define WGL_I3D_image_buffer 1\n  800  \n  801: #define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001\n  802  #define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002\n  803  \n  ...\n 1129  #define WGL_OML_sync_control 1\n 1130  \n 1131: typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32* numerator, INT32 *denominator);\n 1132  typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64* ust, INT64 *msc, INT64 *sbc);\n 1133  typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/glew.c:\n  416  PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders = NULL;\n  417  PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation = NULL;\n  418: PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog = NULL;\n  419  PFNGLGETPROGRAMIVPROC __glewGetProgramiv = NULL;\n  420  PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog = NULL;\n  ...\n  572  PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei = NULL;\n  573  PFNGLBLENDFUNCIPROC __glewBlendFunci = NULL;\n  574: PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading = NULL;\n  575  \n  576  PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX = NULL;\n  ...\n  780  PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv = NULL;\n  781  PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv = NULL;\n  782: PFNGLGETMINMAXPROC __glewGetMinmax = NULL;\n  783: PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv = NULL;\n  784: PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv = NULL;\n  785  PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter = NULL;\n  786  PFNGLHISTOGRAMPROC __glewHistogram = NULL;\n  787: PFNGLMINMAXPROC __glewMinmax = NULL;\n  788  PFNGLRESETHISTOGRAMPROC __glewResetHistogram = NULL;\n  789: PFNGLRESETMINMAXPROC __glewResetMinmax = NULL;\n  790  PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D = NULL;\n  791  \n  ...\n  866  PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB = NULL;\n  867  \n  868: PFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv = NULL;\n  869  PFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex = NULL;\n  870  PFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation = NULL;\n  ...\n  883  PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB = NULL;\n  884  PFNGLGETNMAPIVARBPROC __glewGetnMapivARB = NULL;\n  885: PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB = NULL;\n  886  PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB = NULL;\n  887  PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB = NULL;\n  ...\n  896  PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB = NULL;\n  897  \n  898: PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB = NULL;\n  899  \n  900  PFNGLBINDSAMPLERPROC __glewBindSampler = NULL;\n  ...\n 1098  \n 1099  PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced = NULL;\n 1100: PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamInstanced = NULL;\n 1101  \n 1102  PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB = NULL;\n ....\n 1113  PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v = NULL;\n 1114  PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex = NULL;\n 1115: PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices = NULL;\n 1116  PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding = NULL;\n 1117  \n ....\n 1779  PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT = NULL;\n 1780  PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT = NULL;\n 1781: PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT = NULL;\n 1782: PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT = NULL;\n 1783: PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT = NULL;\n 1784  PFNGLHISTOGRAMEXTPROC __glewHistogramEXT = NULL;\n 1785: PFNGLMINMAXEXTPROC __glewMinmaxEXT = NULL;\n 1786  PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT = NULL;\n 1787: PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT = NULL;\n 1788  \n 1789  PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT = NULL;\n ....\n 1957  PFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT = NULL;\n 1958  \n 1959: PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY = NULL;\n 1960  \n 1961  PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY = NULL;\n ....\n 2613  GLboolean __GLEW_3DFX_tbuffer = GL_FALSE;\n 2614  GLboolean __GLEW_3DFX_texture_compression_FXT1 = GL_FALSE;\n 2615: GLboolean __GLEW_AMD_blend_minmax_factor = GL_FALSE;\n 2616  GLboolean __GLEW_AMD_conservative_depth = GL_FALSE;\n 2617  GLboolean __GLEW_AMD_debug_output = GL_FALSE;\n ....\n 2786  GLboolean __GLEW_ATI_fragment_shader = GL_FALSE;\n 2787  GLboolean __GLEW_ATI_map_object_buffer = GL_FALSE;\n 2788: GLboolean __GLEW_ATI_meminfo = GL_FALSE;\n 2789  GLboolean __GLEW_ATI_pn_triangles = GL_FALSE;\n 2790  GLboolean __GLEW_ATI_separate_stencil = GL_FALSE;\n ....\n 2807  GLboolean __GLEW_EXT_blend_func_separate = GL_FALSE;\n 2808  GLboolean __GLEW_EXT_blend_logic_op = GL_FALSE;\n 2809: GLboolean __GLEW_EXT_blend_minmax = GL_FALSE;\n 2810  GLboolean __GLEW_EXT_blend_subtract = GL_FALSE;\n 2811  GLboolean __GLEW_EXT_clip_volume_hint = GL_FALSE;\n ....\n 2898  GLboolean __GLEW_EXT_vertex_weighting = GL_FALSE;\n 2899  GLboolean __GLEW_EXT_x11_sync_object = GL_FALSE;\n 2900: GLboolean __GLEW_GREMEDY_frame_terminator = GL_FALSE;\n 2901  GLboolean __GLEW_GREMEDY_string_marker = GL_FALSE;\n 2902  GLboolean __GLEW_HP_convolution_border_modes = GL_FALSE;\n ....\n 3021  GLboolean __GLEW_SGIX_async_histogram = GL_FALSE;\n 3022  GLboolean __GLEW_SGIX_async_pixel = GL_FALSE;\n 3023: GLboolean __GLEW_SGIX_blend_alpha_minmax = GL_FALSE;\n 3024  GLboolean __GLEW_SGIX_clipmap = GL_FALSE;\n 3025  GLboolean __GLEW_SGIX_convolution_accuracy = GL_FALSE;\n ....\n 3257    r = ((glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)glewGetProcAddress((const GLubyte*)\"glGetAttachedShaders\")) == NULL) || r;\n 3258    r = ((glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetAttribLocation\")) == NULL) || r;\n 3259:   r = ((glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramInfoLog\")) == NULL) || r;\n 3260    r = ((glGetProgramiv = (PFNGLGETPROGRAMIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramiv\")) == NULL) || r;\n 3261    r = ((glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderInfoLog\")) == NULL) || r;\n ....\n 3479    r = ((glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparatei\")) == NULL) || r;\n 3480    r = ((glBlendFunci = (PFNGLBLENDFUNCIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFunci\")) == NULL) || r;\n 3481:   r = ((glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShading\")) == NULL) || r;\n 3482  \n 3483    return r;\n ....\n 3519  #endif /* GL_3DFX_texture_compression_FXT1 */\n 3520  \n 3521: #ifdef GL_AMD_blend_minmax_factor\n 3522  \n 3523: #endif /* GL_AMD_blend_minmax_factor */\n 3524  \n 3525  #ifdef GL_AMD_conservative_depth\n ....\n 4275    r = ((glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfv\")) == NULL) || r;\n 4276    r = ((glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameteriv\")) == NULL) || r;\n 4277:   r = ((glGetMinmax = (PFNGLGETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmax\")) == NULL) || r;\n 4278:   r = ((glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfv\")) == NULL) || r;\n 4279:   r = ((glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameteriv\")) == NULL) || r;\n 4280    r = ((glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)glewGetProcAddress((const GLubyte*)\"glGetSeparableFilter\")) == NULL) || r;\n 4281    r = ((glHistogram = (PFNGLHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glHistogram\")) == NULL) || r;\n 4282:   r = ((glMinmax = (PFNGLMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glMinmax\")) == NULL) || r;\n 4283    r = ((glResetHistogram = (PFNGLRESETHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogram\")) == NULL) || r;\n 4284:   r = ((glResetMinmax = (PFNGLRESETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmax\")) == NULL) || r;\n 4285    r = ((glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glSeparableFilter2D\")) == NULL) || r;\n 4286  \n ....\n 4509    GLboolean r = GL_FALSE;\n 4510  \n 4511:   r = ((glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramInterfaceiv\")) == NULL) || r;\n 4512    r = ((glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceIndex\")) == NULL) || r;\n 4513    r = ((glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceLocation\")) == NULL) || r;\n ....\n 4552    r = ((glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapfvARB\")) == NULL) || r;\n 4553    r = ((glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapivARB\")) == NULL) || r;\n 4554:   r = ((glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMinmaxARB\")) == NULL) || r;\n 4555    r = ((glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapfvARB\")) == NULL) || r;\n 4556    r = ((glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapuivARB\")) == NULL) || r;\n ....\n 4584    GLboolean r = GL_FALSE;\n 4585  \n 4586:   r = ((glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShadingARB\")) == NULL) || r;\n 4587  \n 4588    return r;\n ....\n 5145  \n 5146    r = ((glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackInstanced\")) == NULL) || r;\n 5147:   r = ((glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackStreamInstanced\")) == NULL) || r;\n 5148  \n 5149    return r;\n ....\n 5182    r = ((glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetIntegeri_v\")) == NULL) || r;\n 5183    r = ((glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformBlockIndex\")) == NULL) || r;\n 5184:   r = ((glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformIndices\")) == NULL) || r;\n 5185    r = ((glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)glewGetProcAddress((const GLubyte*)\"glUniformBlockBinding\")) == NULL) || r;\n 5186  \n ....\n 5584  #endif /* GL_ATI_map_object_buffer */\n 5585  \n 5586: #ifdef GL_ATI_meminfo\n 5587  \n 5588: #endif /* GL_ATI_meminfo */\n 5589  \n 5590  #ifdef GL_ATI_pn_triangles\n ....\n 5810  #endif /* GL_EXT_blend_logic_op */\n 5811  \n 5812: #ifdef GL_EXT_blend_minmax\n 5813  \n 5814: static GLboolean _glewInit_GL_EXT_blend_minmax (GLEW_CONTEXT_ARG_DEF_INIT)\n 5815  {\n 5816    GLboolean r = GL_FALSE;\n ....\n 5821  }\n 5822  \n 5823: #endif /* GL_EXT_blend_minmax */\n 5824  \n 5825  #ifdef GL_EXT_blend_subtract\n ....\n 6442    r = ((glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfvEXT\")) == NULL) || r;\n 6443    r = ((glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterivEXT\")) == NULL) || r;\n 6444:   r = ((glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxEXT\")) == NULL) || r;\n 6445:   r = ((glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfvEXT\")) == NULL) || r;\n 6446:   r = ((glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterivEXT\")) == NULL) || r;\n 6447    r = ((glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glHistogramEXT\")) == NULL) || r;\n 6448:   r = ((glMinmaxEXT = (PFNGLMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glMinmaxEXT\")) == NULL) || r;\n 6449    r = ((glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogramEXT\")) == NULL) || r;\n 6450:   r = ((glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmaxEXT\")) == NULL) || r;\n 6451  \n 6452    return r;\n ....\n 7084  #endif /* GL_EXT_x11_sync_object */\n 7085  \n 7086: #ifdef GL_GREMEDY_frame_terminator\n 7087  \n 7088: static GLboolean _glewInit_GL_GREMEDY_frame_terminator (GLEW_CONTEXT_ARG_DEF_INIT)\n 7089  {\n 7090    GLboolean r = GL_FALSE;\n 7091  \n 7092:   r = ((glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC)glewGetProcAddress((const GLubyte*)\"glFrameTerminatorGREMEDY\")) == NULL) || r;\n 7093  \n 7094    return r;\n 7095  }\n 7096  \n 7097: #endif /* GL_GREMEDY_frame_terminator */\n 7098  \n 7099  #ifdef GL_GREMEDY_string_marker\n ....\n 8480  #endif /* GL_SGIX_async_pixel */\n 8481  \n 8482: #ifdef GL_SGIX_blend_alpha_minmax\n 8483  \n 8484: #endif /* GL_SGIX_blend_alpha_minmax */\n 8485  \n 8486  #ifdef GL_SGIX_clipmap\n ....\n 8886    const GLubyte* s;\n 8887    GLuint dot;\n 8888:   GLint major, minor;\n 8889    const GLubyte* extStart;\n 8890    const GLubyte* extEnd;\n ....\n 8896    \n 8897    major = s[dot-1]-'0';\n 8898:   minor = s[dot+1]-'0';\n 8899  \n 8900:   if (minor < 0 || minor > 9)\n 8901:     minor = 0;\n 8902    if (major<0 || major>9)\n 8903      return GLEW_ERROR_NO_GL_VERSION;\n 8904    \n 8905  \n 8906:   if (major == 1 && minor == 0)\n 8907    {\n 8908      return GLEW_ERROR_GL_VERSION_10_ONLY;\n ....\n 8910    else\n 8911    {\n 8912:     CONST_CAST(GLEW_VERSION_4_3)   = ( major > 4 )                 || ( major == 4 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n 8913:     CONST_CAST(GLEW_VERSION_4_2)   = GLEW_VERSION_4_3   == GL_TRUE || ( major == 4 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n 8914:     CONST_CAST(GLEW_VERSION_4_1)   = GLEW_VERSION_4_2   == GL_TRUE || ( major == 4 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n 8915      CONST_CAST(GLEW_VERSION_4_0)   = GLEW_VERSION_4_1   == GL_TRUE || ( major == 4               ) ? GL_TRUE : GL_FALSE;\n 8916:     CONST_CAST(GLEW_VERSION_3_3)   = GLEW_VERSION_4_0   == GL_TRUE || ( major == 3 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n 8917:     CONST_CAST(GLEW_VERSION_3_2)   = GLEW_VERSION_3_3   == GL_TRUE || ( major == 3 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n 8918:     CONST_CAST(GLEW_VERSION_3_1)   = GLEW_VERSION_3_2   == GL_TRUE || ( major == 3 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n 8919      CONST_CAST(GLEW_VERSION_3_0)   = GLEW_VERSION_3_1   == GL_TRUE || ( major == 3               ) ? GL_TRUE : GL_FALSE;\n 8920:     CONST_CAST(GLEW_VERSION_2_1)   = GLEW_VERSION_3_0   == GL_TRUE || ( major == 2 && minor >= 1 ) ? GL_TRUE : GL_FALSE;    \n 8921      CONST_CAST(GLEW_VERSION_2_0)   = GLEW_VERSION_2_1   == GL_TRUE || ( major == 2               ) ? GL_TRUE : GL_FALSE;\n 8922:     CONST_CAST(GLEW_VERSION_1_5)   = GLEW_VERSION_2_0   == GL_TRUE || ( major == 1 && minor >= 5 ) ? GL_TRUE : GL_FALSE;\n 8923:     CONST_CAST(GLEW_VERSION_1_4)   = GLEW_VERSION_1_5   == GL_TRUE || ( major == 1 && minor >= 4 ) ? GL_TRUE : GL_FALSE;\n 8924:     CONST_CAST(GLEW_VERSION_1_3)   = GLEW_VERSION_1_4   == GL_TRUE || ( major == 1 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n 8925      CONST_CAST(GLEW_VERSION_1_2_1) = GLEW_VERSION_1_3   == GL_TRUE                                 ? GL_TRUE : GL_FALSE; \n 8926:     CONST_CAST(GLEW_VERSION_1_2)   = GLEW_VERSION_1_2_1 == GL_TRUE || ( major == 1 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n 8927:     CONST_CAST(GLEW_VERSION_1_1)   = GLEW_VERSION_1_2   == GL_TRUE || ( major == 1 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n 8928    }\n 8929  \n ....\n 8986    CONST_CAST(GLEW_3DFX_texture_compression_FXT1) = _glewSearchExtension(\"GL_3DFX_texture_compression_FXT1\", extStart, extEnd);\n 8987  #endif /* GL_3DFX_texture_compression_FXT1 */\n 8988: #ifdef GL_AMD_blend_minmax_factor\n 8989:   CONST_CAST(GLEW_AMD_blend_minmax_factor) = _glewSearchExtension(\"GL_AMD_blend_minmax_factor\", extStart, extEnd);\n 8990: #endif /* GL_AMD_blend_minmax_factor */\n 8991  #ifdef GL_AMD_conservative_depth\n 8992    CONST_CAST(GLEW_AMD_conservative_depth) = _glewSearchExtension(\"GL_AMD_conservative_depth\", extStart, extEnd);\n ....\n 9594    if (glewExperimental || GLEW_ATI_map_object_buffer) CONST_CAST(GLEW_ATI_map_object_buffer) = !_glewInit_GL_ATI_map_object_buffer(GLEW_CONTEXT_ARG_VAR_INIT);\n 9595  #endif /* GL_ATI_map_object_buffer */\n 9596: #ifdef GL_ATI_meminfo\n 9597:   CONST_CAST(GLEW_ATI_meminfo) = _glewSearchExtension(\"GL_ATI_meminfo\", extStart, extEnd);\n 9598: #endif /* GL_ATI_meminfo */\n 9599  #ifdef GL_ATI_pn_triangles\n 9600    CONST_CAST(GLEW_ATI_pn_triangles) = _glewSearchExtension(\"GL_ATI_pn_triangles\", extStart, extEnd);\n ....\n 9666    CONST_CAST(GLEW_EXT_blend_logic_op) = _glewSearchExtension(\"GL_EXT_blend_logic_op\", extStart, extEnd);\n 9667  #endif /* GL_EXT_blend_logic_op */\n 9668: #ifdef GL_EXT_blend_minmax\n 9669:   CONST_CAST(GLEW_EXT_blend_minmax) = _glewSearchExtension(\"GL_EXT_blend_minmax\", extStart, extEnd);\n 9670:   if (glewExperimental || GLEW_EXT_blend_minmax) CONST_CAST(GLEW_EXT_blend_minmax) = !_glewInit_GL_EXT_blend_minmax(GLEW_CONTEXT_ARG_VAR_INIT);\n 9671: #endif /* GL_EXT_blend_minmax */\n 9672  #ifdef GL_EXT_blend_subtract\n 9673    CONST_CAST(GLEW_EXT_blend_subtract) = _glewSearchExtension(\"GL_EXT_blend_subtract\", extStart, extEnd);\n ....\n 9990    if (glewExperimental || GLEW_EXT_x11_sync_object) CONST_CAST(GLEW_EXT_x11_sync_object) = !_glewInit_GL_EXT_x11_sync_object(GLEW_CONTEXT_ARG_VAR_INIT);\n 9991  #endif /* GL_EXT_x11_sync_object */\n 9992: #ifdef GL_GREMEDY_frame_terminator\n 9993:   CONST_CAST(GLEW_GREMEDY_frame_terminator) = _glewSearchExtension(\"GL_GREMEDY_frame_terminator\", extStart, extEnd);\n 9994:   if (glewExperimental || GLEW_GREMEDY_frame_terminator) CONST_CAST(GLEW_GREMEDY_frame_terminator) = !_glewInit_GL_GREMEDY_frame_terminator(GLEW_CONTEXT_ARG_VAR_INIT);\n 9995: #endif /* GL_GREMEDY_frame_terminator */\n 9996  #ifdef GL_GREMEDY_string_marker\n 9997    CONST_CAST(GLEW_GREMEDY_string_marker) = _glewSearchExtension(\"GL_GREMEDY_string_marker\", extStart, extEnd);\n ....\n 10413    CONST_CAST(GLEW_SGIX_async_pixel) = _glewSearchExtension(\"GL_SGIX_async_pixel\", extStart, extEnd);\n 10414  #endif /* GL_SGIX_async_pixel */\n 10415: #ifdef GL_SGIX_blend_alpha_minmax\n 10416:   CONST_CAST(GLEW_SGIX_blend_alpha_minmax) = _glewSearchExtension(\"GL_SGIX_blend_alpha_minmax\", extStart, extEnd);\n 10417: #endif /* GL_SGIX_blend_alpha_minmax */\n 10418  #ifdef GL_SGIX_clipmap\n 10419    CONST_CAST(GLEW_SGIX_clipmap) = _glewSearchExtension(\"GL_SGIX_clipmap\", extStart, extEnd);\n .....\n 12370  GLenum glxewContextInit (GLXEW_CONTEXT_ARG_DEF_LIST)\n 12371  {\n 12372:   int major, minor;\n 12373    const GLubyte* extStart;\n 12374    const GLubyte* extEnd;\n .....\n 12382    CONST_CAST(GLXEW_VERSION_1_4) = GL_TRUE;\n 12383    /* query GLX version */\n 12384:   glXQueryVersion(glXGetCurrentDisplay(), &major, &minor);\n 12385:   if (major == 1 && minor <= 3)\n 12386    {\n 12387:     switch (minor)\n 12388      {\n 12389        case 3:\n .....\n 12827        if (_glewStrSame2(&pos, &len, (const GLubyte*)\"AMD_\", 4))\n 12828        {\n 12829: #ifdef GL_AMD_blend_minmax_factor\n 12830:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_minmax_factor\", 19))\n 12831          {\n 12832:           ret = GLEW_AMD_blend_minmax_factor;\n 12833            continue;\n 12834          }\n .....\n 14050          }\n 14051  #endif\n 14052: #ifdef GL_ATI_meminfo\n 14053:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"meminfo\", 7))\n 14054          {\n 14055:           ret = GLEW_ATI_meminfo;\n 14056            continue;\n 14057          }\n .....\n 14200          }\n 14201  #endif\n 14202: #ifdef GL_EXT_blend_minmax\n 14203:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_minmax\", 12))\n 14204          {\n 14205:           ret = GLEW_EXT_blend_minmax;\n 14206            continue;\n 14207          }\n .....\n 14840        if (_glewStrSame2(&pos, &len, (const GLubyte*)\"GREMEDY_\", 8))\n 14841        {\n 14842: #ifdef GL_GREMEDY_frame_terminator\n 14843:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"frame_terminator\", 16))\n 14844          {\n 14845:           ret = GLEW_GREMEDY_frame_terminator;\n 14846            continue;\n 14847          }\n .....\n 15755          }\n 15756  #endif\n 15757: #ifdef GL_SGIX_blend_alpha_minmax\n 15758:         if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_alpha_minmax\", 18))\n 15759          {\n 15760:           ret = GLEW_SGIX_blend_alpha_minmax;\n 15761            continue;\n 15762          }\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/glewinfo.c:\n  298    glewInfoFunc(\"glGetAttachedShaders\", glGetAttachedShaders == NULL);\n  299    glewInfoFunc(\"glGetAttribLocation\", glGetAttribLocation == NULL);\n  300:   glewInfoFunc(\"glGetProgramInfoLog\", glGetProgramInfoLog == NULL);\n  301    glewInfoFunc(\"glGetProgramiv\", glGetProgramiv == NULL);\n  302    glewInfoFunc(\"glGetShaderInfoLog\", glGetShaderInfoLog == NULL);\n  ...\n  508    glewInfoFunc(\"glBlendFuncSeparatei\", glBlendFuncSeparatei == NULL);\n  509    glewInfoFunc(\"glBlendFunci\", glBlendFunci == NULL);\n  510:   glewInfoFunc(\"glMinSampleShading\", glMinSampleShading == NULL);\n  511  }\n  512  \n  ...\n  569  #endif /* GL_3DFX_texture_compression_FXT1 */\n  570  \n  571: #ifdef GL_AMD_blend_minmax_factor\n  572  \n  573: static void _glewInfo_GL_AMD_blend_minmax_factor (void)\n  574  {\n  575:   glewPrintExt(\"GL_AMD_blend_minmax_factor\", GLEW_AMD_blend_minmax_factor, glewIsSupported(\"GL_AMD_blend_minmax_factor\"), glewGetExtension(\"GL_AMD_blend_minmax_factor\"));\n  576  }\n  577  \n  578: #endif /* GL_AMD_blend_minmax_factor */\n  579  \n  580  #ifdef GL_AMD_conservative_depth\n  ...\n 1455    glewInfoFunc(\"glGetHistogramParameterfv\", glGetHistogramParameterfv == NULL);\n 1456    glewInfoFunc(\"glGetHistogramParameteriv\", glGetHistogramParameteriv == NULL);\n 1457:   glewInfoFunc(\"glGetMinmax\", glGetMinmax == NULL);\n 1458:   glewInfoFunc(\"glGetMinmaxParameterfv\", glGetMinmaxParameterfv == NULL);\n 1459:   glewInfoFunc(\"glGetMinmaxParameteriv\", glGetMinmaxParameteriv == NULL);\n 1460    glewInfoFunc(\"glGetSeparableFilter\", glGetSeparableFilter == NULL);\n 1461    glewInfoFunc(\"glHistogram\", glHistogram == NULL);\n 1462:   glewInfoFunc(\"glMinmax\", glMinmax == NULL);\n 1463    glewInfoFunc(\"glResetHistogram\", glResetHistogram == NULL);\n 1464:   glewInfoFunc(\"glResetMinmax\", glResetMinmax == NULL);\n 1465    glewInfoFunc(\"glSeparableFilter2D\", glSeparableFilter2D == NULL);\n 1466  }\n ....\n 1685    glewPrintExt(\"GL_ARB_program_interface_query\", GLEW_ARB_program_interface_query, glewIsSupported(\"GL_ARB_program_interface_query\"), glewGetExtension(\"GL_ARB_program_interface_query\"));\n 1686  \n 1687:   glewInfoFunc(\"glGetProgramInterfaceiv\", glGetProgramInterfaceiv == NULL);\n 1688    glewInfoFunc(\"glGetProgramResourceIndex\", glGetProgramResourceIndex == NULL);\n 1689    glewInfoFunc(\"glGetProgramResourceLocation\", glGetProgramResourceLocation == NULL);\n ....\n 1729    glewInfoFunc(\"glGetnMapfvARB\", glGetnMapfvARB == NULL);\n 1730    glewInfoFunc(\"glGetnMapivARB\", glGetnMapivARB == NULL);\n 1731:   glewInfoFunc(\"glGetnMinmaxARB\", glGetnMinmaxARB == NULL);\n 1732    glewInfoFunc(\"glGetnPixelMapfvARB\", glGetnPixelMapfvARB == NULL);\n 1733    glewInfoFunc(\"glGetnPixelMapuivARB\", glGetnPixelMapuivARB == NULL);\n ....\n 1769    glewPrintExt(\"GL_ARB_sample_shading\", GLEW_ARB_sample_shading, glewIsSupported(\"GL_ARB_sample_shading\"), glewGetExtension(\"GL_ARB_sample_shading\"));\n 1770  \n 1771:   glewInfoFunc(\"glMinSampleShadingARB\", glMinSampleShadingARB == NULL);\n 1772  }\n 1773  \n ....\n 2448  \n 2449    glewInfoFunc(\"glDrawTransformFeedbackInstanced\", glDrawTransformFeedbackInstanced == NULL);\n 2450:   glewInfoFunc(\"glDrawTransformFeedbackStreamInstanced\", glDrawTransformFeedbackStreamInstanced == NULL);\n 2451  }\n 2452  \n ....\n 2481    glewInfoFunc(\"glGetIntegeri_v\", glGetIntegeri_v == NULL);\n 2482    glewInfoFunc(\"glGetUniformBlockIndex\", glGetUniformBlockIndex == NULL);\n 2483:   glewInfoFunc(\"glGetUniformIndices\", glGetUniformIndices == NULL);\n 2484    glewInfoFunc(\"glUniformBlockBinding\", glUniformBlockBinding == NULL);\n 2485  }\n ....\n 2876  #endif /* GL_ATI_map_object_buffer */\n 2877  \n 2878: #ifdef GL_ATI_meminfo\n 2879  \n 2880: static void _glewInfo_GL_ATI_meminfo (void)\n 2881  {\n 2882:   glewPrintExt(\"GL_ATI_meminfo\", GLEW_ATI_meminfo, glewIsSupported(\"GL_ATI_meminfo\"), glewGetExtension(\"GL_ATI_meminfo\"));\n 2883  }\n 2884  \n 2885: #endif /* GL_ATI_meminfo */\n 2886  \n 2887  #ifdef GL_ATI_pn_triangles\n ....\n 3144  #endif /* GL_EXT_blend_logic_op */\n 3145  \n 3146: #ifdef GL_EXT_blend_minmax\n 3147  \n 3148: static void _glewInfo_GL_EXT_blend_minmax (void)\n 3149  {\n 3150:   glewPrintExt(\"GL_EXT_blend_minmax\", GLEW_EXT_blend_minmax, glewIsSupported(\"GL_EXT_blend_minmax\"), glewGetExtension(\"GL_EXT_blend_minmax\"));\n 3151  \n 3152    glewInfoFunc(\"glBlendEquationEXT\", glBlendEquationEXT == NULL);\n 3153  }\n 3154  \n 3155: #endif /* GL_EXT_blend_minmax */\n 3156  \n 3157  #ifdef GL_EXT_blend_subtract\n ....\n 3759    glewInfoFunc(\"glGetHistogramParameterfvEXT\", glGetHistogramParameterfvEXT == NULL);\n 3760    glewInfoFunc(\"glGetHistogramParameterivEXT\", glGetHistogramParameterivEXT == NULL);\n 3761:   glewInfoFunc(\"glGetMinmaxEXT\", glGetMinmaxEXT == NULL);\n 3762:   glewInfoFunc(\"glGetMinmaxParameterfvEXT\", glGetMinmaxParameterfvEXT == NULL);\n 3763:   glewInfoFunc(\"glGetMinmaxParameterivEXT\", glGetMinmaxParameterivEXT == NULL);\n 3764    glewInfoFunc(\"glHistogramEXT\", glHistogramEXT == NULL);\n 3765:   glewInfoFunc(\"glMinmaxEXT\", glMinmaxEXT == NULL);\n 3766    glewInfoFunc(\"glResetHistogramEXT\", glResetHistogramEXT == NULL);\n 3767:   glewInfoFunc(\"glResetMinmaxEXT\", glResetMinmaxEXT == NULL);\n 3768  }\n 3769  \n ....\n 4516  #endif /* GL_EXT_x11_sync_object */\n 4517  \n 4518: #ifdef GL_GREMEDY_frame_terminator\n 4519  \n 4520: static void _glewInfo_GL_GREMEDY_frame_terminator (void)\n 4521  {\n 4522:   glewPrintExt(\"GL_GREMEDY_frame_terminator\", GLEW_GREMEDY_frame_terminator, glewIsSupported(\"GL_GREMEDY_frame_terminator\"), glewGetExtension(\"GL_GREMEDY_frame_terminator\"));\n 4523  \n 4524:   glewInfoFunc(\"glFrameTerminatorGREMEDY\", glFrameTerminatorGREMEDY == NULL);\n 4525  }\n 4526  \n 4527: #endif /* GL_GREMEDY_frame_terminator */\n 4528  \n 4529  #ifdef GL_GREMEDY_string_marker\n ....\n 6149  #endif /* GL_SGIX_async_pixel */\n 6150  \n 6151: #ifdef GL_SGIX_blend_alpha_minmax\n 6152  \n 6153: static void _glewInfo_GL_SGIX_blend_alpha_minmax (void)\n 6154  {\n 6155:   glewPrintExt(\"GL_SGIX_blend_alpha_minmax\", GLEW_SGIX_blend_alpha_minmax, glewIsSupported(\"GL_SGIX_blend_alpha_minmax\"), glewGetExtension(\"GL_SGIX_blend_alpha_minmax\"));\n 6156  }\n 6157  \n 6158: #endif /* GL_SGIX_blend_alpha_minmax */\n 6159  \n 6160  #ifdef GL_SGIX_clipmap\n ....\n 7997    _glewInfo_GL_3DFX_texture_compression_FXT1();\n 7998  #endif /* GL_3DFX_texture_compression_FXT1 */\n 7999: #ifdef GL_AMD_blend_minmax_factor\n 8000:   _glewInfo_GL_AMD_blend_minmax_factor();\n 8001: #endif /* GL_AMD_blend_minmax_factor */\n 8002  #ifdef GL_AMD_conservative_depth\n 8003    _glewInfo_GL_AMD_conservative_depth();\n ....\n 8516    _glewInfo_GL_ATI_map_object_buffer();\n 8517  #endif /* GL_ATI_map_object_buffer */\n 8518: #ifdef GL_ATI_meminfo\n 8519:   _glewInfo_GL_ATI_meminfo();\n 8520: #endif /* GL_ATI_meminfo */\n 8521  #ifdef GL_ATI_pn_triangles\n 8522    _glewInfo_GL_ATI_pn_triangles();\n ....\n 8579    _glewInfo_GL_EXT_blend_logic_op();\n 8580  #endif /* GL_EXT_blend_logic_op */\n 8581: #ifdef GL_EXT_blend_minmax\n 8582:   _glewInfo_GL_EXT_blend_minmax();\n 8583: #endif /* GL_EXT_blend_minmax */\n 8584  #ifdef GL_EXT_blend_subtract\n 8585    _glewInfo_GL_EXT_blend_subtract();\n ....\n 8852    _glewInfo_GL_EXT_x11_sync_object();\n 8853  #endif /* GL_EXT_x11_sync_object */\n 8854: #ifdef GL_GREMEDY_frame_terminator\n 8855:   _glewInfo_GL_GREMEDY_frame_terminator();\n 8856: #endif /* GL_GREMEDY_frame_terminator */\n 8857  #ifdef GL_GREMEDY_string_marker\n 8858    _glewInfo_GL_GREMEDY_string_marker();\n ....\n 9221    _glewInfo_GL_SGIX_async_pixel();\n 9222  #endif /* GL_SGIX_async_pixel */\n 9223: #ifdef GL_SGIX_blend_alpha_minmax\n 9224:   _glewInfo_GL_SGIX_blend_alpha_minmax();\n 9225: #endif /* GL_SGIX_blend_alpha_minmax */\n 9226  #ifdef GL_SGIX_clipmap\n 9227    _glewInfo_GL_SGIX_clipmap();\n ....\n 9890    int attrib[] = { AGL_RGBA, AGL_NONE };\n 9891    AGLPixelFormat pf;\n 9892:   /*int major, minor;\n 9893    SetPortWindowPort(wnd);\n 9894:   aglGetVersion(&major, &minor);\n 9895:   fprintf(stderr, \"GL %d.%d\\n\", major, minor);*/\n 9896    pf = aglChoosePixelFormat(NULL, 0, attrib);\n 9897    if (NULL == pf) return GL_TRUE;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/visualinfo.c:\n  203  \n  204  /* do the magic to separate all extensions with comma's, except\n  205:    for the last one that _may_ terminate in a space. */\n  206  void PrintExtensions (const char* s)\n  207  {\n  ...\n  221  	p = &t[i++];\n  222        }\n  223:       else /* zoinks! last one terminated in a space! */\n  224        {\n  225  	t[i-1] = '\\0';\n  ...\n 1051    /* check input */\n 1052    if (NULL == ctx) return GL_TRUE;\n 1053:   /*int major, minor;\n 1054    SetPortWindowPort(wnd);\n 1055:   aglGetVersion(&major, &minor);\n 1056:   fprintf(stderr, \"GL %d.%d\\n\", major, minor);*/\n 1057    pf = aglChoosePixelFormat(NULL, 0, attrib);\n 1058    if (NULL == pf) return GL_TRUE;\n\n/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings:\n   93      \"dictionary\": \"Packages/Language - English/en_US.dic\",\n   94  \n   95:     // Set to true to draw a border around the visible rectangle on the minimap.\n   96:     // The color of the border will be determined by the \"minimapBorder\" key in\n   97      // the color scheme\n   98:     \"draw_minimap_border\": false,\n   99  \n  100:     // Always visualise the viewport on the minimap, as oppossed to only\n  101      // showing it on mouse over\n  102:     \"always_show_minimap_viewport\": false,\n  103  \n  104      // If enabled, will highlight any line with a caret\n  ...\n  176      \"save_on_focus_lost\": false,\n  177  \n  178:     // Save via writing to an alternate file, and then renaming it over the\n  179      // original file.\n  180      \"atomic_save\": true,\n  181  \n  182:     // The encoding to use when the encoding can't be determined automatically.\n  183      // ASCII, UTF-8 and UTF-16 encodings will be automatically detected.\n  184      \"fallback_encoding\": \"Western (Windows 1252)\",\n  ...\n  194      \"enable_hexadecimal_encoding\": true,\n  195  \n  196:     // Determines what character(s) are used to terminate each line in new files.\n  197      // Valid values are 'system' (whatever the OS uses), 'windows' (CRLF) and\n  198      // 'unix' (LF only).\n\n<untitled 31>:\n  262  			}\n  263  		}\n  264: 		int nNumIndices = nNewPolyIndex - (nPolyIndex + nPolyVertices);\n  265: 		return BspClipQuadR(pBsp, pNode->nInside, nNewPolyIndex, nNumIndices, nVertexIndex, pVertices, nIndices);\n  266  	}\n  267  	else\n\n1449 matches across 132 files\n\n\nSearching 833 files for \"Min\" (case sensitive)\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/glew.c:\n  572  PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei = NULL;\n  573  PFNGLBLENDFUNCIPROC __glewBlendFunci = NULL;\n  574: PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading = NULL;\n  575  \n  576  PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX = NULL;\n  ...\n  780  PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv = NULL;\n  781  PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv = NULL;\n  782: PFNGLGETMINMAXPROC __glewGetMinmax = NULL;\n  783: PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv = NULL;\n  784: PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv = NULL;\n  785  PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter = NULL;\n  786  PFNGLHISTOGRAMPROC __glewHistogram = NULL;\n  787: PFNGLMINMAXPROC __glewMinmax = NULL;\n  788  PFNGLRESETHISTOGRAMPROC __glewResetHistogram = NULL;\n  789: PFNGLRESETMINMAXPROC __glewResetMinmax = NULL;\n  790  PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D = NULL;\n  791  \n  ...\n  883  PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB = NULL;\n  884  PFNGLGETNMAPIVARBPROC __glewGetnMapivARB = NULL;\n  885: PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB = NULL;\n  886  PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB = NULL;\n  887  PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB = NULL;\n  ...\n  896  PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB = NULL;\n  897  \n  898: PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB = NULL;\n  899  \n  900  PFNGLBINDSAMPLERPROC __glewBindSampler = NULL;\n  ...\n 1779  PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT = NULL;\n 1780  PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT = NULL;\n 1781: PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT = NULL;\n 1782: PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT = NULL;\n 1783: PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT = NULL;\n 1784  PFNGLHISTOGRAMEXTPROC __glewHistogramEXT = NULL;\n 1785: PFNGLMINMAXEXTPROC __glewMinmaxEXT = NULL;\n 1786  PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT = NULL;\n 1787: PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT = NULL;\n 1788  \n 1789  PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT = NULL;\n ....\n 3479    r = ((glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparatei\")) == NULL) || r;\n 3480    r = ((glBlendFunci = (PFNGLBLENDFUNCIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFunci\")) == NULL) || r;\n 3481:   r = ((glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShading\")) == NULL) || r;\n 3482  \n 3483    return r;\n ....\n 4275    r = ((glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfv\")) == NULL) || r;\n 4276    r = ((glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameteriv\")) == NULL) || r;\n 4277:   r = ((glGetMinmax = (PFNGLGETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmax\")) == NULL) || r;\n 4278:   r = ((glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfv\")) == NULL) || r;\n 4279:   r = ((glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameteriv\")) == NULL) || r;\n 4280    r = ((glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)glewGetProcAddress((const GLubyte*)\"glGetSeparableFilter\")) == NULL) || r;\n 4281    r = ((glHistogram = (PFNGLHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glHistogram\")) == NULL) || r;\n 4282:   r = ((glMinmax = (PFNGLMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glMinmax\")) == NULL) || r;\n 4283    r = ((glResetHistogram = (PFNGLRESETHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogram\")) == NULL) || r;\n 4284:   r = ((glResetMinmax = (PFNGLRESETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmax\")) == NULL) || r;\n 4285    r = ((glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glSeparableFilter2D\")) == NULL) || r;\n 4286  \n ....\n 4552    r = ((glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapfvARB\")) == NULL) || r;\n 4553    r = ((glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapivARB\")) == NULL) || r;\n 4554:   r = ((glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMinmaxARB\")) == NULL) || r;\n 4555    r = ((glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapfvARB\")) == NULL) || r;\n 4556    r = ((glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapuivARB\")) == NULL) || r;\n ....\n 4584    GLboolean r = GL_FALSE;\n 4585  \n 4586:   r = ((glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShadingARB\")) == NULL) || r;\n 4587  \n 4588    return r;\n ....\n 6442    r = ((glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfvEXT\")) == NULL) || r;\n 6443    r = ((glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterivEXT\")) == NULL) || r;\n 6444:   r = ((glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxEXT\")) == NULL) || r;\n 6445:   r = ((glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfvEXT\")) == NULL) || r;\n 6446:   r = ((glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterivEXT\")) == NULL) || r;\n 6447    r = ((glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glHistogramEXT\")) == NULL) || r;\n 6448:   r = ((glMinmaxEXT = (PFNGLMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glMinmaxEXT\")) == NULL) || r;\n 6449    r = ((glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogramEXT\")) == NULL) || r;\n 6450:   r = ((glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmaxEXT\")) == NULL) || r;\n 6451  \n 6452    return r;\n\n/Users/jonasm/screenbsp/math.cpp:\n  243   		float fDist = size.x-d0;\n  244   		float fDistHat = size.y-d0hat;\n  245:  		float fMinDist = Min(fDist, fDistHat);\n  246:  		if(fMinDist > fPenetration)\n  247   		{\n  248   			pointout_ = p0;\n  ...\n  258   		float fDist = size.x-d1;\n  259   		float fDistHat = size.y-d1hat;\n  260:  		float fMinDist = Min(fDist, fDistHat);\n  261:  		if(fMinDist > fPenetration)\n  262   		{\n  263   			pointout_ = p1;\n  ...\n  273   		float fDist = size.x-d2;\n  274   		float fDistHat = size.y-d2hat;\n  275:   		float fMinDist = Min(fDist, fDistHat);\n  276:  		if(fMinDist > fPenetration)\n  277   		{\n  278   			pointout_ = p2;\n  ...\n  288   		float fDist = size.x-d3;\n  289   		float fDistHat = size.y-d3hat;\n  290:   		float fMinDist = Min(fDist, fDistHat);\n  291:  		if(fMinDist > fPenetration)\n  292   		{\n  293   			pointout_ = p3;\n\n/Users/jonasm/screenbsp/math.h:\n  324  \n  325  template<typename T>\n  326: T Min(T a, T b)\n  327  { return a < b ? a : b; }\n  328  \n  ...\n  333  template<typename T>\n  334  T Clamp(T v, T a, T b)\n  335: { return Max(Min(v,b), a); }\n  336  \n\n/Users/jonasm/screenbsp/text.cpp:\n  223  		pPlot->nCount = nLen;\n  224  		char* pDest = &g_TextRenderState.Lines[nY].c[0];\n  225: 		uint32_t nEnd = Min<uint32_t>(nLen + nX, TEXT_SCREEN_WIDTH);\n  226  		for(uint32_t i = nX; i < nEnd; ++i)\n  227  			pDest[i] = *s++;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/TODO.txt:\n    6   - start designing GLEW 2.0\n    7  \n    8: Minor:\n    9   - make auto scripts work with text mode cygwin mounts\n   10   - add support for all SUN, MTX, and OML extensions\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_ARB_imaging:\n   93  	void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   94  	void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)\n   95: 	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink)\n   96: 	void glResetMinmax (GLenum target)\n   97: 	void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   98: 	void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)\n   99  	void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)\n  100  	void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)\n  ...\n  110  	void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)\n  111  	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)\n  112: 	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)\n  113  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_ARB_robustness:\n   17  	void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v)\n   18  	void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v)\n   19: 	void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values)\n   20  	void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values)\n   21  	void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/core/GL_VERSION_4_0:\n   19  	GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E\n   20  	GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F\n   21: 	void glMinSampleShading (GLclampf value)\n   22  	void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha)\n   23  	void glBlendEquationi (GLuint buf, GLenum mode)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/doc/log.html:\n  615  <li> Missing OpenGL 2.0 entry points\n  616  <li> Missing tokens in GL_SGIX_shadow\n  617: <li> MinGW makefile problem\n  618  <li> Check for incorrect OpenGL version string on SiS hardware\n  619  <li> Documentation update to meet the HTML 4.01 Transitional specification\n  ...\n  677  <ul>\n  678  <li> OpenGL version detection bug\n  679: <li> Problems with wxWindows and MinGW compilation\n  680  <li> <tt>visualinfo</tt> compilation problem with GLEW_MX specified\n  681  <li> Wrong token name in OpenGL 1.5 core\n  ...\n  727  <li> Added command line flags to <tt>glewinfo</tt> for selecting displays and visuals\n  728  <li> Added GLX_SGIS_multisample, GLX_SUN_video_resize, and GL_SUN_read_video_pixels\n  729: <li> Added MinGW/MSYS support\n  730  <li> Bug fixes in GL_ARB_shader_objects and the OS X build\n  731  </ul>\n  ...\n  765  <li> Added GLX_NV_float_buffer, GL_ARB_shading_language_100, and GL_ARB_texture_non_power_of_two\n  766  <li> Fixed bug in GL_ARB_vertex_buffer_object\n  767: <li> Minor updates in documentation\n  768  </ul>\n  769  </ul>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_imaging:\n   93  	void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   94  	void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)\n   95: 	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink)\n   96: 	void glResetMinmax (GLenum target)\n   97: 	void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)\n   98: 	void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)\n   99  	void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)\n  100  	void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)\n  ...\n  110  	void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)\n  111  	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)\n  112: 	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)\n  113  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_robustness:\n   17  	void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v)\n   18  	void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v)\n   19: 	void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values)\n   20  	void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values)\n   21  	void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values)\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_ARB_sample_shading:\n    4  	GL_SAMPLE_SHADING_ARB 0x8C36\n    5  	GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37\n    6: 	void glMinSampleShadingARB (GLclampf value)\n    7  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/extensions/GL_EXT_histogram:\n   18  	void glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat* params)\n   19  	void glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint* params)\n   20: 	void glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void* values)\n   21: 	void glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat* params)\n   22: 	void glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint* params)\n   23  	void glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)\n   24: 	void glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink)\n   25  	void glResetHistogramEXT (GLenum target)\n   26: 	void glResetMinmaxEXT (GLenum target)\n   27  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/config/config.guess:\n  859  	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu\n  860  	exit ;;\n  861:     i*86:Minix:*:*)\n  862  	echo ${UNAME_MACHINE}-pc-minix\n  863  	exit ;;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/doc/log.html:\n  714  <li> Missing OpenGL 2.0 entry points\n  715  <li> Missing tokens in GL_SGIX_shadow\n  716: <li> MinGW makefile problem\n  717  <li> Check for incorrect OpenGL version string on SiS hardware\n  718  <li> Documentation update to meet the HTML 4.01 Transitional specification\n  ...\n  776  <ul>\n  777  <li> OpenGL version detection bug\n  778: <li> Problems with wxWindows and MinGW compilation\n  779  <li> <tt>visualinfo</tt> compilation problem with GLEW_MX specified\n  780  <li> Wrong token name in OpenGL 1.5 core\n  ...\n  826  <li> Added command line flags to <tt>glewinfo</tt> for selecting displays and visuals\n  827  <li> Added GLX_SGIS_multisample, GLX_SUN_video_resize, and GL_SUN_read_video_pixels\n  828: <li> Added MinGW/MSYS support\n  829  <li> Bug fixes in GL_ARB_shader_objects and the OS X build\n  830  </ul>\n  ...\n  864  <li> Added GLX_NV_float_buffer, GL_ARB_shading_language_100, and GL_ARB_texture_non_power_of_two\n  865  <li> Fixed bug in GL_ARB_vertex_buffer_object\n  866: <li> Minor updates in documentation\n  867  </ul>\n  868  </ul>\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/include/GL/glew.h:\n 2406  #define glBlendFuncSeparatei GLEW_GET_FUN(__glewBlendFuncSeparatei)\n 2407  #define glBlendFunci GLEW_GET_FUN(__glewBlendFunci)\n 2408: #define glMinSampleShading GLEW_GET_FUN(__glewMinSampleShading)\n 2409  \n 2410  #define GLEW_VERSION_4_0 GLEW_GET_VAR(__GLEW_VERSION_4_0)\n ....\n 4097  #define glGetHistogramParameterfv GLEW_GET_FUN(__glewGetHistogramParameterfv)\n 4098  #define glGetHistogramParameteriv GLEW_GET_FUN(__glewGetHistogramParameteriv)\n 4099: #define glGetMinmax GLEW_GET_FUN(__glewGetMinmax)\n 4100: #define glGetMinmaxParameterfv GLEW_GET_FUN(__glewGetMinmaxParameterfv)\n 4101: #define glGetMinmaxParameteriv GLEW_GET_FUN(__glewGetMinmaxParameteriv)\n 4102  #define glGetSeparableFilter GLEW_GET_FUN(__glewGetSeparableFilter)\n 4103  #define glHistogram GLEW_GET_FUN(__glewHistogram)\n 4104: #define glMinmax GLEW_GET_FUN(__glewMinmax)\n 4105  #define glResetHistogram GLEW_GET_FUN(__glewResetHistogram)\n 4106: #define glResetMinmax GLEW_GET_FUN(__glewResetMinmax)\n 4107  #define glSeparableFilter2D GLEW_GET_FUN(__glewSeparableFilter2D)\n 4108  \n ....\n 4742  #define glGetnMapfvARB GLEW_GET_FUN(__glewGetnMapfvARB)\n 4743  #define glGetnMapivARB GLEW_GET_FUN(__glewGetnMapivARB)\n 4744: #define glGetnMinmaxARB GLEW_GET_FUN(__glewGetnMinmaxARB)\n 4745  #define glGetnPixelMapfvARB GLEW_GET_FUN(__glewGetnPixelMapfvARB)\n 4746  #define glGetnPixelMapuivARB GLEW_GET_FUN(__glewGetnPixelMapuivARB)\n ....\n 4787  typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGARBPROC) (GLclampf value);\n 4788  \n 4789: #define glMinSampleShadingARB GLEW_GET_FUN(__glewMinSampleShadingARB)\n 4790  \n 4791  #define GLEW_ARB_sample_shading GLEW_GET_VAR(__GLEW_ARB_sample_shading)\n ....\n 8754  #define glGetHistogramParameterfvEXT GLEW_GET_FUN(__glewGetHistogramParameterfvEXT)\n 8755  #define glGetHistogramParameterivEXT GLEW_GET_FUN(__glewGetHistogramParameterivEXT)\n 8756: #define glGetMinmaxEXT GLEW_GET_FUN(__glewGetMinmaxEXT)\n 8757: #define glGetMinmaxParameterfvEXT GLEW_GET_FUN(__glewGetMinmaxParameterfvEXT)\n 8758: #define glGetMinmaxParameterivEXT GLEW_GET_FUN(__glewGetMinmaxParameterivEXT)\n 8759  #define glHistogramEXT GLEW_GET_FUN(__glewHistogramEXT)\n 8760: #define glMinmaxEXT GLEW_GET_FUN(__glewMinmaxEXT)\n 8761  #define glResetHistogramEXT GLEW_GET_FUN(__glewResetHistogramEXT)\n 8762: #define glResetMinmaxEXT GLEW_GET_FUN(__glewResetMinmaxEXT)\n 8763  \n 8764  #define GLEW_EXT_histogram GLEW_GET_VAR(__GLEW_EXT_histogram)\n ....\n 14559  GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei;\n 14560  GLEW_FUN_EXPORT PFNGLBLENDFUNCIPROC __glewBlendFunci;\n 14561: GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading;\n 14562  \n 14563  GLEW_FUN_EXPORT PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX;\n .....\n 14767  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv;\n 14768  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv;\n 14769: GLEW_FUN_EXPORT PFNGLGETMINMAXPROC __glewGetMinmax;\n 14770: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv;\n 14771: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv;\n 14772  GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter;\n 14773  GLEW_FUN_EXPORT PFNGLHISTOGRAMPROC __glewHistogram;\n 14774: GLEW_FUN_EXPORT PFNGLMINMAXPROC __glewMinmax;\n 14775  GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMPROC __glewResetHistogram;\n 14776: GLEW_FUN_EXPORT PFNGLRESETMINMAXPROC __glewResetMinmax;\n 14777  GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D;\n 14778  \n .....\n 14870  GLEW_FUN_EXPORT PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB;\n 14871  GLEW_FUN_EXPORT PFNGLGETNMAPIVARBPROC __glewGetnMapivARB;\n 14872: GLEW_FUN_EXPORT PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB;\n 14873  GLEW_FUN_EXPORT PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB;\n 14874  GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB;\n .....\n 14883  GLEW_FUN_EXPORT PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB;\n 14884  \n 14885: GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB;\n 14886  \n 14887  GLEW_FUN_EXPORT PFNGLBINDSAMPLERPROC __glewBindSampler;\n .....\n 15766  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT;\n 15767  GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT;\n 15768: GLEW_FUN_EXPORT PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT;\n 15769: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT;\n 15770: GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT;\n 15771  GLEW_FUN_EXPORT PFNGLHISTOGRAMEXTPROC __glewHistogramEXT;\n 15772: GLEW_FUN_EXPORT PFNGLMINMAXEXTPROC __glewMinmaxEXT;\n 15773  GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT;\n 15774: GLEW_FUN_EXPORT PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT;\n 15775  \n 15776  GLEW_FUN_EXPORT PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/glew.c:\n  572  PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei = NULL;\n  573  PFNGLBLENDFUNCIPROC __glewBlendFunci = NULL;\n  574: PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading = NULL;\n  575  \n  576  PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX = NULL;\n  ...\n  780  PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv = NULL;\n  781  PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv = NULL;\n  782: PFNGLGETMINMAXPROC __glewGetMinmax = NULL;\n  783: PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv = NULL;\n  784: PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv = NULL;\n  785  PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter = NULL;\n  786  PFNGLHISTOGRAMPROC __glewHistogram = NULL;\n  787: PFNGLMINMAXPROC __glewMinmax = NULL;\n  788  PFNGLRESETHISTOGRAMPROC __glewResetHistogram = NULL;\n  789: PFNGLRESETMINMAXPROC __glewResetMinmax = NULL;\n  790  PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D = NULL;\n  791  \n  ...\n  883  PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB = NULL;\n  884  PFNGLGETNMAPIVARBPROC __glewGetnMapivARB = NULL;\n  885: PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB = NULL;\n  886  PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB = NULL;\n  887  PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB = NULL;\n  ...\n  896  PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB = NULL;\n  897  \n  898: PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB = NULL;\n  899  \n  900  PFNGLBINDSAMPLERPROC __glewBindSampler = NULL;\n  ...\n 1779  PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT = NULL;\n 1780  PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT = NULL;\n 1781: PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT = NULL;\n 1782: PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT = NULL;\n 1783: PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT = NULL;\n 1784  PFNGLHISTOGRAMEXTPROC __glewHistogramEXT = NULL;\n 1785: PFNGLMINMAXEXTPROC __glewMinmaxEXT = NULL;\n 1786  PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT = NULL;\n 1787: PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT = NULL;\n 1788  \n 1789  PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT = NULL;\n ....\n 3479    r = ((glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparatei\")) == NULL) || r;\n 3480    r = ((glBlendFunci = (PFNGLBLENDFUNCIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFunci\")) == NULL) || r;\n 3481:   r = ((glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShading\")) == NULL) || r;\n 3482  \n 3483    return r;\n ....\n 4275    r = ((glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfv\")) == NULL) || r;\n 4276    r = ((glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameteriv\")) == NULL) || r;\n 4277:   r = ((glGetMinmax = (PFNGLGETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmax\")) == NULL) || r;\n 4278:   r = ((glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfv\")) == NULL) || r;\n 4279:   r = ((glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameteriv\")) == NULL) || r;\n 4280    r = ((glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)glewGetProcAddress((const GLubyte*)\"glGetSeparableFilter\")) == NULL) || r;\n 4281    r = ((glHistogram = (PFNGLHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glHistogram\")) == NULL) || r;\n 4282:   r = ((glMinmax = (PFNGLMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glMinmax\")) == NULL) || r;\n 4283    r = ((glResetHistogram = (PFNGLRESETHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogram\")) == NULL) || r;\n 4284:   r = ((glResetMinmax = (PFNGLRESETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmax\")) == NULL) || r;\n 4285    r = ((glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glSeparableFilter2D\")) == NULL) || r;\n 4286  \n ....\n 4552    r = ((glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapfvARB\")) == NULL) || r;\n 4553    r = ((glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapivARB\")) == NULL) || r;\n 4554:   r = ((glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMinmaxARB\")) == NULL) || r;\n 4555    r = ((glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapfvARB\")) == NULL) || r;\n 4556    r = ((glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapuivARB\")) == NULL) || r;\n ....\n 4584    GLboolean r = GL_FALSE;\n 4585  \n 4586:   r = ((glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShadingARB\")) == NULL) || r;\n 4587  \n 4588    return r;\n ....\n 6442    r = ((glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfvEXT\")) == NULL) || r;\n 6443    r = ((glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterivEXT\")) == NULL) || r;\n 6444:   r = ((glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxEXT\")) == NULL) || r;\n 6445:   r = ((glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfvEXT\")) == NULL) || r;\n 6446:   r = ((glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterivEXT\")) == NULL) || r;\n 6447    r = ((glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glHistogramEXT\")) == NULL) || r;\n 6448:   r = ((glMinmaxEXT = (PFNGLMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glMinmaxEXT\")) == NULL) || r;\n 6449    r = ((glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogramEXT\")) == NULL) || r;\n 6450:   r = ((glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmaxEXT\")) == NULL) || r;\n 6451  \n 6452    return r;\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/src/glewinfo.c:\n  508    glewInfoFunc(\"glBlendFuncSeparatei\", glBlendFuncSeparatei == NULL);\n  509    glewInfoFunc(\"glBlendFunci\", glBlendFunci == NULL);\n  510:   glewInfoFunc(\"glMinSampleShading\", glMinSampleShading == NULL);\n  511  }\n  512  \n  ...\n 1455    glewInfoFunc(\"glGetHistogramParameterfv\", glGetHistogramParameterfv == NULL);\n 1456    glewInfoFunc(\"glGetHistogramParameteriv\", glGetHistogramParameteriv == NULL);\n 1457:   glewInfoFunc(\"glGetMinmax\", glGetMinmax == NULL);\n 1458:   glewInfoFunc(\"glGetMinmaxParameterfv\", glGetMinmaxParameterfv == NULL);\n 1459:   glewInfoFunc(\"glGetMinmaxParameteriv\", glGetMinmaxParameteriv == NULL);\n 1460    glewInfoFunc(\"glGetSeparableFilter\", glGetSeparableFilter == NULL);\n 1461    glewInfoFunc(\"glHistogram\", glHistogram == NULL);\n 1462:   glewInfoFunc(\"glMinmax\", glMinmax == NULL);\n 1463    glewInfoFunc(\"glResetHistogram\", glResetHistogram == NULL);\n 1464:   glewInfoFunc(\"glResetMinmax\", glResetMinmax == NULL);\n 1465    glewInfoFunc(\"glSeparableFilter2D\", glSeparableFilter2D == NULL);\n 1466  }\n ....\n 1729    glewInfoFunc(\"glGetnMapfvARB\", glGetnMapfvARB == NULL);\n 1730    glewInfoFunc(\"glGetnMapivARB\", glGetnMapivARB == NULL);\n 1731:   glewInfoFunc(\"glGetnMinmaxARB\", glGetnMinmaxARB == NULL);\n 1732    glewInfoFunc(\"glGetnPixelMapfvARB\", glGetnPixelMapfvARB == NULL);\n 1733    glewInfoFunc(\"glGetnPixelMapuivARB\", glGetnPixelMapuivARB == NULL);\n ....\n 1769    glewPrintExt(\"GL_ARB_sample_shading\", GLEW_ARB_sample_shading, glewIsSupported(\"GL_ARB_sample_shading\"), glewGetExtension(\"GL_ARB_sample_shading\"));\n 1770  \n 1771:   glewInfoFunc(\"glMinSampleShadingARB\", glMinSampleShadingARB == NULL);\n 1772  }\n 1773  \n ....\n 3759    glewInfoFunc(\"glGetHistogramParameterfvEXT\", glGetHistogramParameterfvEXT == NULL);\n 3760    glewInfoFunc(\"glGetHistogramParameterivEXT\", glGetHistogramParameterivEXT == NULL);\n 3761:   glewInfoFunc(\"glGetMinmaxEXT\", glGetMinmaxEXT == NULL);\n 3762:   glewInfoFunc(\"glGetMinmaxParameterfvEXT\", glGetMinmaxParameterfvEXT == NULL);\n 3763:   glewInfoFunc(\"glGetMinmaxParameterivEXT\", glGetMinmaxParameterivEXT == NULL);\n 3764    glewInfoFunc(\"glHistogramEXT\", glHistogramEXT == NULL);\n 3765:   glewInfoFunc(\"glMinmaxEXT\", glMinmaxEXT == NULL);\n 3766    glewInfoFunc(\"glResetHistogramEXT\", glResetHistogramEXT == NULL);\n 3767:   glewInfoFunc(\"glResetMinmaxEXT\", glResetMinmaxEXT == NULL);\n 3768  }\n 3769  \n\n239 matches across 19 files\n\n\nSearching 833 files for \"Min\" (case sensitive, whole word)\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/math.cpp:\n  243   		float fDist = size.x-d0;\n  244   		float fDistHat = size.y-d0hat;\n  245:  		float fMinDist = Min(fDist, fDistHat);\n  246   		if(fMinDist > fPenetration)\n  247   		{\n  ...\n  258   		float fDist = size.x-d1;\n  259   		float fDistHat = size.y-d1hat;\n  260:  		float fMinDist = Min(fDist, fDistHat);\n  261   		if(fMinDist > fPenetration)\n  262   		{\n  ...\n  273   		float fDist = size.x-d2;\n  274   		float fDistHat = size.y-d2hat;\n  275:   		float fMinDist = Min(fDist, fDistHat);\n  276   		if(fMinDist > fPenetration)\n  277   		{\n  ...\n  288   		float fDist = size.x-d3;\n  289   		float fDistHat = size.y-d3hat;\n  290:   		float fMinDist = Min(fDist, fDistHat);\n  291   		if(fMinDist > fPenetration)\n  292   		{\n\n/Users/jonasm/screenbsp/math.h:\n  324  \n  325  template<typename T>\n  326: T Min(T a, T b)\n  327  { return a < b ? a : b; }\n  328  \n  ...\n  333  template<typename T>\n  334  T Clamp(T v, T a, T b)\n  335: { return Max(Min(v,b), a); }\n  336  \n\n/Users/jonasm/screenbsp/text.cpp:\n  223  		pPlot->nCount = nLen;\n  224  		char* pDest = &g_TextRenderState.Lines[nY].c[0];\n  225: 		uint32_t nEnd = Min<uint32_t>(nLen + nX, TEXT_SCREEN_WIDTH);\n  226  		for(uint32_t i = nX; i < nEnd; ++i)\n  227  			pDest[i] = *s++;\n\n8 matches across 4 files\n\n\nSearching 833 files for \"mperspective\" (case sensitive, whole word)\n\n/Users/jonasm/screenbsp/math.cpp:\n 1092  }\n 1093  \n 1094: m mperspective(float fFovY, float fAspect, float fNear, float fFar)\\\n 1095  {\n 1096  	//f aspect 0 0 0  -- \n\n/Users/jonasm/screenbsp/math.h:\n  281  m mrotatez(float fAngle);\n  282  m mtranslate(v3 trans);\n  283: m mperspective(float fFovY, float fAspect, float fNear, float fFar);\n  284  m mortho(float fXWidth, float fYWidth, float fZRange);\n  285  \n\n/Users/jonasm/screenbsp/program.cpp:\n  236  	else\n  237  	{\n  238: 		g_WorldState.Camera.mprj = mperspective(30, (float)g_Width / (float)g_Height, 0.001f, 100.f);\n  239  	}\n  240  	uplotfnxt(\"FPS %4.2f Dir[%5.2f,%5.2f,%5.2f] Pos[%3.2f,%3.2f,%3.2f]\" , 1.f, \n\n3 matches across 3 files\n\n\nSearching 833 files for \"g_MouseState\" (case sensitive, whole word)\n\n/Users/jonasm/screenbsp/input.cpp:\n    4  SPadState g_PadState[MAX_PADS];\n    5  SDL_Joystick* g_pJoyStick[MAX_PADS];\n    6: SMouseState g_MouseState;\n    7  SKeyboardState g_KeyboardState;\n    8  uint32_t g_nNumJoysticks = 0;\n    .\n   21  	}\n   22  	memset(&g_PadState, 0, sizeof(g_PadState));\n   23: 	memset(&g_MouseState, 0, sizeof(g_MouseState));\n   24: 	memset(&g_KeyboardState, 0, sizeof(g_MouseState));\n   25  }\n   26  \n   ..\n   40  \n   41  	for(uint32_t i = 0; i < MOUSE_BUTTON_MAX; ++i)\n   42: 		g_MouseState.button[i] &= ~BUTTON_FRAME;\n   43  	for(uint32_t i = 0; i < KEYBOARD_MAX_KEYS; ++i)\n   44  		g_KeyboardState.keys[i] &= ~BUTTON_FRAME;\n\n/Users/jonasm/screenbsp/input.h:\n   73  extern uint32_t g_nNumJoysticks;\n   74  extern SPadState g_PadState[MAX_PADS];\n   75: extern SMouseState g_MouseState;\n   76  extern SKeyboardState g_KeyboardState;\n   77  \n\n/Users/jonasm/screenbsp/main.cpp:\n   49  		break;\n   50  	case SDL_MOUSEMOTION:\n   51: 		g_MouseState.position[0] = pEvt->motion.x;\n   52: 		g_MouseState.position[1] = pEvt->motion.y;\n   53  		break;\n   54  	case SDL_MOUSEBUTTONDOWN:\n   ..\n   59  			if(SDL_MOUSEBUTTONUP == type)\n   60  			{\n   61: 				g_MouseState.button[pEvt->button.button] = BUTTON_UP|BUTTON_RELEASED;\n   62  			}\n   63  			else\n   64  			{\n   65: 				g_MouseState.button[pEvt->button.button] = BUTTON_DOWN|BUTTON_PUSHED;\n   66  			}\n   67  		}\n\n/Users/jonasm/screenbsp/program.cpp:\n  149  void UpdatePicking()\n  150  {\n  151: 	if(g_MouseState.button[0] & BUTTON_RELEASED)\n  152  	{\n  153  		v3 vPos = g_WorldState.Camera.vPosition;\n  ...\n  161  {\n  162  	v3 vDir = v3init(0,0,0);\n  163: 	if(g_MouseState.button[SDL_BUTTON_WHEELUP] & BUTTON_RELEASED)\n  164  		g_fOrthoScale *= 0.96;\n  165: 	if(g_MouseState.button[SDL_BUTTON_WHEELDOWN] & BUTTON_RELEASED)\n  166  		g_fOrthoScale /= 0.96;\n  167  	uplotfnxt(\"ORTHO SCALE %f\\n\", g_fOrthoScale);\n  ...\n  194  \n  195  	static int mousex, mousey;\n  196: 	if(g_MouseState.button[1] & BUTTON_PUSHED)\n  197  	{\n  198: 		mousex = g_MouseState.position[0];\n  199: 		mousey = g_MouseState.position[1];\n  200  	}\n  201  \n  202: 	if(g_MouseState.button[1] & BUTTON_DOWN)\n  203  	{\n  204: 		int dx = g_MouseState.position[0] - mousex;\n  205: 		int dy = g_MouseState.position[1] - mousey;\n  206: 		mousex = g_MouseState.position[0];\n  207: 		mousey = g_MouseState.position[1];\n  208  \n  209  		float fRotX = dy * -0.25f;\n  ...\n  279  \n  280  	//mouse\n  281: 	v3 vMouse = v3init( g_MouseState.position[0], g_MouseState.position[1], 0);\n  282  	v3 vMouseClip = mtransform(g_WorldState.Camera.mviewportinv, vMouse);\n  283  	vMouseClip.z = -0.9f;\n  ...\n  291  \n  292  \n  293: 	// v4 vMouse = v4init( g_MouseState.position[0] / float(g_Height), g_MouseState.position[1] / float(g_Width), 0, 0);\n  294  	// vMouse = vMouse * 2.f - 1.f;\n  295  	// vMouse.z = 0.2f;\n\n25 matches across 4 files\n\n\nSearching 833 files for \"g_MouseState.position[1]\" (case sensitive, whole word)\n\n0 matches across 0 files\n\n\nSearching 833 files for \"g_MouseState.position\" (case sensitive, whole word)\n\n/Users/jonasm/screenbsp/main.cpp:\n   49  		break;\n   50  	case SDL_MOUSEMOTION:\n   51: 		g_MouseState.position[0] = pEvt->motion.x;\n   52: 		g_MouseState.position[1] = g_Height-pEvt->motion.y; // flip to match opengl\n   53  		break;\n   54  	case SDL_MOUSEBUTTONDOWN:\n\n/Users/jonasm/screenbsp/program.cpp:\n  196  	if(g_MouseState.button[1] & BUTTON_PUSHED)\n  197  	{\n  198: 		mousex = g_MouseState.position[0];\n  199: 		mousey = g_MouseState.position[1];\n  200  	}\n  201  \n  202  	if(g_MouseState.button[1] & BUTTON_DOWN)\n  203  	{\n  204: 		int dx = g_MouseState.position[0] - mousex;\n  205: 		int dy = g_MouseState.position[1] - mousey;\n  206: 		mousex = g_MouseState.position[0];\n  207: 		mousey = g_MouseState.position[1];\n  208  \n  209  		float fRotX = dy * -0.25f;\n  ...\n  279  \n  280  	//mouse\n  281: 	v3 vMouse = v3init( g_MouseState.position[0], g_MouseState.position[1], 0);\n  282  	v3 vMouseClip = mtransform(g_WorldState.Camera.mviewportinv, vMouse);\n  283  	vMouseClip.z = -0.9f;\n  ...\n  291  \n  292  \n  293: 	// v4 vMouse = v4init( g_MouseState.position[0] / float(g_Height), g_MouseState.position[1] / float(g_Width), 0, 0);\n  294  	// vMouse = vMouse * 2.f - 1.f;\n  295  	// vMouse.z = 0.2f;\n\n12 matches across 2 files\n\n\nSearching 839 files for \"fovy\"\n\n/Users/jonasm/screenbsp/bsp.cpp:\n  253  \n  254  	v3 vFrustumCorners[4];\n  255: 	float fY = sin(pBsp->View.Desc.fFovY);\n  256  	float fX = \n  257  \n\n/Users/jonasm/screenbsp/bsp.h:\n   12  	v3 vDirection;\n   13  	v3 vRight;\n   14: 	float fFovY;\n   15  	float fAspect;\n   16  };\n\n/Users/jonasm/screenbsp/math.cpp:\n 1101  }\n 1102  \n 1103: m mperspective(float fFovY, float fAspect, float fNear, float fFar)\\\n 1104  {\n 1105  	m r = mid();\n 1106: 	float fAngle = (fFovY * PI / 180.f)/2.f;\n 1107  	float f = cos(fAngle) / sin(fAngle);\n 1108  	r.x.x = f * fAspect;\n\n/Users/jonasm/screenbsp/math.h:\n  258  m mtranslate(v3 trans);\n  259  m mviewport(float x, float y, float w, float h);\n  260: m mperspective(float fFovY, float fAspect, float fNear, float fFar);\n  261  m mortho(float fXWidth, float fYWidth, float fZRange);\n  262  \n\n/Users/jonasm/screenbsp/program.cpp:\n  140  	ViewDesc.vDirection = vDir;\n  141  	ViewDesc.vRight = g_WorldState.Camera.vRight;\n  142: 	ViewDesc.fFovY = 90;\n  143  	ViewDesc.fAspect = 1.f;\n  144  \n\n6 matches across 5 files\n\n\nSearching 839 files for \"ZASSERTNORMALIZED\"\n\n/Users/jonasm/screenbsp/bsp.cpp:\n  260  		const float fDist = 10;\n  261  		const v3 vUp = v3cross(Desc.vRight, Desc.vDirection);\n  262: 		ZASSERTNORMALIZED3(vUp);\n  263: 		ZASSERTNORMALIZED3(Desc.vRight);\n  264: 		ZASSERTNORMALIZED3(Desc.vDirection);\n  265  \n  266  		vFrustumCorners[0] = fDist * (Desc.vDirection + fY * vUp + fX * Desc.vRight) + Desc.vOrigin;\n\n/Users/jonasm/screenbsp/math.h:\n  294  uint64_t rand64(uint64_t nPrev);\n  295  \n  296: #define ZASSERTNORMALIZED2(v) ZASSERT(fabs(v2length(v)-1.f) < 1e-4f)\n  297: #define ZASSERTNORMALIZED3(v) ZASSERT(fabs(v3length(v)-1.f) < 1e-4f)\n  298: #define ZASSERTNORMALIZED4(v) ZASSERT(fabs(v4length(v)-1.f) < 1e-4f)\n  299  \n  300  inline float signf(float f) { return f<0.0f ? -1.0f : 1.0f; }\n\n6 matches across 2 files\n\n\nSearching 839 files for \"fovy\"\n\n/Users/jonasm/screenbsp/bsp.cpp:\n  256  		SOccluderBspViewDesc Desc = pBsp->Desc;\n  257  \n  258: 		float fY = sin(Desc.fFovY * PI / 180.f);\n  259  		float fX = fY * Desc.fAspect;\n  260  		const float fDist = 10;\n\n/Users/jonasm/screenbsp/bsp.h:\n   12  	v3 vDirection;\n   13  	v3 vRight;\n   14: 	float fFovY;\n   15  	float fAspect;\n   16  };\n\n/Users/jonasm/screenbsp/math.cpp:\n 1101  }\n 1102  \n 1103: m mperspective(float fFovY, float fAspect, float fNear, float fFar)\\\n 1104  {\n 1105  	m r = mid();\n 1106: 	float fAngle = (fFovY * PI / 180.f)/2.f;\n 1107  	float f = cos(fAngle) / sin(fAngle);\n 1108  	r.x.x = f * fAspect;\n\n/Users/jonasm/screenbsp/math.h:\n  258  m mtranslate(v3 trans);\n  259  m mviewport(float x, float y, float w, float h);\n  260: m mperspective(float fFovY, float fAspect, float fNear, float fFar);\n  261  m mortho(float fXWidth, float fYWidth, float fZRange);\n  262  \n\n/Users/jonasm/screenbsp/program.cpp:\n  152  	ViewDesc.vDirection = vDir;\n  153  	ViewDesc.vRight = vRight;\n  154: 	ViewDesc.fFovY = 90;\n  155  	ViewDesc.fAspect = 1.f;\n  156  \n\n6 matches across 5 files\n\n\nSearching 839 files for \"mperspective\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/math.cpp:\n 1101  }\n 1102  \n 1103: m mperspective(float fFovY, float fAspect, float fNear, float fFar)\\\n 1104  {\n 1105  	m r = mid();\n\n/Users/jonasm/screenbsp/math.h:\n  258  m mtranslate(v3 trans);\n  259  m mviewport(float x, float y, float w, float h);\n  260: m mperspective(float fFovY, float fAspect, float fNear, float fFar);\n  261  m mortho(float fXWidth, float fYWidth, float fZRange);\n  262  \n\n/Users/jonasm/screenbsp/program.cpp:\n  475  	else\n  476  	{\n  477: 		g_WorldState.Camera.mprj = mperspective(45, ((float)g_Height / (float)g_Width), 0.001f, 100.f);\n  478  	}\n  479  	\n\n6 matches across 4 files\n\n\nSearching 839 files for \"mperspective\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/math.cpp:\n 1101  }\n 1102  \n 1103: m mperspective(float fFovY, float fAspect, float fNear, float fFar)\\\n 1104  {\n 1105  	m r = mid();\n\n/Users/jonasm/screenbsp/math.h:\n  258  m mtranslate(v3 trans);\n  259  m mviewport(float x, float y, float w, float h);\n  260: m mperspective(float fFovY, float fAspect, float fNear, float fFar);\n  261  m mortho(float fXWidth, float fYWidth, float fZRange);\n  262  \n\n/Users/jonasm/screenbsp/program.cpp:\n  475  	else\n  476  	{\n  477: 		g_WorldState.Camera.mprj = mperspective(g_WorldState.Camera.fFovY, ((float)g_Height / (float)g_Width), 0.001f, 100.f);\n  478  	}\n  479  	\n\n6 matches across 4 files\n\n\nSearching 840 files for \"mperspective\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/math.cpp:\n 1101  }\n 1102  \n 1103: m mperspective(float fFovY, float fAspect, float fNear, float fFar)\n 1104  {\n 1105  	m r = mid();\n\n/Users/jonasm/screenbsp/math.h:\n  258  m mtranslate(v3 trans);\n  259  m mviewport(float x, float y, float w, float h);\n  260: m mperspective(float fFovY, float fAspect, float fNear, float fFar);\n  261  m mortho(float fXWidth, float fYWidth, float fZRange);\n  262  \n\n/Users/jonasm/screenbsp/program.cpp:\n  480  	else\n  481  	{\n  482: 		g_WorldState.Camera.mprj = mperspective(g_WorldState.Camera.fFovY, ((float)g_Height / (float)g_Width), 0.001f, 100.f);\n  483  	}\n  484  	\n\n6 matches across 4 files\n\n\nSearching 841 files for \"ProgramMain\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/main.cpp:\n  119  }\n  120  \n  121: int ProgramMain();\n  122  void ProgramInit();\n  123  \n  ...\n  172  			HandleEvent(&Evt);\n  173  		}\n  174: 		if(ProgramMain())\n  175  		{\n  176  			g_nQuit = 1;\n\n/Users/jonasm/screenbsp/program.cpp:\n  520  }\n  521  \n  522: int ProgramMain()\n  523  {\n  524  \n\n5 matches across 3 files\n\n\nSearching 841 files for \"GL_DEPTH_TEST\"\n\n/Users/jonasm/screenbsp/debug.cpp:\n  254  \n  255  		v4* pVert = g_DebugDrawState.PolyVert.Ptr();\n  256: 		// glEnable(GL_DEPTH_TEST);\n  257  		// glDepthMasth(G\n  258  		//glEnable(GL_BLEND);\n\n/Users/jonasm/screenbsp/program.cpp:\n  540  	glViewport(0, 0, g_Width, g_Height);\n  541  \n  542: 	glEnable(GL_DEPTH_TEST)\n  543  	glDepthMask(true);\n  544  \n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/auto/src/glew_head.h:\n  358  #define GL_FOG_COLOR 0x0B66\n  359  #define GL_DEPTH_RANGE 0x0B70\n  360: #define GL_DEPTH_TEST 0x0B71\n  361  #define GL_DEPTH_WRITEMASK 0x0B72\n  362  #define GL_DEPTH_CLEAR_VALUE 0x0B73\n\n/Users/jonasm/screenbsp/glew/glew-1.9.0/include/GL/glew.h:\n  436  #define GL_FOG_COLOR 0x0B66\n  437  #define GL_DEPTH_RANGE 0x0B70\n  438: #define GL_DEPTH_TEST 0x0B71\n  439  #define GL_DEPTH_WRITEMASK 0x0B72\n  440  #define GL_DEPTH_CLEAR_VALUE 0x0B73\n\n4 matches across 4 files\n\n\nSearching 842 files for \"void uprintf\"\n\n/Users/jonasm/screenbsp/debug.h:\n   29  void uplotfnxt(const char* pfmt, ...);\n   30  void uplotf(uint32_t nX, uint32_t nY, const char* pfmt, ...);\n   31: void uprintf(const char* fmt, ...);\n   32  \n\n/Users/jonasm/screenbsp/main.cpp:\n  186  \n  187  #ifdef _WIN32\n  188: void uprintf(const char* fmt, ...)\n  189  {\n  190  	char buffer[32*1024];\n  ...\n  196  }\n  197  #else\n  198: void uprintf(const char* fmt, ...)\n  199  {\n  200  	char buffer[32*1024];\n\n3 matches across 2 files\n\n\nSearching 848 files for \"CheckGLError\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/glinc.h:\n    6  \n    7  \n    8: void CheckGLError();\n    9  \n   10  \n\n/Users/jonasm/screenbsp/main.cpp:\n   23  uint32_t g_lShowDebugText = 1;\n   24  \n   25: void CheckGLError()\n   26  {\n   27  	GLenum errCode;\n   ..\n  168  	while(!g_nQuit)\n  169  	{\n  170: 		CheckGLError();\n  171  \n  172  		InputClear();\n\n/Users/jonasm/screenbsp/program.cpp:\n  560  	glLoadMatrixf(&g_WorldState.Camera.mview.x.x);\n  561  	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n  562: 	CheckGLError();\n  563  	WorldRender();\n  564  	DebugRender();\n\n/Users/jonasm/screenbsp/shader.cpp:\n   67  	char* pBuffer = ReadTextFile(pFile);\n   68  	GLuint handle = glCreateShaderObjectARB(nType);\n   69: 	CheckGLError();\n   70  \n   71  \n   72  	glShaderSource(handle, 1, (const char**)&pBuffer, 0);\n   73: 	CheckGLError();\n   74  \n   75  	DumpGlLog(handle);\n   76  \n   77  	glCompileShader(handle);\n   78: 	CheckGLError();\n   79  \n   80  \n   81: 	CheckGLError();\n   82  \n   83  	free(pBuffer);\n   ..\n  145  	{\n  146  		GLuint prg = glCreateProgramObjectARB();\n  147: 		CheckGLError();\n  148  		glAttachObjectARB(prg, g_ShaderState.PS[ps]);\n  149  		glAttachObjectARB(prg, g_ShaderState.VS[vs]);\n  150: 		CheckGLError();\n  151  		glLinkProgramARB(prg);\n  152  		g_ShaderState.LinkedPrograms[nIndex] = prg;\n  ...\n  154  	}\n  155  	//use\n  156: 	CheckGLError();\n  157  	glUseProgramObjectARB(g_ShaderState.LinkedPrograms[nIndex]);\n  158: 	CheckGLError();\n  159  	glUseProgramObjectARB(0);\n  160  \n\n15 matches across 5 files\n\n\nSearching 849 files for \"CheckGlError\"\n\n~/screenbsp/bsp:\n    <binary>\n\n/Users/jonasm/screenbsp/glinc.h:\n    6  \n    7  \n    8: void CheckGLError();\n    9  \n   10  \n\n/Users/jonasm/screenbsp/main.cpp:\n   22  uint32_t g_lShowDebugText = 1;\n   23  \n   24: void CheckGLError()\n   25  {\n   26  	GLenum errCode;\n   ..\n  164  	while(!g_nQuit)\n  165  	{\n  166: 		CheckGLError();\n  167  \n  168  		InputClear();\n\n/Users/jonasm/screenbsp/program.cpp:\n  560  	glLoadMatrixf(&g_WorldState.Camera.mview.x.x);\n  561  	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n  562: 	CheckGLError();\n  563  	WorldRender();\n  564  	DebugRender();\n\n/Users/jonasm/screenbsp/program.cpp.orig:\n  551  	glLoadMatrixf(&g_WorldState.Camera.mview.x.x);\n  552  	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n  553: 	CheckGLError();\n  554  	WorldRender();\n  555  	DebugRender();\n  ...\n  598  //         // we bind it to an image unit as well\n  599  //         //glBindImageTexture(0, texHandle, 0, GL_FALSE, 0, GL_WRITE_ONLY, GL_R32F);\n  600: //         CheckGLError();     \n  601  //         return texHandle;\n  602  // }\n  ...\n  661  //     glUniform1i(glGetUniformLocation(progHandle, \"destTex\"), 0);\n  662  \n  663: //     CheckGLError();\n  664  //     return progHandle;\n  665  // }\n\n/Users/jonasm/screenbsp/shader.cpp:\n   67  	char* pBuffer = ReadTextFile(pFile);\n   68  	GLuint handle = glCreateShaderObjectARB(nType);\n   69: 	CheckGLError();\n   70  \n   71  \n   72  	glShaderSource(handle, 1, (const char**)&pBuffer, 0);\n   73: 	CheckGLError();\n   74  \n   75  	DumpGlLog(handle);\n   76  \n   77  	glCompileShader(handle);\n   78: 	CheckGLError();\n   79  \n   80  \n   81: 	CheckGLError();\n   82  \n   83  	free(pBuffer);\n   ..\n  145  	{\n  146  		GLuint prg = glCreateProgramObjectARB();\n  147: 		CheckGLError();\n  148  		glAttachObjectARB(prg, g_ShaderState.PS[ps]);\n  149  		glAttachObjectARB(prg, g_ShaderState.VS[vs]);\n  150: 		CheckGLError();\n  151  		glLinkProgramARB(prg);\n  152  		g_ShaderState.LinkedPrograms[nIndex] = prg;\n  ...\n  154  	}\n  155  	//use\n  156: 	CheckGLError();\n  157  	glUseProgramObjectARB(g_ShaderState.LinkedPrograms[nIndex]);\n  158: 	CheckGLError();\n  159  	glUseProgramObjectARB(0);\n  160  \n\n18 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 241366,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "program.cpp",
			"settings":
			{
				"buffer_size": 15414,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh.h",
			"settings":
			{
				"buffer_size": 786,
				"line_ending": "Unix",
				"name": "#pragma once"
			}
		},
		{
			"file": "mesh.cpp",
			"settings":
			{
				"buffer_size": 9213,
				"line_ending": "Unix",
				"name": "#include \"mesh.h\""
			}
		},
		{
			"contents": "steam 105\namazon 32\nhumble 90\napple+steam 65\n162\n75\nsteam 188\n62\n\n1437\n1527",
			"settings":
			{
				"buffer_size": 75,
				"line_ending": "Unix",
				"name": "steam 105"
			}
		},
		{
			"file": "shader.h",
			"settings":
			{
				"buffer_size": 302,
				"line_ending": "Unix",
				"name": "#pragma once"
			}
		},
		{
			"file": "shader.cpp",
			"settings":
			{
				"buffer_size": 2624,
				"line_ending": "Unix",
				"name": "#inculde \"shader.h\""
			}
		},
		{
			"file": "flat.ps",
			"settings":
			{
				"buffer_size": 117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "default.vs",
			"settings":
			{
				"buffer_size": 510,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "(SOccluderBspViewDesc) $4 = {\n  (v3) vOrigin = [3.72391, 0.204918, 4.49581]		(0x00007f92543bfbf0)\n  (v3) vDirection = [-0.219829, -0.212178, -0.952184]		(0x00007f92543bfbfc)\n  (v3) vRight = [0.97437, 0, -0.224951]		(0x00007f92543bfc08)\n  (float) fFovY = 45\n  (float) fAspect = 0.5625\n}\n\n\nSOccluderBspViewDesc) $5 = {\n  (v3) vOrigin = [3.72391, 0.204918, 4.49581]		(0x00007f92543be3f0)\n  (v3) vDirection = [-0.219829, -0.212178, -0.952184]		(0x00007f92543be3fc)\n  (v3) vRight = [-0.219829, -0.212178, -0.952184]		(0x00007f92543be408)\n  (float) fFovY = 45\n  (float) fAspect = 0.5625\n}",
			"settings":
			{
				"buffer_size": 582,
				"line_ending": "Unix",
				"name": "(SOccluderBspViewDesc) $4 = {"
			}
		},
		{
			"file": "glew/glew-1.9.0/include/GL/glew.h",
			"settings":
			{
				"buffer_size": 884678,
				"line_ending": "Windows"
			}
		},
		{
			"file": "manipulator.h",
			"settings":
			{
				"buffer_size": 877,
				"line_ending": "Unix",
				"name": "#pragma once"
			}
		},
		{
			"file": "fwd.h",
			"settings":
			{
				"buffer_size": 71,
				"line_ending": "Unix"
			}
		},
		{
			"file": "manipulator.cpp",
			"settings":
			{
				"buffer_size": 2516,
				"line_ending": "Unix",
				"name": "#include \"manipulator.h\""
			}
		},
		{
			"contents": "#pragma once\n\n\n\nvoid CreateMesh(",
			"settings":
			{
				"buffer_size": 32,
				"line_ending": "Unix",
				"name": "#pragma once"
			}
		},
		{
			"file": ".hgignore",
			"settings":
			{
				"buffer_size": 18,
				"line_ending": "Unix",
				"name": ".depend"
			}
		},
		{
			"file": "program.h",
			"settings":
			{
				"buffer_size": 1333,
				"line_ending": "Unix",
				"name": "#pragma once"
			}
		},
		{
			"contents": "                                                                     \n                                                                     \n                                                                     \n                                             \n\n\n\n\n\n\n#define OCCLUDER_EMPTY (0xc000)\n#define OCCLUDER_LEAF (0x8000)\n#define OCCLUDER_CLIP_MAX 0x100\n\nstruct SOccluderPlane\n{\n	float4 p[4];\n	float4 corners[4];\n	float4 normal;\n};\n\nstruct SOccluderEdgeIndex\n{\n	uint8 	nEdge;//[0-3] edge idx\n	uint16 	nOccluderIndex;\n};\n\nstruct SOccluderBspNode\n{\n	SOccluderEdgeIndex Index;\n	uint16	nInside;\n	uint16	nOutside;\n};\n\nstruct SOccluderBsp\n{\n	SOccluderPlane* pOccluders;\n	uint32 nNumOccluders;\n	TArray<SOccluderBspNode> Nodes;\n};\n\nint BspAddInternal(SOccluderBsp* pBsp, uint32 nOccluderIndex, uint32 nMask)\n{\n	int r = (int)pBsp->Nodes.Size();\n	int nPrev = -1;\n	for(uint32 i = 0;nMask && i < 4; ++i)\n	{\n		if(nMask&1)\n		{\n			int nIndex = (int)pBsp->Nodes.Size();\n			SOccluderBspNode* pNode = pBsp->Nodes.PushBack();\n			pNode->nOutside = OCCLUDER_EMPTY;\n			pNode->nInside = OCCLUDER_LEAF;\n			pNode->Index.nEdge = (uint8)i;\n			pNode->Index.nOccluderIndex = (uint16)nOccluderIndex;\n			if(nPrev >= 0)\n			{\n				pBsp->Nodes[nPrev].nInside = (uint16)nIndex;\n			}\n			nPrev = nIndex;\n		}\n		nMask >>= 1;\n	}\n	return r;\n}\n\nvoid BspAddOccluderRecursive(SOccluderBsp* pBsp, SOccluderPlane* pOccluder, uint32 nOccluderIndex, uint32 nBspIndex, uint32 nEdgeMask)\n{\n	SOccluderBspNode Node = pBsp->Nodes[nBspIndex];\n	ZASSERT(Node.Index.nOccluderIndex != nOccluderIndex);\n	SOccluderPlane* pPlane = pBsp->pOccluders + Node.Index.nOccluderIndex;\n	uint8 nEdge = Node.Index.nEdge;\n	float4 vPlane = pPlane->p[nEdge];\n	int inside[4];\n\n	for(int i = 0; i < 4; ++i)\n		inside[i] = WVectorDot4(vPlane, pOccluder->corners[i]) < -0.01f;\n	uint32 nNewMaskIn = 0, nNewMaskOut = 0;\n	int x = 1;\n	for(int i = 0; i < 4; ++i)\n	{\n		if(x&nEdgeMask)\n		{\n			if(inside[(i-1)%4] || inside[i])\n				nNewMaskIn |= x;\n			if((!inside[(i-1)%4]) || (!inside[i]))\n				nNewMaskOut |= x;\n		}\n		x <<= 1;\n	}\n	if(nNewMaskIn)\n	{\n		ZASSERT(Node.nInside != OCCLUDER_EMPTY);\n		if(Node.nInside==OCCLUDER_LEAF)\n		{\n			pBsp->Nodes[nBspIndex].nInside = (uint16)BspAddInternal(pBsp, nOccluderIndex, nNewMaskIn);\n		}\n		else\n		{\n			BspAddOccluderRecursive(pBsp, pOccluder, nOccluderIndex, Node.nInside, nNewMaskIn);\n		}\n	}\n\n	if(nNewMaskOut)\n	{\n		ZASSERT(Node.nOutside != OCCLUDER_LEAF);\n		if(Node.nOutside==OCCLUDER_EMPTY)\n		{\n			pBsp->Nodes[nBspIndex].nOutside = (uint16)BspAddInternal(pBsp, nOccluderIndex, nNewMaskOut);\n		}\n		else\n		{\n			BspAddOccluderRecursive(pBsp, pOccluder, nOccluderIndex, Node.nOutside, nNewMaskOut);\n		}\n	}\n}\n\n\nvoid BspAddOccluder(SOccluderBsp* pBsp, SOccluderPlane* pOccluder, uint32 nOccluderIndex)\n{\n	uint32 nNumNodes = (uint32)pBsp->Nodes.Size();\n	if(pBsp->Nodes.IsEmpty())\n	{\n		uint16 nIndex = (uint16)BspAddInternal(pBsp, nOccluderIndex, 0xf);\n		ZASSERT(nIndex==0);\n	}\n	else\n	{\n		BspAddOccluderRecursive(pBsp, pOccluder, nOccluderIndex, 0, 0xf);\n	}\n	uprintf(\"BSP NODE %d -> %d\\n\", nNumNodes, pBsp->Nodes.Size());\n	uplotfnxt(ZString::Format(\"BSP NODE {0} -> {1}\", nNumNodes, pBsp->Nodes.Size()));\n\n}\n\n\nvoid BuildBsp(SOccluderBsp* pBsp)\n {\n	pBsp->Nodes.Clear();\n	if(!pBsp->nNumOccluders)\n		return;\n\n	for(uint32 i = 0; i < pBsp->nNumOccluders; ++i)\n	{\n		BspAddOccluder(pBsp, &pBsp->pOccluders[i], i);\n	}\n}\nZConfigInt g_nBspFlipMask(\"BspFlipMask\", \"\", 0);\nZConfigInt g_nBspDrawMask(\"BspDrawMask\", \"\", -1);\nvoid DrawBspRecursive(SOccluderBsp* pBsp, uint32 nOccluderIndex, uint32 nFlipMask, uint32 nDrawMask, float fOffset, TArray<float4>& DEBUG)\n{\n	SOccluderBspNode Node = pBsp->Nodes[nOccluderIndex];\n	SOccluderPlane* pPlane = pBsp->pOccluders + Node.Index.nOccluderIndex;\n	float4 vOffset = WSet(fOffset, 0.f, 0.f, 0.f);\n	float4 v0 = WSetWOne(pPlane->corners[(Node.Index.nEdge+3) %4]);\n	float4 v1 = WSetWOne(pPlane->corners[(Node.Index.nEdge) %4]);\n	DEBUG.PushBack(v0);\n	DEBUG.PushBack(v1);\n	if(1)\n	{\n		for(uint32 i = 0; i < DEBUG.Size(); i += 2)\n		{\n			float4 v0 = DEBUG[i] + vOffset;\n			float4 v1 = DEBUG[i+1] + vOffset;\n			ZDEBUG_DRAWLINE(v0, v1, 0xffff44ff, true);\n		}\n	}\n	if(0 == (nFlipMask&1))\n	{\n		if((Node.nInside&0x8000) == 0)\n		{\n			DrawBspRecursive(pBsp, Node.nInside, nFlipMask>>1, nDrawMask>>1, fOffset - 2.0f, DEBUG);\n		}\n	}\n	else\n	{\n		if((Node.nOutside&0x8000) == 0)\n		{\n			DrawBspRecursive(pBsp, Node.nOutside, nFlipMask>>1, nDrawMask>>1, fOffset - 2.0f, DEBUG);\n		}\n	}\n}\n\nbool BspClipQuadR(SOccluderBsp* pBsp, uint32 nNodeIndex, uint32 nPolyIndex, uint32 nPolyVertices, uint32 nVertexIndex, float4* pVertices, uint8* , nIndices);)\n{\n	uint8 nIndicesIn[256];\n	uint8 nIndicesOut[256];\n	uint8* nDot = alloca(2*(nPolyVertices+2));\n	SOccluderBspNode* pNode = pBsp->Nodes[nOccluderIndex];\n	SOccluderPlane* pOccluder = pBsp->pOccluders + pNode->Index.nOccluderIndex;\n	uint32 nEdge = pNode->Index.nEdge;\n	float4 vPlane = pOccluder->p[nEdge];\n	float vNormalPlane = pOccluder->normal;\n	\n#define INSIDE 1\n#define OUTSIDE 2\n	//test mod planet\n	int nMask = 0;\n	int n = 1;\n	for(uint32 i = 0; i < nPolyVertices; ++i)\n	{\n		float4 pVertex = pVertices[ nIndices[i + nPolyIndex ]];\n		d = WVectorDot4(pVertex, vPlane) > 0.0f ? INSIDE : OUTSIDE;\n		n = n && WVectorDot4(pVertex, vNormalPlane) > 0.f ? 1 : 0;\n		nDot[i] = d;\n		nMask |= d;\n	}\n	if(d == 3)\n	{\n		int nIndexIn = 0;\n		for(uint32 i = 0; i < nPolyVertices; ++i)\n		{\n			int idxn = (i + 1) % nPolyVertices;\n			int i0 = nDot[i];\n			int i1 = nDot[idxn];\n			if(INSIDE == i0)\n			{\n				//PUSH i0				\n				ZASSERT(nNewPolyIndex < OCCLUDER_CLIP_MAX);\n				if(OUTSIDE == i1)\n				{\n\n					//PUSH INTERSECTION\n					float4 vVertex = WSetWOne(pVertices[ nIndices[ i + nPolyIndex ]]);\n					float4 vToPlane = WVectorDot4(vVertex, vPlane) * WSetWZero(vPlane);\n					float4 vIntersection = vVertex + vToPlane;\n					uprintf(\"INTERSECTION IS %f\\n\", WVectorDot4(vIntersection, vPlane).ToFloat());\n					int nIndex = nVertexIndex++;\n					pVertices[nIndex] = vIntersection;\n\n					nIndicesIn[nIndexIn++] = i + nPolyIndex;\n					nIndicesIn[nIndexIn++] = nIndex;\n					nIndicesOut[nIndexOut++] = nIndex;\n					ZASSERT(nIndexIn < 256);\n				}\n				else\n				{\n					nIndicesIn[nIndexIn++] = i + nPolyIndex;\n				}\n			}\n			else\n			{\n				if(i1 == INSIDE)\n				{\n					//PUSH INTERSECTION\n					float4 vVertex = WSetWOne(pVertices[ nIndices[ i + nPolyIndex ]]);\n					float4 vToPlane = WVectorDot4(vVertex, vPlane) * WSetWZero(vPlane);\n					float4 vIntersection = vVertex + vToPlane;\n					uprintf(\"INTERSECTION IS %f\\n\", WVectorDot4(vIntersection, vPlane).ToFloat());\n					int nIndex = nVertexIndex++;\n					pVertices[nIndex] = vIntersection;\n\n					nIndicesIn[nIndexIn++] = nIndex;\n					nIndicesOut[nIndexOut++] = nIndex;\n					nIndicesOut[nIndexOut++] = i + nPolyIndex;\n					ZASSERT(nNewPolyIndex < OCCLUDER_CLIP_MAX);\n				}\n				else\n				{\n					nIndicesOut[nIndexOut++] = i + nPolyIndex;\n				}\n			}\n		}\n		int nNumIndices = nNewPolyIndex - (nPolyIndex + nPolyVertices);\n		return BspClipQuadR(pBsp, pNode->nInside, nNewPolyIndex, nNumIndices, nVertexIndex, pVertices, nIndices);\n	}\n	else\n	{\n		if(d == 1)\n		{\n			// all in inside\n			ZASSERT(pNode->nInside != OCCLUDER_EMPTY);\n			if(pNode->nInside == OCCLUDER_LEAF)\n			{\n				return n != 0;\n			}\n			else\n			{\n				return n != 0 && BspClipQuadR(pBsp, pBsp->nInside, nPolyIndex, nPolyVertices, nVertexIndex, pVertices, nIndices);\n\n			}\n\n		}\n		else\n		{\n			// all in outside\n			ZASSERT(pNode->nOutside != OCCLUDER_LEAF);\n			if(pNode->nOutside == OCCLUDER_EMPTY)\n			{\n				ZASSERT(nPolyVertices); \n				return false; // all is out, none is clipped\n			}\n			else\n			{\n				return BspClipQuadR(pBsp, pNode->nOutside, nPolyIndex, nPolyVertices, nVertexIndex, pVertices, nIndices);\n			}\n		}\n	}\n}\n//returns true if 100% clipped\nbool BspClipQuad(SOccluderBsp* pBsp, float4arg v0, float4arg v1, float4arg v2, float4arg v3)\n{\n	float4 vClipBuffer[OCCLUDER_CLIP_MAX];\n	uint8 nInidices[OCCLUDER_CLIP_MAX];\n	vClipBuffer[0] = v0;\n	vClipBuffer[1] = v1;\n	vClipBuffer[2] = v2;\n	vClipBuffer[3] = v3;\n	nInidices[0] = 0;\n	nInidices[1] = 1;\n	nInidices[2] = 2;\n	nInidices[3] = 3;\n	return BspClipQuadR(pBsp, 0, 0, 4, 4, &vClipBuffer[0], &nIndices[0]);\n}\n\nvoid RunBspTest(SOccluderBsp* pBsp, SOccluderPlane* pTest, uint32 nNumOccluders, ZRenderGraphNode** ppNodes, uint32 nNumNodes)\n{\n	for(uint32 i = 0; i< nNumNodes; ++i)\n	{\n		if(!ppNodes[i]) \n			continue;\n		SMatrix mObjectToWorld = ppNodes[i]->GetObjectToWorldTransform();\n		float4 vHalfSize = ppNodes[i]->GetLocalHalfSize();\n		float4 vCenter = ppNodes[i]->GetLocalCenter();\n		float4 vCenterWorld = WVectorTransform(mObjectToWorld, vCenter);\n		float4 AABB = TransformOBBToAABB(mObjectToWorld, vHalfSize);\n\n		float4 vCenterPoly = vCenterWorld - WSet(AABB.x(), 0.f, 0.f, 0.f);\n		float4 vDir0 = WSet(0.f,  AABB.y(),  AABB.z(), 0.f);\n		float4 vDir1 = WSet(0.f, -AABB.y(),  AABB.z(), 0.f);\n		float4 vDir2 = WSet(0.f, -AABB.y(), -AABB.z(), 0.f);\n		float4 vDir3 = WSet(0.f,  AABB.y(), -AABB.z(), 0.f);\n		float4 v0 = vCenterPoly + vDir0;\n		float4 v1 = vCenterPoly + vDir1;\n		float4 v2 = vCenterPoly + vDir2;\n		float4 v3 = vCenterPoly + vDir3;\n		ZDEBUG_DRAWLINE(v0, v1, 0xff0000ff, true);\n		ZDEBUG_DRAWLINE(v1, v2, 0xff0000ff, true);\n		ZDEBUG_DRAWLINE(v2, v3, 0xff0000ff, true);\n		ZDEBUG_DRAWLINE(v3, v0, 0xff0000ff, true);\n		BspClipQuad(pBsp, v0, v1, v2, v3);\n	}\n	TArray<float4> DEBUG;\n	DrawBspRecursive(pBsp, 0, g_nBspFlipMask, g_nBspDrawMask, -1.f, DEBUG);\n}\n\nfloat4 MakePlane(float4arg p, float4arg normal)\n{\n	float4 r = WSetW(-(WVectorDot3(normal,p).ToFloat()), normal);\n	float1 vDot = WVectorDot4(WSetW(1.f, p), r);\n	if(ZMath::Abs(vDot.ToFloat()) > 0.001f)\n	{\n		ZBREAK();\n	}\n\n	return r;\n}\n\nvoid BspOccluderTest(SOccluder* pOccluders, uint32 nNumOccluders, ZRenderGraphNode** ppNodes, uint32 nNumNodes)\n{\n	SOccluderPlane* pPlanes = ZNEW SOccluderPlane[nNumOccluders];\n	uint8* nMasks = ZNEW uint8[nNumOccluders];\n	memset(nMasks, 0xff, nNumOccluders);\n\n\n	float4 vCameraPosition = WLoadZero();\n	for(uint32 i = 0; i < nNumOccluders; ++i)\n	{\n		float4 vCorners[4];\n		SOccluder Occ = pOccluders[i];\n		float4 vNormal = WLoad3U(&Occ.vNormal.x);\n		float4 vUp = WLoad3U(&Occ.vUp.x);\n		float4 vLeft = WVectorCross3(vNormal, vUp);\n		float4 vCenter = WLoad3U(&Occ.vCenter.x);\n		vCorners[0] = vCenter + vUp * Occ.vSize.y + vLeft * Occ.vSize.x;\n		vCorners[1] = vCenter - vUp * Occ.vSize.y + vLeft * Occ.vSize.x;\n		vCorners[2] = vCenter - vUp * Occ.vSize.y - vLeft * Occ.vSize.x;\n		vCorners[3] = vCenter + vUp * Occ.vSize.y - vLeft * Occ.vSize.x;\n		SOccluderPlane& Plane = pPlanes[i];\n\n		for(uint32 i = 0; i < 4; ++i)\n		{\n			float4 v0 = vCorners[i];\n			float4 v1 = vCorners[(i+1) % 4];\n			float4 v2 = vCameraPosition;\n			float4 vCenter = (v0 + v1 + v2) / WReplicate(3.f);\n			float4 vNormal = WVectorNormalize3(WVectorCross3(WVectorNormalize3(v1 - v0), WVectorNormalize3(v2 - v0)));\n			float4 vEnd = vCenter + vNormal;\n			Plane.p[i] = MakePlane(vCorners[i], vNormal);\n			Plane.corners[i] = vCorners[i];\n			ZDEBUG_DRAWLINE(v0, v1, (uint32)-1, true);\n			ZDEBUG_DRAWLINE(v1, v2, (uint32)-1, true);\n			ZDEBUG_DRAWLINE(v2, v0, (uint32)-1, true);\n			ZDEBUG_DRAWLINE(vCenter, vEnd, 0xff00ffff, true);\n		}\n		Plane.normal = MakePlane(vCorners[0], vNormal);\n	}\n	SOccluderBsp Bsp;\n	Bsp.pOccluders = pPlanes;\n	Bsp.nNumOccluders = nNumOccluders;\n\n	BuildBsp(&Bsp);\n\n	RunBspTest(&Bsp, pPlanes, nNumOccluders, ppNodes, nNumNodes);\n\n	ZDELETE(pPlanes);\n}\n\n\n",
			"settings":
			{
				"buffer_size": 11336,
				"line_ending": "Unix"
			}
		},
		{
			"file": "math.h",
			"settings":
			{
				"buffer_size": 7669,
				"line_ending": "Windows"
			}
		},
		{
			"file": "math.cpp",
			"settings":
			{
				"buffer_size": 24242,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
			"settings":
			{
				"buffer_size": 121,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
			"settings":
			{
				"buffer_size": 189,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 878,
				"line_ending": "Unix"
			}
		},
		{
			"file": "glinc.h",
			"settings":
			{
				"buffer_size": 104,
				"line_ending": "Unix"
			}
		},
		{
			"file": "input.h",
			"settings":
			{
				"buffer_size": 984,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bsp.cpp",
			"settings":
			{
				"buffer_size": 28143,
				"line_ending": "Windows"
			}
		},
		{
			"file": "In file included from bsp.cpp",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "In file included from /usr/include/c++/4.2.1/algorithm",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/include/c++/4.2.1/bits/stl_algo.h",
			"settings":
			{
				"buffer_size": 186131,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "(x1 z0 - x2 z0 - x0 z1 + x2 z1 + x0 z2 - x1 z2 != 0 && \nx == (-(f1 z0) + f2 z0 - y1 z0 + y2 z0 + f0 z1 - f2 z1 + y0 z1 - y2 z1 - f0 z2 + f1 z2 - y0 z2 + y1 z2)/(x1 z0 - x2 z0 - x0 z1 + x2 z1 + x0 z2 - x1 z2) \n&& z0 - z2 != 0 && \ny == (f2 x1 z0 - f1 x2 z0 - x2 y1 z0 + x1 y2 z0 - f2 x0 z1 + f0 x2 z1 + x2 y0 z1 - x0 y2 z1 + f1 x0 z2 - f0 x1 z2 - x1 y0 z2 + x0 y1 z2)\n/(-(x1 z0) + x2 z0 + x0 z1 - x2 z1 - x0 z2 + x1 z2) \n&& z0 != 0 && z == (f1 x0 - f2 x0 - f0 x1 + f2 x1 + f0 x2 - f1 x2 - x1 y0 + x2 y0 + x0 y1 - x2 y1 - x0 y2 + x1 y2)/(x1 z0 - x2 z0 - x0 z1 + x2 z1 + x0 z2 - x1 z2)) || (z0 == 0 && x0 z1 - x2 z1 - x0 z2 + x1 z2 != 0 && x == (-(f0 z1) + f2 z1 - y0 z1 + y2 z1 + f0 z2 - f1 z2 + y0 z2 - y1 z2)/(x0 z1 - x2 z1 - x0 z2 + x1 z2) && y == (-(f2 x0 z1) + f0 x2 z1 + x2 y0 z1 - x0 y2 z1 + f1 x0 z2 - f0 x1 z2 - x1 y0 z2 + x0 y1 z2)/(x0 z1 - x2 z1 - x0 z2 + x1 z2) && z1 != 0 && z == (-(f1 x0) + f2 x0 + f0 x1 - f2 x1 - f0 x2 + f1 x2 + x1 y0 - x2 y0 - x0 y1 + x2 y1 + x0 y2 - x1 y2)/(x0 z1 - x2 z1 - x0 z2 + x1 z2) && z2 != 0) || (z0 == z2 && x0 - x2 != 0 && x == (-f0 + f2 - y0 + y2)/(x0 - x2) && z1 - z2 != 0 && y == (-(f2 x0 z1) + f0 x2 z1 + x2 y0 z1 - x0 y2 z1 + f1 x0 z2 - f0 x1 z2 + f2 x1 z2 - f1 x2 z2 - x1 y0 z2 + x0 y1 z2 - x2 y1 z2 + x1 y2 z2)/((x0 - x2) (z1 - z2)) && z1 != 0 && z == (-(f1 x0) + f2 x0 + f0 x1 - f2 x1 - f0 x2 + f1 x2 + x1 y0 - x2 y0 - x0 y1 + x2 y1 + x0 y2 - x1 y2)/((x0 - x2) (z1 - z2))) || (z1 == 0 && z0 == 0 && x0 - x1 != 0 && x == (-f0 + f1 - y0 + y1)/(x0 - x1) && y == (-(f1 x0) + f0 x1 + x1 y0 - x0 y1)/(x0 - x1) && z2 != 0 && z == (f1 x0 - f2 x0 - f0 x1 + f2 x1 + f0 x2 - f1 x2 - x1 y0 + x2 y0 + x0 y1 - x2 y1 - x0 y2 + x1 y2)/((x0 - x1) z2)) || (z1 == 0 && z0 == z2 && x0 - x2 != 0 && x == (-f0 + f2 - y0 + y2)/(x0 - x2) && y == (-(f1 x0) + f0 x1 - f2 x1 + f1 x2 + x1 y0 - x0 y1 + x2 y1 - x1 y2)/(x0 - x2) && z2 != 0 && z == (f1 x0 - f2 x0 - f0 x1 + f2 x1 + f0 x2 - f1 x2 - x1 y0 + x2 y0 + x0 y1 - x2 y1 - x0 y2 + x1 y2)/((x0 - x2) z2)) || (z1 == z2 && x1 == x2 && f1 == f2 - y1 + y2 && z0 - z2 != 0 && y == (-(f2 z0) - x x2 z0 - y2 z0 + f0 z2 + x x0 z2 + y0 z2)/(z0 - z2) && z0 != 0 && z == (-f0 + f2 - x x0 + x x2 - y0 + y2)/(z0 - z2)) || (z1 == z2 && z0 == 0 && x1 == x2 && f1 == f2 - y1 + y2 && y == -f0 - x x0 - y0 && z2 != 0 && z == (f0 - f2 + x x0 - x x2 + y0 - y2)/z2) || (x1 == x2 && x0 == x2 && z1 - z2 != 0 && f0 == (f1 z0 - f2 z0 + y1 z0 - y2 z0 + f2 z1 - y0 z1 + y2 z1 - f1 z2 + y0 z2 - y1 z2)/(z1 - z2) && z0 - z2 != 0 && y == (f2 z1 + x x2 z1 + y2 z1 - f1 z2 - x x2 z2 - y1 z2)/(-z1 + z2) && z0 != 0 && z == (-f1 + f2 - y1 + y2)/(z1 - z2)) || (z0 == z2 && x0 == x2 && f0 == f2 - y0 + y2 && z1 - z2 != 0 && y == (-(f2 z1) - x x2 z1 - y2 z1 + f1 z2 + x x1 z2 + y1 z2)/(z1 - z2) && z1 != 0 && z == (-f1 + f2 - x x1 + x x2 - y1 + y2)/(z1 - z2) && x1 - x2 != 0) || (z0 == z2 && x1 == x2 && x0 == x2 && f0 == f2 - y0 + y2 && z1 - z2 != 0 && y == (-(f2 z1) - x x2 z1 - y2 z1 + f1 z2 + x x2 z2 + y1 z2)/(z1 - z2) && z1 != 0 && z == (-f1 + f2 - y1 + y2)/(z1 - z2)) || (z1 == 0 && z0 == 0 && x0 == x1 && f0 == f1 - y0 + y1 && y == -f1 - x x1 - y1 && z2 != 0 && z == (f1 - f2 + x x1 - x x2 + y1 - y2)/z2 && x1 - x2 != 0) || (z1 == 0 && z0 == 0 && x1 == x2 && x0 == x2 && f0 == f1 - y0 + y1 && y == -f1 - x x2 - y1 && z2 != 0 && z == (f1 - f2 + y1 - y2)/z2) || (z1 == 0 && z0 == z2 && x0 == x2 && f0 == f2 - y0 + y2 && y == -f1 - x x1 - y1 && z2 != 0 && z == (f1 - f2 + x x1 - x x2 + y1 - y2)/z2 && x1 - x2 != 0) || (z1 == 0 && z0 == z2 && x1 == x2 && x0 == x2 && f0 == f2 - y0 + y2 && y == -f1 - x x2 - y1 && z2 != 0 && z == (f1 - f2 + y1 - y2)/z2) || (z1 == z2 && z0 == z2 && x0 == x2 && f0 == f2 - y0 + y2 && x1 - x2 != 0 && x == (-f1 + f2 - y1 + y2)/(x1 - x2) && z2 != 0 && z == (-(f2 x1) + f1 x2 - x1 y + x2 y + x2 y1 - x1 y2)/((x1 - x2) z2)) || (z1 == z2 && z0 == z2 && x1 == x2 && f1 == f2 - y1 + y2 && x0 - x2 != 0 && x == (-f0 + f2 - y0 + y2)/(x0 - x2) && z2 != 0 && z == (-(f2 x0) + f0 x2 - x0 y + x2 y + x2 y0 - x0 y2)/((x0 - x2) z2)) || (z1 == z2 && z0 == z2 && x1 == x2 && x0 == x2 && f1 == f2 - y1 + y2 && f0 == f2 - y0 + y2 && z2 != 0 && z == (-f2 - x x2 - y - y2)/z2) || (z1 == z2 && z0 == z2 && x1 - x2 != 0 && f0 == (f1 x0 - f2 x0 + f2 x1 - f1 x2 - x1 y0 + x2 y0 + x0 y1 - x2 y1 - x0 y2 + x1 y2)/(x1 - x2) && x0 - x2 != 0 && x == (f1 - f2 + y1 - y2)/(-x1 + x2) && z2 != 0 && z == (f2 x1 - f1 x2 + x1 y - x2 y - x2 y1 + x1 y2)/((-x1 + x2) z2)) || (z2 == 0 && z1 == 0 && z0 == 0 && x0 == x2 && f0 == f2 - y0 + y2 && x1 - x2 != 0 && x == (-f1 + f2 - y1 + y2)/(x1 - x2) && y == (-(f2 x1) + f1 x2 + x2 y1 - x1 y2)/(x1 - x2)) || (z2 == 0 && z1 == 0 && z0 == 0 && x1 == x2 && f1 == f2 - y1 + y2 && x0 - x2 != 0 && x == (-f0 + f2 - y0 + y2)/(x0 - x2) && y == (-(f2 x0) + f0 x2 + x2 y0 - x0 y2)/(x0 - x2)) || (z2 == 0 && z1 == 0 && z0 == 0 && x1 == x2 && x0 == x2 && f1 == f2 - y1 + y2 && f0 == f2 - y0 + y2 && y == -f2 - x x2 - y2) || (z2 == 0 && z1 == 0 && z0 == 0 && x1 - x2 != 0 && f0 == (f1 x0 - f2 x0 + f2 x1 - f1 x2 - x1 y0 + x2 y0 + x0 y1 - x2 y1 - x0 y2 + x1 y2)/(x1 - x2) && x0 - x2 != 0 && x == (f1 - f2 + y1 - y2)/(-x1 + x2) && y == (f2 x1 - f1 x2 - x2 y1 + x1 y2)/(-x1 + x2)) || (z1 - z2 != 0 && x0 == (x1 z0 - x2 z0 + x2 z1 - x1 z2)/(z1 - z2) && x1 - x2 != 0 && f0 == (f1 z0 - f2 z0 + y1 z0 - y2 z0 + f2 z1 - y0 z1 + y2 z1 - f1 z2 + y0 z2 - y1 z2)/(z1 - z2) && z0 - z2 != 0 && y == (f2 z1 + x x2 z1 + y2 z1 - f1 z2 - x x1 z2 - y1 z2)/(-z1 + z2) && z0 != 0 && z == (-f1 + f2 - x x1 + x x2 - y1 + y2)/(z1 - z2)) || (z0 == 0 && x1 == x2 && x0 == x2 && z1 - z2 != 0 && f0 == (f2 z1 - y0 z1 + y2 z1 - f1 z2 + y0 z2 - y1 z2)/(z1 - z2) && y == (-(f2 z1) - x x2 z1 - y2 z1 + f1 z2 + x x2 z2 + y1 z2)/(z1 - z2) && z1 != 0 && z == (-f1 + f2 - y1 + y2)/(z1 - z2) && z2 != 0) || (z0 == 0 && z1 - z2 != 0 && x0 == (x2 z1 - x1 z2)/(z1 - z2) && x1 - x2 != 0 && f0 == (f2 z1 - y0 z1 + y2 z1 - f1 z2 + y0 z2 - y1 z2)/(z1 - z2) && y == (-(f2 z1) - x x2 z1 - y2 z1 + f1 z2 + x x1 z2 + y1 z2)/(z1 - z2) && z1 != 0 && z == (-f1 + f2 - x x1 + x x2 - y1 + y2)/(z1 - z2) && z2 != 0)",
			"settings":
			{
				"buffer_size": 6027,
				"line_ending": "Unix",
				"name": "(x1 z0 - x2 z0 - x0 z1 + x2 z1 + x0 z2 - x1 z2 !="
			}
		},
		{
			"contents": "D0x0000: plane  0: 0   [i:0001,o:000d]\nD   0x0001: plane  0: 1   [i:0002,o:000a]\n\n\nD      0x0002: plane  0: 2   [i:0003,o:0008]\nD         0x0003: plane  0: 3   [i:0004,o:0006]\nD            0x0004: plane  1: 0   [i:0005,o:c000]\nD               0x0005: plane  1: 1   [i:8000,o:c000]\nD                  0x8000\nD                  0xc000\nD               0xc000\nD            0x0006: plane  1: 0   [i:0007,o:c000]\nD               0x0007: plane  1: 1   [i:8000,o:c000]\nD                  0x8000\nD                  0xc000\nD               0xc000\nD         0x0008: plane  1: 1   [i:0009,o:c000]\nD            0x0009: plane  1: 3   [i:8000,o:c000]\nD               0x8000\nD               0xc000\nD            0xc000\nD      0x000a: plane  1: 1   [i:000b,o:c000]\nD         0x000b: plane  1: 2   [i:000c,o:c000]\nD            0x000c: plane  1: 3   [i:8000,o:c000]\nD               0x8000\nD               0xc000\nD            0xc000\nD         0xc000\nD   0x000d: plane  1: 0   [i:000e,o:c000]\nD      0x000e: plane  1: 1   [i:000f,o:c000]\nD         0x000f: plane  1: 3   [i:8000,o:c000]\nD            0x8000\nD            0xc000\nD         0xc000\nD      0xc000\n\n",
			"settings":
			{
				"buffer_size": 1135,
				"line_ending": "Unix",
				"name": "D0x0000: plane  0: 0   [i:0001,o:000d]"
			}
		},
		{
			"file": "/Users/jonasm/.lldbinit",
			"settings":
			{
				"buffer_size": 304,
				"line_ending": "Unix",
				"name": "type summary add --summary-string \"[${var.x} ${var"
			}
		},
		{
			"contents": "type summary add --summary-string \"[${var.x}, ${var.y}, ${var.z}]\\t\\t(${var%L})\" v3\n",
			"settings":
			{
				"buffer_size": 84,
				"line_ending": "Unix",
				"name": "type summary add --summary-string \"[${var.x}, ${va"
			}
		},
		{
			"file": "bsp.h",
			"settings":
			{
				"buffer_size": 493,
				"line_ending": "Unix",
				"name": "#pragma once"
			}
		},
		{
			"file": "debug.h",
			"settings":
			{
				"buffer_size": 1090,
				"line_ending": "Unix"
			}
		},
		{
			"file": "input.cpp",
			"settings":
			{
				"buffer_size": 1113,
				"line_ending": "Unix"
			}
		},
		{
			"file": "debug.cpp",
			"settings":
			{
				"buffer_size": 6573,
				"line_ending": "Unix"
			}
		},
		{
			"file": "text.h",
			"settings":
			{
				"buffer_size": 407,
				"line_ending": "Windows"
			}
		},
		{
			"file": "base.h",
			"settings":
			{
				"buffer_size": 1074,
				"line_ending": "Windows"
			}
		},
		{
			"file": "text.cpp",
			"settings":
			{
				"buffer_size": 6389,
				"line_ending": "Windows"
			}
		},
		{
			"file": "fixedarray.h",
			"settings":
			{
				"buffer_size": 2328,
				"line_ending": "Unix"
			}
		},
		{
			"file": "glew.c",
			"settings":
			{
				"buffer_size": 854006,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/mybuild.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/jonasm/screenbsp/basic.vs",
		"/Users/jonasm/screenbsp/[shell_cmd",
		"/Users/jonasm/screenbsp/make",
		"/Users/jonasm/screenbsp/                uplotfnxt(\"FLIP %d==%d\", i, bFlip?1",
		"/Users/jonasm/screenbsp/In file included from shader.cpp",
		"/Users/jonasm/screenbsp/[dir",
		"/Users/jonasm/screenbsp/        SOccluderEdgeIndex* = ECPR_BOTH == CR ? &ClippedPoly[nNumEdgeInd] ",
		"/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/jonasm/screenbsp/bsp",
		"/Users/jonasm/screenbsp/debugdraw.h",
		"/Users/jonasm/screenbsp/debug.h",
		"/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"pWorldObjects",
			"dot",
			"BspCullObjectR",
			"ZDEBUG_DRAWBOX",
			"i",
			"DRAWBOU",
			"DRAWBO",
			"vHalfSize",
			"glPushMatrix",
			"CreateFlatMesh",
			"CreateProgram",
			"pMesh",
			".no",
			"normal",
			"v3",
			".Normal",
			"MESH_",
			"glEnableClientState",
			"].",
			"GLHandleARB",
			"CheckGlError",
			"CheckGLError",
			"LinkedProgram",
			"type",
			"PFNGLCREATESHADERPROGRAMVPROC",
			"Program",
			"PFNGLCREATESHADERPROGRAMVPROC",
			"glCreateShaderProgramv",
			"glCreateShaderProgramvARB",
			"buf",
			"GLEW_ARB_separate_shader_objects",
			"GLEW_ARB_Seperate",
			"GLEW_ARB_S",
			"CreateSphereMesh",
			"Mesh",
			"void uprintf",
			"pQuad",
			"Quad",
			"const",
			"nSubDivs",
			"nVertices",
			"pQuads",
			"pVertices",
			"Normal",
			"pSphereMesh",
			"+4",
			".Normal",
			";",
			"0]",
			"]",
			"(f,",
			"Mesh",
			"GL_DEPTH_TEST",
			"ProgramMain",
			"GL_DEPTH_TEST",
			"Depth",
			"],",
			"BspOccluderDebugDraw",
			"i",
			"pOccluders",
			"i",
			"bFlip",
			"vNormalPlane",
			"bFlip",
			"window_view",
			"setWantsBestResolutionOpenGLSurface",
			"setWantsBestResolutionOpenGLSurface:YES",
			"window_view respondsToSelector:@selector",
			"g_BaseWidth",
			"near is",
			"g_WorldState.Camera.vPosition",
			"fNear",
			"desc",
			"1",
			"zNear",
			"znear",
			"Desc",
			"vOrigin",
			"flip",
			"flipped",
			"3",
			"TESS_FACT",
			"g_nBspDebugPlane",
			"BspDebugDrawHalfspace",
			"nVertices",
			"BspAddInternal",
			"flip",
			"BspAddOccluder",
			"i",
			"Occluders",
			"BspAddOccluder",
			"alias",
			"world",
			"BspAddInternal",
			"BspAddOccluder",
			"vCorners",
			"pPlanes",
			"g_nBspOccluderDrawOccluders",
			"randcolor",
			"g_nBspOccluderDrawEdges",
			"ZDEBUG_DRAWBOX",
			"spaces",
			"BspClipPoly",
			"BspAddOccluderRecursive",
			"BspAddInternal",
			"DEBUG_OFFSET",
			"g_nBspOccluderDebugDrawClipResult",
			"g_nBspOccluderDrawEdges",
			"g_nBspOccluderDebugDraw",
			"g_nBspOccluderDrawEdges",
			"g_nOccluderDebug",
			"g_nBspOccluderDebugDraw",
			"BspOccluderDebugDraw",
			"debugdra",
			"vNormal",
			"v3init(",
			"v3zero",
			"mperspective",
			"g_nUseDebugCameraPos",
			"Desc.vOrigin",
			"mperspective",
			"0r",
			"uplotfnxt",
			"-1",
			"vCamLocked",
			"ffovy",
			"mperspective",
			"bspbuild"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 27,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4465,
						"regions":
						{
						},
						"selection":
						[
							[
								3042,
								3042
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1778.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/jonasm/slasher/sdl/src/video/quartz/SDL_QuartzVideo.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57158,
						"regions":
						{
						},
						"selection":
						[
							[
								48658,
								48658
							]
						],
						"settings":
						{
							"syntax": "Packages/Objective-C/Objective-C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24219.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 241366,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										138,
										144
									],
									[
										480,
										492
									],
									[
										616,
										628
									],
									[
										725,
										737
									],
									[
										1060,
										1070
									],
									[
										1120,
										1130
									],
									[
										1184,
										1194
									],
									[
										1592,
										1602
									],
									[
										1615,
										1625
									],
									[
										1672,
										1682
									],
									[
										1722,
										1732
									],
									[
										1747,
										1757
									],
									[
										1806,
										1816
									],
									[
										1858,
										1868
									],
									[
										1884,
										1894
									],
									[
										1944,
										1954
									],
									[
										2118,
										2128
									],
									[
										2504,
										2514
									],
									[
										2583,
										2593
									],
									[
										2674,
										2684
									],
									[
										3000,
										3010
									],
									[
										3396,
										3406
									],
									[
										3799,
										3809
									],
									[
										3908,
										3918
									],
									[
										4029,
										4039
									],
									[
										4325,
										4335
									],
									[
										4392,
										4402
									],
									[
										4463,
										4473
									],
									[
										4783,
										4793
									],
									[
										4853,
										4863
									],
									[
										4927,
										4937
									],
									[
										5240,
										5250
									],
									[
										5300,
										5310
									],
									[
										5364,
										5374
									],
									[
										5772,
										5782
									],
									[
										5795,
										5805
									],
									[
										5852,
										5862
									],
									[
										5902,
										5912
									],
									[
										5927,
										5937
									],
									[
										5986,
										5996
									],
									[
										6038,
										6048
									],
									[
										6064,
										6074
									],
									[
										6124,
										6134
									],
									[
										6409,
										6419
									],
									[
										6428,
										6438
									],
									[
										6478,
										6488
									],
									[
										6499,
										6509
									],
									[
										6551,
										6561
									],
									[
										6573,
										6583
									],
									[
										6795,
										6798
									],
									[
										6870,
										6873
									],
									[
										6892,
										6895
									],
									[
										6914,
										6917
									],
									[
										6967,
										6970
									],
									[
										7000,
										7003
									],
									[
										7275,
										7278
									],
									[
										7643,
										7646
									],
									[
										7671,
										7674
									],
									[
										7946,
										7949
									],
									[
										7973,
										7976
									],
									[
										8245,
										8248
									],
									[
										8265,
										8268
									],
									[
										8295,
										8298
									],
									[
										8326,
										8329
									],
									[
										8367,
										8370
									],
									[
										8398,
										8401
									],
									[
										8554,
										8557
									],
									[
										8571,
										8574
									],
									[
										8663,
										8666
									],
									[
										8685,
										8688
									],
									[
										8879,
										8882
									],
									[
										8911,
										8914
									],
									[
										9228,
										9231
									],
									[
										9252,
										9255
									],
									[
										9490,
										9493
									],
									[
										9520,
										9523
									],
									[
										9754,
										9757
									],
									[
										9801,
										9804
									],
									[
										10063,
										10066
									],
									[
										10091,
										10094
									],
									[
										10375,
										10378
									],
									[
										10398,
										10401
									],
									[
										10431,
										10434
									],
									[
										10465,
										10468
									],
									[
										10509,
										10512
									],
									[
										10543,
										10546
									],
									[
										10640,
										10643
									],
									[
										10660,
										10663
									],
									[
										10761,
										10764
									],
									[
										10786,
										10789
									],
									[
										10960,
										10963
									],
									[
										10993,
										10996
									],
									[
										11249,
										11252
									],
									[
										11537,
										11540
									],
									[
										11820,
										11823
									],
									[
										12111,
										12114
									],
									[
										12410,
										12413
									],
									[
										12853,
										12856
									],
									[
										12879,
										12882
									],
									[
										12939,
										12942
									],
									[
										13509,
										13512
									],
									[
										13534,
										13537
									],
									[
										13593,
										13596
									],
									[
										13749,
										13752
									],
									[
										13801,
										13804
									],
									[
										14206,
										14209
									],
									[
										14224,
										14227
									],
									[
										14276,
										14279
									],
									[
										14321,
										14324
									],
									[
										14350,
										14353
									],
									[
										14413,
										14416
									],
									[
										14469,
										14472
									],
									[
										14498,
										14501
									],
									[
										14561,
										14564
									],
									[
										14871,
										14874
									],
									[
										14886,
										14889
									],
									[
										14935,
										14938
									],
									[
										15112,
										15115
									],
									[
										15132,
										15135
									],
									[
										15186,
										15189
									],
									[
										15431,
										15434
									],
									[
										15461,
										15464
									],
									[
										15525,
										15528
									],
									[
										16154,
										16157
									],
									[
										16176,
										16179
									],
									[
										16232,
										16235
									],
									[
										16605,
										16608
									],
									[
										16633,
										16636
									],
									[
										16695,
										16698
									],
									[
										16995,
										16998
									],
									[
										17040,
										17043
									],
									[
										17119,
										17122
									],
									[
										17482,
										17485
									],
									[
										17508,
										17511
									],
									[
										17568,
										17571
									],
									[
										17830,
										17833
									],
									[
										17870,
										17873
									],
									[
										18004,
										18007
									],
									[
										18066,
										18069
									],
									[
										18196,
										18199
									],
									[
										18608,
										18611
									],
									[
										18629,
										18632
									],
									[
										18684,
										18687
									],
									[
										18732,
										18735
									],
									[
										18764,
										18767
									],
									[
										18830,
										18833
									],
									[
										18889,
										18892
									],
									[
										18921,
										18924
									],
									[
										18987,
										18990
									],
									[
										19167,
										19170
									],
									[
										19185,
										19188
									],
									[
										19237,
										19240
									],
									[
										19426,
										19429
									],
									[
										19449,
										19452
									],
									[
										19506,
										19509
									],
									[
										19652,
										19655
									],
									[
										19722,
										19725
									],
									[
										19833,
										19836
									],
									[
										19864,
										19867
									],
									[
										19929,
										19932
									],
									[
										20043,
										20046
									],
									[
										20189,
										20192
									],
									[
										20241,
										20244
									],
									[
										20365,
										20368
									],
									[
										20494,
										20497
									],
									[
										20537,
										20540
									],
									[
										20550,
										20553
									],
									[
										20572,
										20575
									],
									[
										20705,
										20708
									],
									[
										20901,
										20904
									],
									[
										21029,
										21032
									],
									[
										21157,
										21160
									],
									[
										21413,
										21416
									],
									[
										21541,
										21544
									],
									[
										21669,
										21672
									],
									[
										21925,
										21928
									],
									[
										22185,
										22188
									],
									[
										22313,
										22316
									],
									[
										22441,
										22444
									],
									[
										22698,
										22701
									],
									[
										22826,
										22829
									],
									[
										23100,
										23103
									],
									[
										23149,
										23152
									],
									[
										23201,
										23204
									],
									[
										23266,
										23269
									],
									[
										23683,
										23686
									],
									[
										23720,
										23723
									],
									[
										23760,
										23763
									],
									[
										23813,
										23816
									],
									[
										24151,
										24154
									],
									[
										24193,
										24196
									],
									[
										24238,
										24241
									],
									[
										24314,
										24317
									],
									[
										24348,
										24351
									],
									[
										24382,
										24385
									],
									[
										24447,
										24450
									],
									[
										24848,
										24851
									],
									[
										24898,
										24901
									],
									[
										24951,
										24954
									],
									[
										25035,
										25038
									],
									[
										25077,
										25080
									],
									[
										25119,
										25122
									],
									[
										25192,
										25195
									],
									[
										25551,
										25554
									],
									[
										25601,
										25604
									],
									[
										25653,
										25656
									],
									[
										25719,
										25722
									],
									[
										25960,
										25963
									],
									[
										26186,
										26189
									],
									[
										26222,
										26225
									],
									[
										26266,
										26269
									],
									[
										26432,
										26435
									],
									[
										26515,
										26518
									],
									[
										26593,
										26596
									],
									[
										26718,
										26721
									],
									[
										26789,
										26792
									],
									[
										26854,
										26857
									],
									[
										26975,
										26978
									],
									[
										27051,
										27054
									],
									[
										27122,
										27125
									],
									[
										27310,
										27313
									],
									[
										27390,
										27393
									],
									[
										27469,
										27472
									],
									[
										27599,
										27602
									],
									[
										27681,
										27684
									],
									[
										27759,
										27762
									],
									[
										27900,
										27903
									],
									[
										27974,
										27977
									],
									[
										28223,
										28226
									],
									[
										28476,
										28479
									],
									[
										28486,
										28489
									],
									[
										28522,
										28525
									],
									[
										28684,
										28687
									],
									[
										28694,
										28697
									],
									[
										28730,
										28733
									],
									[
										28893,
										28896
									],
									[
										28903,
										28906
									],
									[
										28939,
										28942
									],
									[
										29102,
										29105
									],
									[
										29112,
										29115
									],
									[
										29148,
										29151
									],
									[
										29304,
										29307
									],
									[
										29432,
										29435
									],
									[
										29441,
										29444
									],
									[
										29447,
										29450
									],
									[
										29461,
										29464
									],
									[
										29568,
										29571
									],
									[
										29652,
										29655
									],
									[
										29725,
										29728
									],
									[
										29827,
										29830
									],
									[
										29918,
										29921
									],
									[
										30049,
										30052
									],
									[
										30114,
										30117
									],
									[
										30121,
										30124
									],
									[
										30174,
										30177
									],
									[
										30210,
										30213
									],
									[
										30327,
										30330
									],
									[
										30452,
										30455
									],
									[
										30626,
										30629
									],
									[
										30666,
										30669
									],
									[
										30687,
										30690
									],
									[
										30732,
										30735
									],
									[
										30750,
										30753
									],
									[
										30828,
										30831
									],
									[
										30886,
										30889
									],
									[
										30894,
										30897
									],
									[
										30985,
										30988
									],
									[
										31159,
										31162
									],
									[
										31184,
										31187
									],
									[
										31200,
										31203
									],
									[
										31485,
										31488
									],
									[
										31513,
										31516
									],
									[
										31526,
										31529
									],
									[
										31765,
										31768
									],
									[
										31988,
										31991
									],
									[
										32017,
										32020
									],
									[
										32129,
										32132
									],
									[
										32325,
										32328
									],
									[
										32639,
										32642
									],
									[
										32800,
										32803
									],
									[
										32851,
										32854
									],
									[
										32966,
										32969
									],
									[
										33105,
										33108
									],
									[
										33294,
										33297
									],
									[
										33503,
										33506
									],
									[
										33730,
										33733
									],
									[
										33838,
										33841
									],
									[
										34002,
										34005
									],
									[
										34311,
										34314
									],
									[
										34672,
										34675
									],
									[
										34940,
										34943
									],
									[
										35268,
										35271
									],
									[
										35512,
										35515
									],
									[
										35751,
										35754
									],
									[
										35973,
										35976
									],
									[
										36174,
										36177
									],
									[
										36365,
										36368
									],
									[
										36559,
										36562
									],
									[
										36749,
										36752
									],
									[
										36927,
										36930
									],
									[
										37168,
										37171
									],
									[
										37367,
										37370
									],
									[
										37673,
										37676
									],
									[
										38067,
										38070
									],
									[
										38397,
										38400
									],
									[
										38764,
										38767
									],
									[
										39080,
										39083
									],
									[
										39331,
										39334
									],
									[
										39521,
										39524
									],
									[
										39706,
										39709
									],
									[
										39904,
										39907
									],
									[
										40132,
										40135
									],
									[
										40335,
										40338
									],
									[
										40457,
										40460
									],
									[
										40533,
										40536
									],
									[
										40883,
										40886
									],
									[
										40903,
										40906
									],
									[
										41426,
										41429
									],
									[
										41446,
										41449
									],
									[
										41910,
										41913
									],
									[
										41923,
										41926
									],
									[
										42163,
										42166
									],
									[
										42205,
										42208
									],
									[
										42406,
										42409
									],
									[
										42448,
										42451
									],
									[
										42613,
										42616
									],
									[
										42797,
										42800
									],
									[
										42873,
										42876
									],
									[
										42969,
										42972
									],
									[
										43141,
										43144
									],
									[
										43205,
										43208
									],
									[
										43230,
										43233
									],
									[
										43262,
										43265
									],
									[
										43458,
										43461
									],
									[
										43746,
										43749
									],
									[
										43828,
										43831
									],
									[
										43869,
										43872
									],
									[
										43952,
										43955
									],
									[
										44624,
										44627
									],
									[
										44978,
										44981
									],
									[
										45393,
										45396
									],
									[
										45623,
										45626
									],
									[
										45891,
										45894
									],
									[
										45947,
										45950
									],
									[
										45996,
										45999
									],
									[
										46058,
										46061
									],
									[
										46253,
										46256
									],
									[
										46289,
										46292
									],
									[
										46460,
										46463
									],
									[
										46496,
										46499
									],
									[
										46663,
										46666
									],
									[
										46698,
										46701
									],
									[
										46864,
										46867
									],
									[
										46899,
										46902
									],
									[
										47065,
										47068
									],
									[
										47100,
										47103
									],
									[
										47262,
										47265
									],
									[
										47296,
										47299
									],
									[
										47481,
										47484
									],
									[
										47521,
										47524
									],
									[
										47825,
										47828
									],
									[
										48129,
										48132
									],
									[
										48345,
										48348
									],
									[
										48635,
										48638
									],
									[
										48809,
										48812
									],
									[
										49085,
										49088
									],
									[
										49282,
										49285
									],
									[
										49505,
										49508
									],
									[
										49552,
										49555
									],
									[
										49982,
										49985
									],
									[
										50251,
										50254
									],
									[
										50584,
										50587
									],
									[
										50840,
										50843
									],
									[
										50879,
										50882
									],
									[
										51147,
										51150
									],
									[
										51470,
										51473
									],
									[
										51858,
										51861
									],
									[
										51893,
										51896
									],
									[
										51930,
										51933
									],
									[
										51959,
										51962
									],
									[
										52074,
										52077
									],
									[
										52114,
										52117
									],
									[
										52512,
										52515
									],
									[
										52704,
										52707
									],
									[
										52916,
										52919
									],
									[
										53133,
										53136
									],
									[
										53272,
										53275
									],
									[
										53429,
										53432
									],
									[
										53698,
										53701
									],
									[
										54080,
										54083
									],
									[
										54422,
										54425
									],
									[
										54722,
										54725
									],
									[
										54861,
										54864
									],
									[
										55067,
										55070
									],
									[
										55286,
										55289
									],
									[
										55753,
										55756
									],
									[
										56139,
										56142
									],
									[
										56584,
										56587
									],
									[
										57038,
										57041
									],
									[
										57351,
										57354
									],
									[
										57506,
										57509
									],
									[
										57659,
										57662
									],
									[
										57959,
										57962
									],
									[
										58287,
										58290
									],
									[
										58939,
										58942
									],
									[
										59004,
										59007
									],
									[
										59041,
										59044
									],
									[
										59282,
										59285
									],
									[
										59601,
										59604
									],
									[
										59748,
										59751
									],
									[
										59950,
										59953
									],
									[
										60153,
										60156
									],
									[
										60462,
										60465
									],
									[
										60609,
										60612
									],
									[
										60777,
										60780
									],
									[
										61051,
										61054
									],
									[
										61400,
										61403
									],
									[
										61673,
										61676
									],
									[
										61809,
										61812
									],
									[
										61975,
										61978
									],
									[
										62043,
										62046
									],
									[
										62081,
										62084
									],
									[
										62113,
										62116
									],
									[
										62342,
										62345
									],
									[
										62384,
										62387
									],
									[
										62585,
										62588
									],
									[
										62627,
										62630
									],
									[
										62798,
										62801
									],
									[
										63008,
										63011
									],
									[
										63047,
										63050
									],
									[
										63417,
										63420
									],
									[
										63706,
										63709
									],
									[
										63782,
										63785
									],
									[
										63878,
										63881
									],
									[
										64050,
										64053
									],
									[
										64114,
										64117
									],
									[
										64139,
										64142
									],
									[
										64171,
										64174
									],
									[
										64367,
										64370
									],
									[
										64655,
										64658
									],
									[
										64737,
										64740
									],
									[
										64778,
										64781
									],
									[
										64861,
										64864
									],
									[
										65533,
										65536
									],
									[
										65831,
										65834
									],
									[
										66075,
										66078
									],
									[
										66348,
										66351
									],
									[
										66391,
										66394
									],
									[
										66503,
										66506
									],
									[
										66608,
										66611
									],
									[
										66718,
										66721
									],
									[
										66818,
										66821
									],
									[
										66958,
										66961
									],
									[
										67348,
										67351
									],
									[
										67767,
										67770
									],
									[
										67818,
										67821
									],
									[
										68045,
										68048
									],
									[
										68088,
										68091
									],
									[
										68351,
										68354
									],
									[
										68386,
										68389
									],
									[
										68552,
										68555
									],
									[
										68587,
										68590
									],
									[
										68797,
										68800
									],
									[
										69094,
										69097
									],
									[
										69449,
										69452
									],
									[
										69532,
										69535
									],
									[
										69743,
										69746
									],
									[
										69778,
										69781
									],
									[
										70082,
										70085
									],
									[
										70568,
										70571
									],
									[
										70725,
										70728
									],
									[
										70947,
										70950
									],
									[
										71038,
										71041
									],
									[
										71251,
										71254
									],
									[
										71307,
										71310
									],
									[
										71333,
										71336
									],
									[
										71578,
										71581
									],
									[
										71783,
										71786
									],
									[
										71823,
										71826
									],
									[
										72014,
										72017
									],
									[
										72054,
										72057
									],
									[
										72250,
										72253
									],
									[
										72334,
										72337
									],
									[
										72589,
										72592
									],
									[
										72650,
										72653
									],
									[
										72681,
										72684
									],
									[
										72730,
										72733
									],
									[
										73007,
										73010
									],
									[
										73218,
										73221
									],
									[
										73290,
										73293
									],
									[
										73319,
										73322
									],
									[
										73355,
										73358
									],
									[
										73678,
										73681
									],
									[
										73781,
										73784
									],
									[
										73867,
										73870
									],
									[
										74046,
										74049
									],
									[
										74180,
										74183
									],
									[
										74410,
										74413
									],
									[
										74696,
										74699
									],
									[
										74991,
										74994
									],
									[
										75237,
										75240
									],
									[
										75270,
										75273
									],
									[
										75303,
										75306
									],
									[
										75337,
										75340
									],
									[
										75371,
										75374
									],
									[
										75411,
										75414
									],
									[
										75451,
										75454
									],
									[
										75491,
										75494
									],
									[
										75532,
										75535
									],
									[
										75574,
										75577
									],
									[
										75776,
										75779
									],
									[
										76121,
										76124
									],
									[
										76177,
										76180
									],
									[
										76226,
										76229
									],
									[
										76288,
										76291
									],
									[
										76489,
										76492
									],
									[
										76525,
										76528
									],
									[
										76696,
										76699
									],
									[
										76732,
										76735
									],
									[
										76899,
										76902
									],
									[
										76934,
										76937
									],
									[
										77100,
										77103
									],
									[
										77135,
										77138
									],
									[
										77301,
										77304
									],
									[
										77336,
										77339
									],
									[
										77498,
										77501
									],
									[
										77532,
										77535
									],
									[
										77717,
										77720
									],
									[
										77757,
										77760
									],
									[
										78073,
										78076
									],
									[
										78107,
										78110
									],
									[
										78212,
										78215
									],
									[
										78247,
										78250
									],
									[
										78356,
										78359
									],
									[
										78392,
										78395
									],
									[
										78627,
										78630
									],
									[
										78666,
										78669
									],
									[
										78707,
										78710
									],
									[
										78740,
										78743
									],
									[
										78867,
										78870
									],
									[
										78911,
										78914
									],
									[
										79190,
										79193
									],
									[
										79382,
										79385
									],
									[
										79451,
										79454
									],
									[
										79490,
										79493
									],
									[
										79521,
										79524
									],
									[
										79736,
										79739
									],
									[
										79775,
										79778
									],
									[
										79813,
										79816
									],
									[
										79852,
										79855
									],
									[
										80181,
										80184
									],
									[
										80403,
										80406
									],
									[
										80699,
										80702
									],
									[
										80873,
										80876
									],
									[
										81155,
										81158
									],
									[
										81352,
										81355
									],
									[
										81575,
										81578
									],
									[
										81622,
										81625
									],
									[
										82058,
										82061
									],
									[
										82327,
										82330
									],
									[
										82667,
										82670
									],
									[
										82705,
										82708
									],
									[
										82744,
										82747
									],
									[
										82788,
										82791
									],
									[
										83048,
										83051
									],
									[
										83086,
										83089
									],
									[
										83125,
										83128
									],
									[
										83169,
										83172
									],
									[
										83475,
										83478
									],
									[
										83781,
										83784
									],
									[
										84101,
										84104
									],
									[
										84163,
										84166
									],
									[
										84229,
										84232
									],
									[
										84293,
										84296
									],
									[
										84545,
										84548
									],
									[
										84758,
										84761
									],
									[
										84826,
										84829
									],
									[
										84864,
										84867
									],
									[
										84888,
										84891
									],
									[
										85109,
										85112
									],
									[
										85189,
										85192
									],
									[
										85346,
										85349
									],
									[
										85430,
										85433
									],
									[
										85609,
										85612
									],
									[
										85705,
										85708
									],
									[
										85894,
										85897
									],
									[
										85994,
										85997
									],
									[
										86050,
										86053
									],
									[
										86056,
										86059
									],
									[
										86093,
										86096
									],
									[
										86124,
										86127
									],
									[
										86395,
										86398
									],
									[
										86814,
										86817
									],
									[
										87238,
										87241
									],
									[
										87637,
										87640
									],
									[
										87664,
										87667
									],
									[
										87748,
										87751
									],
									[
										87777,
										87780
									],
									[
										88056,
										88059
									],
									[
										88362,
										88365
									],
									[
										88794,
										88797
									],
									[
										89118,
										89121
									],
									[
										89178,
										89181
									],
									[
										89456,
										89459
									],
									[
										89812,
										89815
									],
									[
										90046,
										90049
									],
									[
										90271,
										90274
									],
									[
										90443,
										90446
									],
									[
										90769,
										90772
									],
									[
										90895,
										90898
									],
									[
										91065,
										91068
									],
									[
										91239,
										91242
									],
									[
										91319,
										91322
									],
									[
										91399,
										91402
									],
									[
										91479,
										91482
									],
									[
										91679,
										91682
									],
									[
										91714,
										91717
									],
									[
										91920,
										91923
									],
									[
										92110,
										92113
									],
									[
										92146,
										92149
									],
									[
										92182,
										92185
									],
									[
										92219,
										92222
									],
									[
										92256,
										92259
									],
									[
										92299,
										92302
									],
									[
										92342,
										92345
									],
									[
										92385,
										92388
									],
									[
										92429,
										92432
									],
									[
										92474,
										92477
									],
									[
										92691,
										92694
									],
									[
										92937,
										92940
									],
									[
										93066,
										93069
									],
									[
										93109,
										93112
									],
									[
										93122,
										93125
									],
									[
										93144,
										93147
									],
									[
										93277,
										93280
									],
									[
										93473,
										93476
									],
									[
										93601,
										93604
									],
									[
										93729,
										93732
									],
									[
										93985,
										93988
									],
									[
										94113,
										94116
									],
									[
										94241,
										94244
									],
									[
										94497,
										94500
									],
									[
										94757,
										94760
									],
									[
										94885,
										94888
									],
									[
										95013,
										95016
									],
									[
										95270,
										95273
									],
									[
										95398,
										95401
									],
									[
										95608,
										95611
									],
									[
										95828,
										95831
									],
									[
										95863,
										95866
									],
									[
										95905,
										95908
									],
									[
										96161,
										96164
									],
									[
										96400,
										96403
									],
									[
										96597,
										96600
									],
									[
										96657,
										96660
									],
									[
										96942,
										96945
									],
									[
										97302,
										97305
									],
									[
										97554,
										97557
									],
									[
										97626,
										97629
									],
									[
										97680,
										97683
									],
									[
										98008,
										98011
									],
									[
										98340,
										98343
									],
									[
										98400,
										98403
									],
									[
										98685,
										98688
									],
									[
										99047,
										99050
									],
									[
										99291,
										99294
									],
									[
										99527,
										99530
									],
									[
										99543,
										99546
									],
									[
										99588,
										99591
									],
									[
										99603,
										99606
									],
									[
										99707,
										99710
									],
									[
										99718,
										99721
									],
									[
										99820,
										99823
									],
									[
										99843,
										99846
									],
									[
										99899,
										99902
									],
									[
										99955,
										99958
									],
									[
										99974,
										99977
									],
									[
										100030,
										100033
									],
									[
										100088,
										100091
									],
									[
										100109,
										100112
									],
									[
										100163,
										100166
									],
									[
										100219,
										100222
									],
									[
										100238,
										100241
									],
									[
										100291,
										100294
									],
									[
										100347,
										100350
									],
									[
										100366,
										100369
									],
									[
										100419,
										100422
									],
									[
										100470,
										100473
									],
									[
										100484,
										100487
									],
									[
										100533,
										100536
									],
									[
										100674,
										100677
									],
									[
										100717,
										100720
									],
									[
										100878,
										100881
									],
									[
										101110,
										101113
									],
									[
										101154,
										101157
									],
									[
										101374,
										101377
									],
									[
										101640,
										101643
									],
									[
										101864,
										101867
									],
									[
										101895,
										101898
									],
									[
										102098,
										102101
									],
									[
										102133,
										102136
									],
									[
										102343,
										102346
									],
									[
										102681,
										102684
									],
									[
										103004,
										103007
									],
									[
										103110,
										103113
									],
									[
										103280,
										103283
									],
									[
										103390,
										103393
									],
									[
										103642,
										103645
									],
									[
										103670,
										103673
									],
									[
										103720,
										103723
									],
									[
										103782,
										103785
									],
									[
										103822,
										103825
									],
									[
										103858,
										103861
									],
									[
										103905,
										103908
									],
									[
										103922,
										103925
									],
									[
										104073,
										104076
									],
									[
										104101,
										104104
									],
									[
										104150,
										104153
									],
									[
										104219,
										104222
									],
									[
										104256,
										104259
									],
									[
										104421,
										104424
									],
									[
										104753,
										104756
									],
									[
										105049,
										105052
									],
									[
										105077,
										105080
									],
									[
										105126,
										105129
									],
									[
										105196,
										105199
									],
									[
										105234,
										105237
									],
									[
										105399,
										105402
									],
									[
										105731,
										105734
									],
									[
										106073,
										106076
									],
									[
										106235,
										106238
									],
									[
										106573,
										106576
									],
									[
										106824,
										106827
									],
									[
										106899,
										106902
									],
									[
										106983,
										106986
									],
									[
										107224,
										107227
									],
									[
										107363,
										107366
									],
									[
										107569,
										107572
									],
									[
										107788,
										107791
									],
									[
										108250,
										108253
									],
									[
										108631,
										108634
									],
									[
										109218,
										109221
									],
									[
										109247,
										109250
									],
									[
										110023,
										110026
									],
									[
										110040,
										110043
									],
									[
										110814,
										110817
									],
									[
										110836,
										110839
									],
									[
										111505,
										111508
									],
									[
										111535,
										111538
									],
									[
										112205,
										112208
									],
									[
										112234,
										112237
									],
									[
										112732,
										112735
									],
									[
										112988,
										112991
									],
									[
										113275,
										113278
									],
									[
										113650,
										113653
									],
									[
										113817,
										113820
									],
									[
										114133,
										114136
									],
									[
										114587,
										114590
									],
									[
										114900,
										114903
									],
									[
										115055,
										115058
									],
									[
										115208,
										115211
									],
									[
										115508,
										115511
									],
									[
										115836,
										115839
									],
									[
										116483,
										116486
									],
									[
										116548,
										116551
									],
									[
										116585,
										116588
									],
									[
										116826,
										116829
									],
									[
										117140,
										117143
									],
									[
										117287,
										117290
									],
									[
										117489,
										117492
									],
									[
										117692,
										117695
									],
									[
										118001,
										118004
									],
									[
										118148,
										118151
									],
									[
										118316,
										118319
									],
									[
										118590,
										118593
									],
									[
										118939,
										118942
									],
									[
										119212,
										119215
									],
									[
										119348,
										119351
									],
									[
										119553,
										119556
									],
									[
										119778,
										119781
									],
									[
										119950,
										119953
									],
									[
										120276,
										120279
									],
									[
										120402,
										120405
									],
									[
										120572,
										120575
									],
									[
										120746,
										120749
									],
									[
										120826,
										120829
									],
									[
										120906,
										120909
									],
									[
										120986,
										120989
									],
									[
										121186,
										121189
									],
									[
										121221,
										121224
									],
									[
										121427,
										121430
									],
									[
										121617,
										121620
									],
									[
										121653,
										121656
									],
									[
										121689,
										121692
									],
									[
										121726,
										121729
									],
									[
										121763,
										121766
									],
									[
										121806,
										121809
									],
									[
										121849,
										121852
									],
									[
										121892,
										121895
									],
									[
										121936,
										121939
									],
									[
										121981,
										121984
									],
									[
										122198,
										122201
									],
									[
										122425,
										122428
									],
									[
										122638,
										122641
									],
									[
										122684,
										122687
									],
									[
										122908,
										122911
									],
									[
										123297,
										123300
									],
									[
										123792,
										123795
									],
									[
										123829,
										123832
									],
									[
										124074,
										124077
									],
									[
										124116,
										124119
									],
									[
										124160,
										124163
									],
									[
										124196,
										124199
									],
									[
										124332,
										124335
									],
									[
										124379,
										124382
									],
									[
										124671,
										124674
									],
									[
										124898,
										124901
									],
									[
										125145,
										125148
									],
									[
										125374,
										125377
									],
									[
										125481,
										125484
									],
									[
										125659,
										125662
									],
									[
										126101,
										126104
									],
									[
										126389,
										126392
									],
									[
										126425,
										126428
									],
									[
										126630,
										126633
									],
									[
										126706,
										126709
									],
									[
										126748,
										126751
									],
									[
										126797,
										126800
									],
									[
										126890,
										126893
									],
									[
										126934,
										126937
									],
									[
										126987,
										126990
									],
									[
										127219,
										127222
									],
									[
										127268,
										127271
									],
									[
										127504,
										127507
									],
									[
										127553,
										127556
									],
									[
										127710,
										127713
									],
									[
										127908,
										127911
									],
									[
										127954,
										127957
									],
									[
										128174,
										128177
									],
									[
										128410,
										128413
									],
									[
										128500,
										128503
									],
									[
										128617,
										128620
									],
									[
										128824,
										128827
									],
									[
										128902,
										128905
									],
									[
										128934,
										128937
									],
									[
										128973,
										128976
									],
									[
										129204,
										129207
									],
									[
										129593,
										129596
									],
									[
										129726,
										129729
									],
									[
										129839,
										129842
									],
									[
										130223,
										130226
									],
									[
										130411,
										130414
									],
									[
										130846,
										130849
									],
									[
										130875,
										130878
									],
									[
										130903,
										130906
									],
									[
										130943,
										130946
									],
									[
										130982,
										130985
									],
									[
										131022,
										131025
									],
									[
										131190,
										131193
									],
									[
										131216,
										131219
									],
									[
										131313,
										131316
									],
									[
										131344,
										131347
									],
									[
										131510,
										131513
									],
									[
										131725,
										131728
									],
									[
										131941,
										131944
									],
									[
										131989,
										131992
									],
									[
										132131,
										132134
									],
									[
										132266,
										132269
									],
									[
										132406,
										132409
									],
									[
										132536,
										132539
									],
									[
										132706,
										132709
									],
									[
										132856,
										132859
									],
									[
										132897,
										132900
									],
									[
										133368,
										133371
									],
									[
										133849,
										133852
									],
									[
										133882,
										133885
									],
									[
										134117,
										134120
									],
									[
										134200,
										134203
									],
									[
										134268,
										134271
									],
									[
										134307,
										134310
									],
									[
										134506,
										134509
									],
									[
										134556,
										134559
									],
									[
										134781,
										134784
									],
									[
										134823,
										134826
									],
									[
										135024,
										135027
									],
									[
										135066,
										135069
									],
									[
										135311,
										135314
									],
									[
										135506,
										135509
									],
									[
										135763,
										135766
									],
									[
										135860,
										135863
									],
									[
										136122,
										136125
									],
									[
										136157,
										136160
									],
									[
										136454,
										136457
									],
									[
										136680,
										136683
									],
									[
										136736,
										136739
									],
									[
										137279,
										137282
									],
									[
										137466,
										137469
									],
									[
										137773,
										137776
									],
									[
										137869,
										137872
									],
									[
										138200,
										138203
									],
									[
										138237,
										138240
									],
									[
										138440,
										138443
									],
									[
										138510,
										138513
									],
									[
										138540,
										138543
									],
									[
										138695,
										138698
									],
									[
										138727,
										138730
									],
									[
										138768,
										138771
									],
									[
										138965,
										138968
									],
									[
										139215,
										139218
									],
									[
										139262,
										139265
									],
									[
										139488,
										139491
									],
									[
										139535,
										139538
									],
									[
										139733,
										139736
									],
									[
										139831,
										139834
									],
									[
										140018,
										140021
									],
									[
										140091,
										140094
									],
									[
										140126,
										140129
									],
									[
										140199,
										140202
									],
									[
										140406,
										140409
									],
									[
										140443,
										140446
									],
									[
										140489,
										140492
									],
									[
										140720,
										140723
									],
									[
										140951,
										140954
									],
									[
										141037,
										141040
									],
									[
										141073,
										141076
									],
									[
										141116,
										141119
									],
									[
										141561,
										141564
									],
									[
										141694,
										141697
									],
									[
										141810,
										141813
									],
									[
										142049,
										142052
									],
									[
										142243,
										142246
									],
									[
										142554,
										142557
									],
									[
										142586,
										142589
									],
									[
										142617,
										142620
									],
									[
										142660,
										142663
									],
									[
										142702,
										142705
									],
									[
										142745,
										142748
									],
									[
										142847,
										142850
									],
									[
										142876,
										142879
									],
									[
										142982,
										142985
									],
									[
										143016,
										143019
									],
									[
										143245,
										143248
									],
									[
										143491,
										143494
									],
									[
										143680,
										143683
									],
									[
										143894,
										143897
									],
									[
										143934,
										143937
									],
									[
										143974,
										143977
									],
									[
										144015,
										144018
									],
									[
										144056,
										144059
									],
									[
										144103,
										144106
									],
									[
										144150,
										144153
									],
									[
										144197,
										144200
									],
									[
										144245,
										144248
									],
									[
										144294,
										144297
									],
									[
										144531,
										144534
									],
									[
										144738,
										144741
									],
									[
										144801,
										144804
									],
									[
										144857,
										144860
									],
									[
										144926,
										144929
									],
									[
										145172,
										145175
									],
									[
										145215,
										145218
									],
									[
										145421,
										145424
									],
									[
										145464,
										145467
									],
									[
										145666,
										145669
									],
									[
										145708,
										145711
									],
									[
										145909,
										145912
									],
									[
										145951,
										145954
									],
									[
										146152,
										146155
									],
									[
										146194,
										146197
									],
									[
										146391,
										146394
									],
									[
										146432,
										146435
									],
									[
										146652,
										146655
									],
									[
										146699,
										146702
									],
									[
										146896,
										146899
									],
									[
										146942,
										146945
									],
									[
										146990,
										146993
									],
									[
										147030,
										147033
									],
									[
										147178,
										147181
									],
									[
										147229,
										147232
									],
									[
										147476,
										147479
									],
									[
										147517,
										147520
									],
									[
										147643,
										147646
									],
									[
										147685,
										147688
									],
									[
										147815,
										147818
									],
									[
										147858,
										147861
									],
									[
										148043,
										148046
									],
									[
										148252,
										148255
									],
									[
										148331,
										148334
									],
									[
										148375,
										148378
									],
									[
										148442,
										148445
									],
									[
										148505,
										148508
									],
									[
										148547,
										148550
									],
									[
										148610,
										148613
									],
									[
										148655,
										148658
									],
									[
										148711,
										148714
									],
									[
										148896,
										148899
									],
									[
										148943,
										148946
									],
									[
										148989,
										148992
									],
									[
										149036,
										149039
									],
									[
										149314,
										149317
									],
									[
										149508,
										149511
									],
									[
										149749,
										149752
									],
									[
										149947,
										149950
									],
									[
										150190,
										150193
									],
									[
										150427,
										150430
									],
									[
										150691,
										150694
									],
									[
										150746,
										150749
									],
									[
										151219,
										151222
									],
									[
										151519,
										151522
									],
									[
										151881,
										151884
									],
									[
										151927,
										151930
									],
									[
										151974,
										151977
									],
									[
										152026,
										152029
									],
									[
										152253,
										152256
									],
									[
										152299,
										152302
									],
									[
										152346,
										152349
									],
									[
										152398,
										152401
									],
									[
										152673,
										152676
									],
									[
										152885,
										152888
									],
									[
										152963,
										152966
									],
									[
										153045,
										153048
									],
									[
										153125,
										153128
									],
									[
										153278,
										153281
									],
									[
										153507,
										153510
									],
									[
										153585,
										153588
									],
									[
										153628,
										153631
									],
									[
										153671,
										153674
									],
									[
										153775,
										153778
									],
									[
										153819,
										153822
									],
									[
										153874,
										153877
									],
									[
										154096,
										154099
									],
									[
										154192,
										154195
									],
									[
										154381,
										154384
									],
									[
										154481,
										154484
									],
									[
										154692,
										154695
									],
									[
										154804,
										154807
									],
									[
										155025,
										155028
									],
									[
										155141,
										155144
									],
									[
										155205,
										155208
									],
									[
										155211,
										155214
									],
									[
										155256,
										155259
									],
									[
										155295,
										155298
									],
									[
										155520,
										155523
									],
									[
										155809,
										155812
									],
									[
										155837,
										155840
									],
									[
										156163,
										156166
									],
									[
										156190,
										156193
									],
									[
										156504,
										156507
									],
									[
										156524,
										156527
									],
									[
										156564,
										156567
									],
									[
										156595,
										156598
									],
									[
										156646,
										156649
									],
									[
										156677,
										156680
									],
									[
										156863,
										156866
									],
									[
										156880,
										156883
									],
									[
										156992,
										156995
									],
									[
										157014,
										157017
									],
									[
										157241,
										157244
									],
									[
										157273,
										157276
									],
									[
										157641,
										157644
									],
									[
										157665,
										157668
									],
									[
										157945,
										157948
									],
									[
										157975,
										157978
									],
									[
										158242,
										158245
									],
									[
										158289,
										158292
									],
									[
										158593,
										158596
									],
									[
										158621,
										158624
									],
									[
										158947,
										158950
									],
									[
										158970,
										158973
									],
									[
										159013,
										159016
									],
									[
										159047,
										159050
									],
									[
										159101,
										159104
									],
									[
										159135,
										159138
									],
									[
										159252,
										159255
									],
									[
										159272,
										159275
									],
									[
										159393,
										159396
									],
									[
										159418,
										159421
									],
									[
										159625,
										159628
									],
									[
										159658,
										159661
									],
									[
										159948,
										159951
									],
									[
										160267,
										160270
									],
									[
										160581,
										160584
									],
									[
										160903,
										160906
									],
									[
										161233,
										161236
									],
									[
										161468,
										161471
									],
									[
										161743,
										161746
									],
									[
										162074,
										162077
									],
									[
										162264,
										162267
									],
									[
										162518,
										162521
									],
									[
										162881,
										162884
									],
									[
										162951,
										162954
									],
									[
										163022,
										163025
									],
									[
										163058,
										163061
									],
									[
										163351,
										163354
									],
									[
										163554,
										163557
									],
									[
										163786,
										163789
									],
									[
										164230,
										164233
									],
									[
										164258,
										164261
									],
									[
										164533,
										164536
									],
									[
										164560,
										164563
									],
									[
										164832,
										164835
									],
									[
										164852,
										164855
									],
									[
										164882,
										164885
									],
									[
										164913,
										164916
									],
									[
										164954,
										164957
									],
									[
										164985,
										164988
									],
									[
										165141,
										165144
									],
									[
										165158,
										165161
									],
									[
										165250,
										165253
									],
									[
										165272,
										165275
									],
									[
										165466,
										165469
									],
									[
										165498,
										165501
									],
									[
										165815,
										165818
									],
									[
										165839,
										165842
									],
									[
										166077,
										166080
									],
									[
										166107,
										166110
									],
									[
										166341,
										166344
									],
									[
										166388,
										166391
									],
									[
										166650,
										166653
									],
									[
										166678,
										166681
									],
									[
										166962,
										166965
									],
									[
										166985,
										166988
									],
									[
										167018,
										167021
									],
									[
										167052,
										167055
									],
									[
										167096,
										167099
									],
									[
										167130,
										167133
									],
									[
										167227,
										167230
									],
									[
										167247,
										167250
									],
									[
										167348,
										167351
									],
									[
										167373,
										167376
									],
									[
										167547,
										167550
									],
									[
										167580,
										167583
									],
									[
										167836,
										167839
									],
									[
										168124,
										168127
									],
									[
										168407,
										168410
									],
									[
										168698,
										168701
									],
									[
										168997,
										169000
									],
									[
										169440,
										169443
									],
									[
										169466,
										169469
									],
									[
										169526,
										169529
									],
									[
										170096,
										170099
									],
									[
										170121,
										170124
									],
									[
										170180,
										170183
									],
									[
										170336,
										170339
									],
									[
										170388,
										170391
									],
									[
										170793,
										170796
									],
									[
										170811,
										170814
									],
									[
										170863,
										170866
									],
									[
										170908,
										170911
									],
									[
										170937,
										170940
									],
									[
										171000,
										171003
									],
									[
										171056,
										171059
									],
									[
										171085,
										171088
									],
									[
										171148,
										171151
									],
									[
										171458,
										171461
									],
									[
										171473,
										171476
									],
									[
										171522,
										171525
									],
									[
										171699,
										171702
									],
									[
										171719,
										171722
									],
									[
										171773,
										171776
									],
									[
										172018,
										172021
									],
									[
										172048,
										172051
									],
									[
										172112,
										172115
									],
									[
										172741,
										172744
									],
									[
										172763,
										172766
									],
									[
										172819,
										172822
									],
									[
										173192,
										173195
									],
									[
										173220,
										173223
									],
									[
										173282,
										173285
									],
									[
										173582,
										173585
									],
									[
										173627,
										173630
									],
									[
										173706,
										173709
									],
									[
										174069,
										174072
									],
									[
										174095,
										174098
									],
									[
										174155,
										174158
									],
									[
										174417,
										174420
									],
									[
										174457,
										174460
									],
									[
										174591,
										174594
									],
									[
										174653,
										174656
									],
									[
										174783,
										174786
									],
									[
										175195,
										175198
									],
									[
										175216,
										175219
									],
									[
										175271,
										175274
									],
									[
										175319,
										175322
									],
									[
										175351,
										175354
									],
									[
										175417,
										175420
									],
									[
										175476,
										175479
									],
									[
										175508,
										175511
									],
									[
										175574,
										175577
									],
									[
										175754,
										175757
									],
									[
										175772,
										175775
									],
									[
										175824,
										175827
									],
									[
										176013,
										176016
									],
									[
										176036,
										176039
									],
									[
										176093,
										176096
									],
									[
										176239,
										176242
									],
									[
										176309,
										176312
									],
									[
										176420,
										176423
									],
									[
										176451,
										176454
									],
									[
										176516,
										176519
									],
									[
										176630,
										176633
									],
									[
										176776,
										176779
									],
									[
										176828,
										176831
									],
									[
										176952,
										176955
									],
									[
										177081,
										177084
									],
									[
										177124,
										177127
									],
									[
										177137,
										177140
									],
									[
										177159,
										177162
									],
									[
										177292,
										177295
									],
									[
										177488,
										177491
									],
									[
										177616,
										177619
									],
									[
										177744,
										177747
									],
									[
										178000,
										178003
									],
									[
										178128,
										178131
									],
									[
										178256,
										178259
									],
									[
										178512,
										178515
									],
									[
										178772,
										178775
									],
									[
										178900,
										178903
									],
									[
										179028,
										179031
									],
									[
										179285,
										179288
									],
									[
										179413,
										179416
									],
									[
										179687,
										179690
									],
									[
										179736,
										179739
									],
									[
										179788,
										179791
									],
									[
										179853,
										179856
									],
									[
										180270,
										180273
									],
									[
										180307,
										180310
									],
									[
										180347,
										180350
									],
									[
										180400,
										180403
									],
									[
										180738,
										180741
									],
									[
										180780,
										180783
									],
									[
										180825,
										180828
									],
									[
										180901,
										180904
									],
									[
										180935,
										180938
									],
									[
										180969,
										180972
									],
									[
										181034,
										181037
									],
									[
										181435,
										181438
									],
									[
										181485,
										181488
									],
									[
										181538,
										181541
									],
									[
										181622,
										181625
									],
									[
										181664,
										181667
									],
									[
										181706,
										181709
									],
									[
										181779,
										181782
									],
									[
										182138,
										182141
									],
									[
										182188,
										182191
									],
									[
										182240,
										182243
									],
									[
										182306,
										182309
									],
									[
										182547,
										182550
									],
									[
										182773,
										182776
									],
									[
										182809,
										182812
									],
									[
										182853,
										182856
									],
									[
										183019,
										183022
									],
									[
										183102,
										183105
									],
									[
										183180,
										183183
									],
									[
										183305,
										183308
									],
									[
										183376,
										183379
									],
									[
										183441,
										183444
									],
									[
										183562,
										183565
									],
									[
										183638,
										183641
									],
									[
										183709,
										183712
									],
									[
										183897,
										183900
									],
									[
										183977,
										183980
									],
									[
										184056,
										184059
									],
									[
										184186,
										184189
									],
									[
										184268,
										184271
									],
									[
										184346,
										184349
									],
									[
										184643,
										184646
									],
									[
										184665,
										184668
									],
									[
										184991,
										184994
									],
									[
										185012,
										185015
									],
									[
										185150,
										185153
									],
									[
										185214,
										185217
									],
									[
										185280,
										185283
									],
									[
										185311,
										185314
									],
									[
										185356,
										185359
									],
									[
										185404,
										185407
									],
									[
										185469,
										185472
									],
									[
										185742,
										185745
									],
									[
										185756,
										185759
									],
									[
										185801,
										185804
									],
									[
										185826,
										185829
									],
									[
										185882,
										185885
									],
									[
										185907,
										185910
									],
									[
										186096,
										186099
									],
									[
										186107,
										186110
									],
									[
										186223,
										186226
									],
									[
										186239,
										186242
									],
									[
										186582,
										186585
									],
									[
										186608,
										186611
									],
									[
										186976,
										186979
									],
									[
										186994,
										186997
									],
									[
										187363,
										187366
									],
									[
										187387,
										187390
									],
									[
										187600,
										187603
									],
									[
										187641,
										187644
									],
									[
										187867,
										187870
									],
									[
										187889,
										187892
									],
									[
										188078,
										188081
									],
									[
										188130,
										188133
									],
									[
										188184,
										188187
									],
									[
										188203,
										188206
									],
									[
										188236,
										188239
									],
									[
										188272,
										188275
									],
									[
										188325,
										188328
									],
									[
										188459,
										188462
									],
									[
										188516,
										188519
									],
									[
										188575,
										188578
									],
									[
										188599,
										188602
									],
									[
										188637,
										188640
									],
									[
										188678,
										188681
									],
									[
										188817,
										188820
									],
									[
										189091,
										189094
									],
									[
										189108,
										189111
									],
									[
										189156,
										189159
									],
									[
										189184,
										189187
									],
									[
										189243,
										189246
									],
									[
										189271,
										189274
									],
									[
										189392,
										189395
									],
									[
										189406,
										189409
									],
									[
										189531,
										189534
									],
									[
										189550,
										189553
									],
									[
										189678,
										189681
									],
									[
										189743,
										189746
									],
									[
										189810,
										189813
									],
									[
										189842,
										189845
									],
									[
										189888,
										189891
									],
									[
										189937,
										189940
									],
									[
										189990,
										189993
									],
									[
										190017,
										190020
									],
									[
										190096,
										190099
									],
									[
										190242,
										190245
									],
									[
										190306,
										190309
									],
									[
										190372,
										190375
									],
									[
										190403,
										190406
									],
									[
										190448,
										190451
									],
									[
										190496,
										190499
									],
									[
										190561,
										190564
									],
									[
										190750,
										190753
									],
									[
										190796,
										190799
									],
									[
										190843,
										190846
									],
									[
										191069,
										191072
									],
									[
										191103,
										191106
									],
									[
										191138,
										191141
									],
									[
										191342,
										191345
									],
									[
										191381,
										191384
									],
									[
										191421,
										191424
									],
									[
										191639,
										191642
									],
									[
										191686,
										191689
									],
									[
										191734,
										191737
									],
									[
										191953,
										191956
									],
									[
										191999,
										192002
									],
									[
										192046,
										192049
									],
									[
										192228,
										192231
									],
									[
										192300,
										192303
									],
									[
										192354,
										192357
									],
									[
										192637,
										192640
									],
									[
										192795,
										192798
									],
									[
										192953,
										192956
									],
									[
										193025,
										193028
									],
									[
										193079,
										193082
									],
									[
										193441,
										193444
									],
									[
										193501,
										193504
									],
									[
										193515,
										193518
									],
									[
										193585,
										193588
									],
									[
										193668,
										193671
									],
									[
										193760,
										193763
									],
									[
										193977,
										193980
									],
									[
										194129,
										194132
									],
									[
										194369,
										194372
									],
									[
										194408,
										194411
									],
									[
										194611,
										194614
									],
									[
										194737,
										194740
									],
									[
										195109,
										195112
									],
									[
										195401,
										195404
									],
									[
										195462,
										195465
									],
									[
										195534,
										195537
									],
									[
										195707,
										195710
									],
									[
										195821,
										195824
									],
									[
										196068,
										196071
									],
									[
										196336,
										196339
									],
									[
										196638,
										196641
									],
									[
										196705,
										196708
									],
									[
										196783,
										196786
									],
									[
										196900,
										196903
									],
									[
										197026,
										197029
									],
									[
										197391,
										197394
									],
									[
										197475,
										197478
									],
									[
										197877,
										197880
									],
									[
										197947,
										197950
									],
									[
										197992,
										197995
									],
									[
										198084,
										198087
									],
									[
										198140,
										198143
									],
									[
										198232,
										198235
									],
									[
										198542,
										198545
									],
									[
										198606,
										198609
									],
									[
										198783,
										198786
									],
									[
										198857,
										198860
									],
									[
										199304,
										199307
									],
									[
										199382,
										199385
									],
									[
										199755,
										199758
									],
									[
										199845,
										199848
									],
									[
										200268,
										200271
									],
									[
										200344,
										200347
									],
									[
										200392,
										200395
									],
									[
										200490,
										200493
									],
									[
										200549,
										200552
									],
									[
										200647,
										200650
									],
									[
										200827,
										200830
									],
									[
										200897,
										200900
									],
									[
										201086,
										201089
									],
									[
										201166,
										201169
									],
									[
										201349,
										201352
									],
									[
										201359,
										201362
									],
									[
										201395,
										201398
									],
									[
										201557,
										201560
									],
									[
										201567,
										201570
									],
									[
										201603,
										201606
									],
									[
										201766,
										201769
									],
									[
										201776,
										201779
									],
									[
										201812,
										201815
									],
									[
										201975,
										201978
									],
									[
										201985,
										201988
									],
									[
										202021,
										202024
									],
									[
										202162,
										202165
									],
									[
										202301,
										202304
									],
									[
										202474,
										202477
									],
									[
										202692,
										202695
									],
									[
										203072,
										203075
									],
									[
										203154,
										203157
									],
									[
										203195,
										203198
									],
									[
										203278,
										203281
									],
									[
										203950,
										203953
									],
									[
										204304,
										204307
									],
									[
										204747,
										204750
									],
									[
										205083,
										205086
									],
									[
										205357,
										205360
									],
									[
										205706,
										205709
									],
									[
										205979,
										205982
									],
									[
										206294,
										206297
									],
									[
										206376,
										206379
									],
									[
										206417,
										206420
									],
									[
										206500,
										206503
									],
									[
										207172,
										207175
									],
									[
										207532,
										207535
									],
									[
										207973,
										207976
									],
									[
										208287,
										208290
									],
									[
										208390,
										208393
									],
									[
										208476,
										208479
									],
									[
										208655,
										208658
									],
									[
										208789,
										208792
									],
									[
										209066,
										209069
									],
									[
										209288,
										209291
									],
									[
										209562,
										209565
									],
									[
										209911,
										209914
									],
									[
										210184,
										210187
									],
									[
										210452,
										210455
									],
									[
										210488,
										210491
									],
									[
										210775,
										210778
									],
									[
										210804,
										210807
									],
									[
										210832,
										210835
									],
									[
										210872,
										210875
									],
									[
										210911,
										210914
									],
									[
										210951,
										210954
									],
									[
										211119,
										211122
									],
									[
										211145,
										211148
									],
									[
										211242,
										211245
									],
									[
										211273,
										211276
									],
									[
										211515,
										211518
									],
									[
										211548,
										211551
									],
									[
										211820,
										211823
									],
									[
										211859,
										211862
									],
									[
										212175,
										212178
									],
									[
										212207,
										212210
									],
									[
										212238,
										212241
									],
									[
										212281,
										212284
									],
									[
										212323,
										212326
									],
									[
										212366,
										212369
									],
									[
										212468,
										212471
									],
									[
										212497,
										212500
									],
									[
										212603,
										212606
									],
									[
										212637,
										212640
									],
									[
										212927,
										212930
									],
									[
										213261,
										213264
									],
									[
										213332,
										213335
									],
									[
										213414,
										213417
									],
									[
										213617,
										213620
									],
									[
										213751,
										213754
									],
									[
										214040,
										214043
									],
									[
										214350,
										214353
									],
									[
										214694,
										214697
									],
									[
										214771,
										214774
									],
									[
										214859,
										214862
									],
									[
										214996,
										214999
									],
									[
										215142,
										215145
									],
									[
										215440,
										215443
									],
									[
										215732,
										215735
									],
									[
										215793,
										215796
									],
									[
										215865,
										215868
									],
									[
										216038,
										216041
									],
									[
										216152,
										216155
									],
									[
										216399,
										216402
									],
									[
										216667,
										216670
									],
									[
										216969,
										216972
									],
									[
										217036,
										217039
									],
									[
										217114,
										217117
									],
									[
										217231,
										217234
									],
									[
										217357,
										217360
									],
									[
										217722,
										217725
									],
									[
										217806,
										217809
									],
									[
										218208,
										218211
									],
									[
										218278,
										218281
									],
									[
										218323,
										218326
									],
									[
										218415,
										218418
									],
									[
										218471,
										218474
									],
									[
										218563,
										218566
									],
									[
										218873,
										218876
									],
									[
										218937,
										218940
									],
									[
										219114,
										219117
									],
									[
										219188,
										219191
									],
									[
										219635,
										219638
									],
									[
										219713,
										219716
									],
									[
										220086,
										220089
									],
									[
										220176,
										220179
									],
									[
										220599,
										220602
									],
									[
										220675,
										220678
									],
									[
										220723,
										220726
									],
									[
										220821,
										220824
									],
									[
										220880,
										220883
									],
									[
										220978,
										220981
									],
									[
										221158,
										221161
									],
									[
										221228,
										221231
									],
									[
										221417,
										221420
									],
									[
										221497,
										221500
									],
									[
										221772,
										221775
									],
									[
										221793,
										221796
									],
									[
										222045,
										222048
									],
									[
										222059,
										222062
									],
									[
										222104,
										222107
									],
									[
										222129,
										222132
									],
									[
										222185,
										222188
									],
									[
										222210,
										222213
									],
									[
										222399,
										222402
									],
									[
										222410,
										222413
									],
									[
										222526,
										222529
									],
									[
										222542,
										222545
									],
									[
										222808,
										222811
									],
									[
										222826,
										222829
									],
									[
										223195,
										223198
									],
									[
										223219,
										223222
									],
									[
										223486,
										223489
									],
									[
										223503,
										223506
									],
									[
										223551,
										223554
									],
									[
										223579,
										223582
									],
									[
										223638,
										223641
									],
									[
										223666,
										223669
									],
									[
										223787,
										223790
									],
									[
										223801,
										223804
									],
									[
										223926,
										223929
									],
									[
										223945,
										223948
									],
									[
										224241,
										224244
									],
									[
										224422,
										224425
									],
									[
										224604,
										224607
									],
									[
										224786,
										224789
									],
									[
										224936,
										224939
									],
									[
										225075,
										225078
									],
									[
										225248,
										225251
									],
									[
										225522,
										225534
									],
									[
										225734,
										225746
									],
									[
										225968,
										225980
									],
									[
										226363,
										226375
									],
									[
										226537,
										226549
									],
									[
										226561,
										226573
									],
									[
										226620,
										226632
									],
									[
										226731,
										226743
									],
									[
										227025,
										227037
									],
									[
										227183,
										227195
									],
									[
										227235,
										227247
									],
									[
										227397,
										227409
									],
									[
										227517,
										227529
									],
									[
										227696,
										227708
									],
									[
										227857,
										227869
									],
									[
										227959,
										227971
									],
									[
										228166,
										228178
									],
									[
										228234,
										228246
									],
									[
										228278,
										228290
									],
									[
										228333,
										228345
									],
									[
										228399,
										228411
									],
									[
										228452,
										228464
									],
									[
										228505,
										228517
									],
									[
										228549,
										228561
									],
									[
										228677,
										228689
									],
									[
										228703,
										228715
									],
									[
										228894,
										228906
									],
									[
										228938,
										228950
									],
									[
										229360,
										229381
									],
									[
										229412,
										229433
									],
									[
										229655,
										229676
									],
									[
										229699,
										229720
									],
									[
										229820,
										229841
									],
									[
										229873,
										229894
									],
									[
										229926,
										229947
									],
									[
										229970,
										229991
									],
									[
										230098,
										230119
									],
									[
										230124,
										230145
									],
									[
										230315,
										230336
									],
									[
										230359,
										230380
									],
									[
										230650,
										230654
									],
									[
										230774,
										230778
									],
									[
										230894,
										230898
									],
									[
										230996,
										231000
									],
									[
										231243,
										231247
									],
									[
										231506,
										231510
									],
									[
										231768,
										231785
									],
									[
										231802,
										231819
									],
									[
										231844,
										231861
									],
									[
										232087,
										232104
									],
									[
										232163,
										232180
									],
									[
										232239,
										232256
									],
									[
										232557,
										232561
									],
									[
										232738,
										232742
									],
									[
										232858,
										232862
									],
									[
										232960,
										232964
									],
									[
										233207,
										233211
									],
									[
										233450,
										233454
									],
									[
										233660,
										233672
									],
									[
										233886,
										233898
									],
									[
										234120,
										234132
									],
									[
										234367,
										234379
									],
									[
										234593,
										234605
									],
									[
										234827,
										234839
									],
									[
										235097,
										235109
									],
									[
										235322,
										235334
									],
									[
										235556,
										235568
									],
									[
										235827,
										235838
									],
									[
										235935,
										235946
									],
									[
										236050,
										236061
									],
									[
										236268,
										236281
									],
									[
										236450,
										236463
									],
									[
										236650,
										236663
									],
									[
										236902,
										236915
									],
									[
										237230,
										237242
									],
									[
										237345,
										237357
									],
									[
										237454,
										237466
									],
									[
										237688,
										237700
									],
									[
										237813,
										237825
									],
									[
										237910,
										237922
									],
									[
										238118,
										238130
									],
									[
										238326,
										238338
									],
									[
										238428,
										238440
									],
									[
										238528,
										238540
									],
									[
										238568,
										238580
									],
									[
										238690,
										238702
									],
									[
										238825,
										238837
									],
									[
										238964,
										238976
									],
									[
										239057,
										239069
									],
									[
										239276,
										239288
									],
									[
										239401,
										239413
									],
									[
										239498,
										239510
									],
									[
										239706,
										239718
									],
									[
										239934,
										239946
									],
									[
										240171,
										240183
									],
									[
										240343,
										240355
									],
									[
										240550,
										240562
									],
									[
										240652,
										240664
									],
									[
										240752,
										240764
									],
									[
										240792,
										240804
									],
									[
										240914,
										240926
									],
									[
										241049,
										241061
									],
									[
										241188,
										241200
									],
									[
										241281,
										241293
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								239407,
								239407
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 21,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 91222.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "program.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15414,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										4015,
										4015
									],
									[
										9978,
										9978
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								4440,
								4440
							]
						],
						"settings":
						{
							"auto_name": "",
							"spell_check": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2308.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "mesh.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 786,
						"regions":
						{
						},
						"selection":
						[
							[
								337,
								409
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 127.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mesh.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9213,
						"regions":
						{
						},
						"selection":
						[
							[
								3640,
								3640
							]
						],
						"settings":
						{
							"auto_name": "#include \"mesh.h\"",
							"spell_check": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2013.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75,
						"regions":
						{
						},
						"selection":
						[
							[
								75,
								75
							]
						],
						"settings":
						{
							"auto_name": "steam 105",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "shader.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 302,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "shader.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2624,
						"regions":
						{
						},
						"selection":
						[
							[
								1991,
								1991
							]
						],
						"settings":
						{
							"auto_name": "#inculde \"shader.h\"",
							"spell_check": false,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1398.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "flat.ps",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117,
						"regions":
						{
						},
						"selection":
						[
							[
								45,
								45
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "default.vs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 510,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 582,
						"regions":
						{
						},
						"selection":
						[
							[
								582,
								582
							]
						],
						"settings":
						{
							"auto_name": "(SOccluderBspViewDesc) $4 = {",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "glew/glew-1.9.0/include/GL/glew.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 884678,
						"regions":
						{
						},
						"selection":
						[
							[
								247117,
								247128
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 87527.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "manipulator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 877,
						"regions":
						{
						},
						"selection":
						[
							[
								674,
								674
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "fwd.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 71,
						"regions":
						{
						},
						"selection":
						[
							[
								30,
								30
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "manipulator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2516,
						"regions":
						{
						},
						"selection":
						[
							[
								674,
								674
							]
						],
						"settings":
						{
							"auto_name": "#include \"manipulator.h\"",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32,
						"regions":
						{
						},
						"selection":
						[
							[
								32,
								32
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": ".hgignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18,
						"regions":
						{
						},
						"selection":
						[
							[
								11,
								11
							]
						],
						"settings":
						{
							"auto_name": ".depend",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "program.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1333,
						"regions":
						{
						},
						"selection":
						[
							[
								1122,
								1134
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1041.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11336,
						"regions":
						{
						},
						"selection":
						[
							[
								463,
								463
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "math.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7669,
						"regions":
						{
						},
						"selection":
						[
							[
								2054,
								2054
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1809.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "math.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24242,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										6903,
										6903
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								12399,
								12399
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 121,
						"regions":
						{
						},
						"selection":
						[
							[
								116,
								116
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Users/jonasm/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 189,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 878,
						"regions":
						{
						},
						"selection":
						[
							[
								442,
								442
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "glinc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 104,
						"regions":
						{
						},
						"selection":
						[
							[
								87,
								99
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "input.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 984,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								320
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "bsp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28143,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										760,
										1078
									],
									[
										12891,
										12891
									],
									[
										14940,
										14940
									],
									[
										16600,
										16600
									],
									[
										21404,
										21404
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								7745,
								7745
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4640.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "In file included from bsp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "In file included from /usr/include/c++/4.2.1/algorithm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/usr/include/c++/4.2.1/bits/stl_algo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 186131,
						"regions":
						{
						},
						"selection":
						[
							[
								4467,
								4467
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2308.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 31,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6027,
						"regions":
						{
						},
						"selection":
						[
							[
								343,
								343
							]
						],
						"settings":
						{
							"auto_name": "(x1 z0 - x2 z0 - x0 z1 + x2 z1 + x0 z2 - x1 z2 !=",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1135,
						"regions":
						{
						},
						"selection":
						[
							[
								355,
								355
							]
						],
						"settings":
						{
							"auto_name": "D0x0000: plane  0: 0   [i:0001,o:000d]",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/Users/jonasm/.lldbinit",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 304,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "type summary add --summary-string \"[${var.x} ${var",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 34,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84,
						"regions":
						{
						},
						"selection":
						[
							[
								84,
								84
							]
						],
						"settings":
						{
							"auto_name": "type summary add --summary-string \"[${var.x}, ${va",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "bsp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 493,
						"regions":
						{
						},
						"selection":
						[
							[
								393,
								340
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "debug.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1090,
						"regions":
						{
						},
						"selection":
						[
							[
								541,
								541
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "input.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1113,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								576
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "debug.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6573,
						"regions":
						{
						},
						"selection":
						[
							[
								5094,
								5094
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3733.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "text.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "base.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1074,
						"regions":
						{
						},
						"selection":
						[
							[
								1072,
								1072
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 259.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "text.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6389,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "fixedarray.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2328,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 321.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "bsp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28143,
						"regions":
						{
						},
						"selection":
						[
							[
								9452,
								9452
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5289.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "bsp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 493,
						"regions":
						{
						},
						"selection":
						[
							[
								172,
								172
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "glew.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 854006,
						"regions":
						{
						},
						"selection":
						[
							[
								255402,
								255431
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 333.0
	},
	"project": "screenbsp.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"bsp",
				"bsp.h"
			],
			[
				"bs",
				"bsp.h"
			],
			[
				"pro",
				"program.h"
			],
			[
				"",
				"program.cpp"
			],
			[
				"debug",
				"debug.cpp"
			],
			[
				"de",
				"default.vs"
			],
			[
				"pr",
				"program.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"debu",
				"debug.cpp"
			],
			[
				"deb",
				"debug.h"
			],
			[
				"mes",
				"mesh.cpp"
			],
			[
				"bspc",
				"bsp.cpp"
			],
			[
				"b",
				"basic.vs"
			],
			[
				"mesh",
				"mesh.cpp"
			],
			[
				"sh",
				"shader.h"
			],
			[
				"defa",
				"default.vs"
			],
			[
				"fl",
				"flat.ps"
			],
			[
				"def",
				"default.vs"
			],
			[
				"basic",
				"~/screenbsp/basic.vs"
			],
			[
				"sha",
				"shader.cpp"
			],
			[
				"me",
				"mesh.cpp"
			],
			[
				"shader",
				"shader.cpp"
			],
			[
				"basi",
				"basic.vs"
			],
			[
				"flat",
				"flat.ps"
			],
			[
				"glew.",
				"glew/glew-1.9.0/include/GL/glew.h"
			],
			[
				"progr",
				"program.cpp"
			],
			[
				".ps",
				"flat.ps"
			],
			[
				"glew.h",
				"glew/glew-1.9.0/include/GL/glew.h"
			],
			[
				"bas",
				"base.h"
			],
			[
				"glew",
				"glew.c"
			],
			[
				"g",
				"glinc.h"
			],
			[
				"shad",
				"shader.h"
			],
			[
				"make",
				"Makefile"
			],
			[
				"dbeu",
				"debug.h"
			],
			[
				"base",
				"base.h"
			],
			[
				"math",
				"math.h"
			],
			[
				"prog",
				"program.cpp"
			],
			[
				"m",
				"math.cpp"
			],
			[
				"mani",
				"manipulator.cpp"
			],
			[
				"p",
				"program.cpp"
			],
			[
				"ma",
				"math.cpp"
			],
			[
				"mai",
				"main.cpp"
			],
			[
				"progra",
				"program.h"
			],
			[
				"fixarray",
				"fixedarray.h"
			],
			[
				"mat",
				"math.cpp"
			],
			[
				"math.c",
				"math.cpp"
			],
			[
				"dbeug",
				"debug.h"
			],
			[
				"gl",
				"glinc.h"
			],
			[
				"man",
				"manipulator.cpp"
			],
			[
				"fw",
				"fwd.h"
			],
			[
				"inpu",
				"input.h"
			],
			[
				"in",
				"input.h"
			],
			[
				"input",
				"input.cpp"
			],
			[
				"ll",
				"~/.lldbinit"
			],
			[
				"math.cp",
				"math.cpp"
			],
			[
				"mah",
				"math.h"
			],
			[
				"fix",
				"fixedarray.h"
			],
			[
				"bsp.c",
				"bsp.cpp"
			],
			[
				"program",
				"program.cpp"
			],
			[
				"math.",
				"math.h"
			],
			[
				"progrma",
				"program.cpp"
			],
			[
				"tex",
				"text.cpp"
			],
			[
				"glin",
				"glinc.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
